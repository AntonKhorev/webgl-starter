'use strict'

const langStrings={
	en:{
		'options.canvas': "Canvas",
		'options.canvas.{width,height}': "Canvas {}",

		'options.background': "Background",
		'options.background.type': "Background type",
		'options.background.type.none': "none (transparent)",
		'options.background.type.solid': "solid color",
		'options.background.color': "Background color",
		'options.background.color.{r,g,b,a}': 'Background color {red,green,blue,alpha} component',
		'options.background.color.{r,g,b,a}.speed': 'Background color {red,green,blue,alpha} speed',

		'options.material': "Material",
		'options.material.scope': "Set material color for objects",
		'options.material.scope.global': "entire scene",
		'options.material.scope.vertex': "shape vertices",
		'options.material.scope.face': "shape faces",
		'options.material.data': "For each object have",
		'options.material.data.one': "one color",
		'options.material.data.sda': "specular/diffuse/ambient colors",
		'options.material.color': "Material color",
		'options.material.color.{r,g,b,a}': "Material color {red,green,blue,alpha} component",
		'options.material.color.{r,g,b,a}.speed': "Material color {red,green,blue,alpha} speed",
		'options.material.{specular,diffuse,ambient}Color': "Material {} color",
		'options.material.{specular,diffuse,ambient}Color.{r,g,b}': "{Specular,Diffuse,Ambient} color {red,green,blue} component",
		'options.material.{specular,diffuse,ambient}Color.{r,g,b}.speed': "Material {} color {red,green,blue,alpha} speed",
		'options-info.material.data.sda': "for use with Phong/Blinn–Phong shading models selected by <em>light type</em>",

		'options.light': "Light",
		'options.light.type': "Light type",
		'options.light.type.off': "off",
		'options.light.type.phong': "on with Phong reflections",
		'options.light.type.blinn': "on with Blinn–Phong reflections",
		'options.light.direction': "Light direction",
		'options.light.direction.{x,y,z}': "Light direction {} component",
		'options.light.direction.{x,y,z}.speed': "Light direction {} speed",
		'options-info.light.type.phong': "[[Shading#Directional_lighting|directional light]] with [[Phong reflection model]]",
		'options-info.light.type.blinn': "[[Shading#Directional_lighting|directional light]] with [[Blinn–Phong shading model|Blinn–Phong reflection model]]",

		'options.shape': "Shape",
		'options.shape.type': "Shape to draw",
		'options.shape.type.square': "square",
		'options.shape.type.triangle': "triangle",
		'options.shape.type.gasket': "Sierpinski gasket",
		'options.shape.type.cube': "cube",
		'options.shape.type.hat': "Mexican hat function",
		'options.shape.type.terrain': "diamond-square fractal terrain",
		'options.shape.elements': "Element array",
		'options.shape.elements.0': "not used",
		'options.shape.elements.{8,16,32}': "with {}-bit index",
		'options.shape.lod': "Shape detail level", // recursion depth for fractal shapes
		'options-info.shape.type.gasket': "[[Sierpinski triangle]]",
		'options-info.shape.type.hat': "[[Mexican hat wavelet]]",
		'options-info.shape.type.terrain': "generated with the [[Diamond-square algorithm|diamond-square algorithm]]",
		'options-info.shape.elements.{8,16}': "choosing 8- or 16-bit index may limit available shape detail levels",

		'options.transforms': "Transforms",
		'options.transforms.projection': "Projection",
		'options.transforms.projection.ortho': "orthogonal",
		'options.transforms.projection.perspective': "perspective",
		'options.transforms.model': "Model transform",
		'options.transforms.model.rotate.{x,y,z}.add': "Add rotation around {} axis",
		'options.transforms.model.rotate.{x,y,z}': "Angle of rotation around {} axis",
		'options.transforms.model.rotate.{x,y,z}.speed': "Speed of rotation around {} axis",
		'options-info.transforms.projection.ortho': "[[Orthographic projection|orthographic projection]]",
		'options-info.transforms.projection.perspective': "[[Transformation_matrix#Perspective_projection|perspective projection]]",

		'options.debug': "Debug options",
		'options.debug.shaders': "Log shader compilation errors",
		'options.debug.arrays': "Log allocated array sizes",
		'options.debug.inputs': "Log input values",
		'options.debug.animations': "Log animated values",

		'options-output.inputs': "Input method",
		'options-output.inputs.constant': "none",
		'options-output.inputs.slider': "slider",
		'options-output.inputs.mousemove{x,y}': "mouse {} axis",
		'options-output.inputs.gamepad{0,1,2,3}': "gamepad {} axis",
		'options-output.range': "with range",
		'options-output.addSpeed': "Add speed",

		'controls.type.mousemove{x,y}': "Move the mouse pointer {horizontally,vertically} over the canvas",
		'controls.to': "to update",

		'units.pixel.a': "px",
		'units.pixel.{1,2}': "pixel{,s}",
		'units.°/second.a': "°/s",
		'units.°/second.{1,2}': "degree{,s} per second",
		'units.second.a': "s",
		'units.1/second.{1,2}': "unit{,s} per second",
	},
	ru:{
		'options.canvas': "Элемент <code>canvas</code>",
		'options.canvas.{width,height}': "{Ширина,Высота} элемента <code>canvas</code>",

		'options.background': "Фон",
		'options.background.type': "Тип фона",
		'options.background.type.none': "прозрачный",
		'options.background.type.solid': "закрашенный",
		'options.background.color': "Цвет фона",
		'options.background.color.{r,g,b,a}': '{Красный ,Зелёный ,Синий ,Альфа-}канал фона',
		'options.background.color.{r,g,b,a}.speed': 'Скорость {красного ,зелёного ,синего ,альфа-}канала фона',

		'options.material': "Материал",
		'options.material.scope': "Задавать цвета данных объектов",
		'options.material.scope.global': "всей сцены",
		'options.material.scope.vertex': "вершин фигур",
		'options.material.scope.face': "граней фигур",
		'options.material.data': "Задавать для каждого объекта",
		'options.material.data.one': "один цвет",
		'options.material.data.sda': "бликовую/рассеянную/фоновую составляющие",
		'options.material.color': "Цвет материала",
		'options.material.color.{r,g,b,a}': "{Красный ,Зелёный ,Синий ,Альфа-}канал материала",
		'options.material.color.{r,g,b,a}.speed': "Скорость {красного ,зелёного ,синего ,альфа-}канала материала",
		'options.material.{specular,diffuse,ambient}Color': "{Бликовая,Рассеянная,Фоновая} составляющая цвета материала",
		'options.material.specularColor.{r,g,b}': "{Красный,Зелёный,Синий} канал бликовой составляющей",
		'options.material.diffuseColor.{r,g,b}': "{Красный,Зелёный,Синий} канал рассеянной составляющей",
		'options.material.ambientColor.{r,g,b}': "{Красный,Зелёный,Синий} канал фоновой составляющей",
		'options.material.specularColor.{r,g,b}.speed': "Скорость {красного,зелёного,синего} канала бликовой составляющей",
		'options.material.diffuseColor.{r,g,b}.speed': "Скорость {красного,зелёного,синего} канала рассеянной составляющей",
		'options.material.ambientColor.{r,g,b}.speed': "Скорость {красного,зелёного,синего} канала фоновой составляющей",
		'options-info.material.data.sda': "для использования с моделями освещения Фонга/Блинна-Фонга, задаваемыми <em>типом света</em>",

		'options.light': "Свет",
		'options.light.type': "Тип света",
		'options.light.type.off': "отключен",
		'options.light.type.phong': "включен с отражениями по Фонгу",
		'options.light.type.blinn': "включен с отражениями по Блинну-Фонгу",
		'options.light.direction': "Направление света",
		'options.light.direction.{x,y,z}': "{}-компонент направления света",
		'options.light.direction.{x,y,z}.speed': "скорость {}-компонента направления света",
		'options-info.light.type.phong': "направленный свет с [[Затенение_по_Фонгу#.D0.9C.D0.BE.D0.B4.D0.B5.D0.BB.D1.8C_.D0.BE.D1.81.D0.B2.D0.B5.D1.89.D0.B5.D0.BD.D0.B8.D1.8F|моделью освещения Фонга]]",
		'options-info.light.type.blinn': "направленный свет с моделью освещения Блинна-Фонга",

		'options.shape': "Фигура",
		'options.shape.type': "Рисовать фигуру",
		'options.shape.type.square': "квадрат",
		'options.shape.type.triangle': "треугольник",
		'options.shape.type.gasket': "салфетка Серпинского",
		'options.shape.type.cube': "куб",
		'options.shape.type.hat': "Mexican hat function",
		'options.shape.type.terrain': "фрактальный ландшафт",
		'options.shape.elements': "Element array",
		'options.shape.elements.0': "не используется",
		'options.shape.elements.{8,16,32}': "с {}-битным индексом",
		'options.shape.lod': "Уровень детализации", // recursion depth for fractal shapes
		'options-info.shape.type.gasket': "[[Треугольник Серпинского|треугольник Серпинского]]",
		'options-info.shape.type.terrain': "сгенерирован [[Алгоритм Diamond-Square|алгоритмом diamond-square]]",
		'options-info.shape.elements.{8,16}': "выбор 8- или 16-битного индекса может ограничить доступные уровни детализации",

		'options.transforms': "Преобразования",
		'options.transforms.projection': "Проекция",
		'options.transforms.projection.ortho': "ортогональная",
		'options.transforms.projection.perspective': "перспективная",
		'options.transforms.model': "Преобразование модели",
		'options.transforms.model.rotate.{x,y,z}.add': "Добавить вращение вокруг оси {}",
		'options.transforms.model.rotate.{x,y,z}': "Угол поворота вокруг оси {}",
		'options.transforms.model.rotate.{x,y,z}.speed': "Скорость поворота вокруг оси {}",

		'options.debug': "Отладка",
		'options.debug.shaders': "Выводить ошибки компиляции шейдеров",
		'options.debug.arrays': "Выводить размеры выделенных массивов",
		'options.debug.inputs': "Выводить значения вводов",
		'options.debug.animations': "Выводить анимированные значения",

		'options-output.inputs': "Способ ввода",
		'options-output.inputs.constant': "нет",
		'options-output.inputs.slider': "ползунок",
		'options-output.inputs.mousemove{x,y}': "ось {} мыши",
		'options-output.inputs.gamepad{0,1,2,3}': "ось {} геймпада",
		'options-output.range': "с диапазоном",
		'options-output.addSpeed': "Добавить скорость",

		'controls.type.mousemove{x,y}': "Перемещайте указатель мыши над элементом <code>canvas</code> в {горизонтальном,вертикальном} направлении,",
		'controls.to': "чтобы изменить",

		'units.pixel.a': "px",
		'units.pixel.{1,2,5}': "пиксел{ь,я,ей}",
		'units.°/second.a': "°/с",
		'units.°/second.{1,2,5}': "градус{,а,ов} в секунду",
		'units.second.a': "с",
		'units.1/second.{1,2,5}': "единиц{а,ы,} в секунду",
	}
}

for (let lang in langStrings) {
	let strings=langStrings[lang]
	strings=require('crnx-base/i18n-expand-curly')(strings)
	strings=require('crnx-base/i18n-link-wikipedia')(lang)(strings)
	strings=require('crnx-base/options-output-i18n')(lang)(strings)
	strings=require('crnx-base/code-output-i18n')(lang)(strings)
	langStrings[lang]=strings
}

module.exports=require('crnx-base/i18n')(langStrings)
