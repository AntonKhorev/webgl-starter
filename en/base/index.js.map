{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/main.js","src/options.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","isMousemoveInput","indexOf","indentLines","level","lines","map","line","Array","join","appendLinesToLastLine","addedLines","lastLine","pop","indent","exec","forEach","push","generateVertexShaderLines","animation","shader","generateFragmentShaderLines","hasInputsFor","generateControlMessageLines","inputOptions","filter","option","concat","generateInputLines","apply","getMinLabel","getStep","getMin","getMax","getMaxLabel","generateMakeProgramLines","debugShader","generateShapeLines","square","c","triangle","gasket","shape","generateBufferLines","generateInputHandlerLines","colorStates","optionPrefix","updateFnName","stateVarPrefix","toUpperCase","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","colorSingleListener","onlyInput","getOnlyInputFor","listenerIsSingleFn","debugInputs","listenerLines","colorMultipleListeners","varName","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","generateRenderLines","renderInner","background","needUpdateCanvasFunction","hasInputs","hasSliderInputs",2,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","id","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.animation","options.animation.none","options.animation.rotation","options.input","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shape.gasket.depth","options.animation.rotation.speed","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.debug","options.debugShader","options.debugInputs","controls.type.mousemovex","controls.type.mousemovey","controls.to","$","each","showHideSuboptionInputs","optionName","optionValue","optionsNode","find","show","not","hide","updateCode","codeNode","text","cloneWithoutHidden","window","hljs","highlightBlock","writeGeneralOption","append","availableValues","availableValue","val","change","this","value","writeInputOption","inputId","attr","parseFloat","availableInputTypes","availableInputType","writeDebugOption","prop","writeOptions","generalOptions","debugOptions","hideSuboptionInputs","writeButtons","click","open","containerNode","empty","./code.js","./options.js",3,"Option","defaultValue","undefined","prototype","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","Object","create","constructor","toString","replace","DebugOption","reset","some","matchedOptions","newOptions","generalOption"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\tfunction indentLines(level,lines) {\r\n\t\treturn lines.map(function(line){\r\n\t\t\treturn Array(level+1).join(\"\t\")+line;\r\n\t\t});\r\n\t}\r\n\tfunction appendLinesToLastLine(lines,addedLines) {\r\n\t\tvar lastLine=lines.pop();\r\n\t\tvar indent=/^\\s*/.exec(lastLine)[0];\r\n\t\taddedLines.forEach(function(line,i){\r\n\t\t\tif (i==0) {\r\n\t\t\t\tlines.push(lastLine+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(indent+line);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction generateVertexShaderLines() {\r\n\t\tlines=[];\r\n\t\tif (options.animation=='rotation') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"uniform float rotationAngle;\",\r\n\t\t\t\t\"attribute vec2 position;\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 position;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"void main() {\"\r\n\t\t);\r\n\t\tif (options.animation=='rotation') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfloat c=cos(radians(rotationAngle));\",\r\n\t\t\t\t\"\tfloat s=sin(radians(rotationAngle));\",\r\n\t\t\t\t\"\tgl_Position=vec4(mat2(\",\r\n\t\t\t\t\"\t\t c, s,\",\r\n\t\t\t\t\"\t\t-s, c\",\r\n\t\t\t\t\"\t)*position,0,1);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tgl_Position=position;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tinterpolatedColor=color;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\treturn [\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else if (options.hasInputsFor('shader.single.color')) {\r\n\t\t\treturn [\r\n\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\"+colorValue('shader.single.color')+\");\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\tfunction generateControlMessageLines() {\r\n\t\tvar lines=options.inputOptions.filter(function(option){\r\n\t\t\treturn isMousemoveInput(option.name);\r\n\t\t}).map(function(option){\r\n\t\t\treturn \"\t<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\";\r\n\t\t});\r\n\t\tif (lines.length) {\r\n\t\t\treturn [\"<ul>\"].concat(lines,[\"</ul>\"]);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\tfunction generateInputLines() {\r\n\t\treturn [].concat.apply([],\r\n\t\t\toptions.inputOptions.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).map(function(option){\r\n\t\t\t\treturn [\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"+\r\n\t\t\t\t\t\t(option.getStep()==1\r\n\t\t\t\t\t\t\t? \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t\t: \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t)+\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\",\r\n\t\t\t\t\t\"</div>\",\r\n\t\t\t\t];\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tfunction generateMakeProgramLines() {\r\n\t\tlines=[\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"\tvar vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(vertexShader);\",\r\n\t\t];\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar program=gl.createProgram();\",\r\n\t\t\t\"\tgl.attachShader(program,vertexShader);\",\r\n\t\t\t\"\tgl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"\tgl.linkProgram(program);\",\r\n\t\t\t\"\treturn program;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateShapeLines() {\r\n\t\tvar c=options.shader=='vertex';\r\n\t\tfunction square() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=4;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t// x    y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-0.5,-0.5,\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,-0.5,\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,+0.5,\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\"\t-0.5,+0.5,\"+(c?\" 1.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction triangle() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=3;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction gasket() {\r\n\t\t\tlines=[];\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketMaxDepth=10;\",\r\n\t\t\t\t\t\"var nMaxVertices=Math.pow(3,gasketMaxDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"var gasketDepth,nVertices;\",\r\n\t\t\t\t\t\"function storeGasketVertices(newGasketDepth) {\",\r\n\t\t\t\t\t\"\tgasketDepth=newGasketDepth\",\r\n\t\t\t\t\t\"\tnVertices=Math.pow(3,gasketDepth)*3;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketDepth=\"+intOptionValue('shape.gasket.depth')+\";\",\r\n\t\t\t\t\t\"var nVertices=Math.pow(3,gasketDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"function storeGasketVertices() {\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tvar iv=0;\"\r\n\t\t\t);\r\n\t\t\tif (c) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v,r,g,b) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=r; vertices[iv++]=g; vertices[iv++]=b;\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfunction mix(a,b,m) {\",\r\n\t\t\t\t\"\t\treturn [\",\r\n\t\t\t\t\"\t\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\t\t\"\t\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\t\t\"\t\t];\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\tfunction triangle(depth,a,b,c) {\",\r\n\t\t\t\t\"\t\tif (depth<=0) {\"\r\n\t\t\t);\r\n\t\t\tif (c) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a,1.0,0.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b,0.0,1.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c,0.0,0.0,1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\t\t} else {\",\r\n\t\t\t\t\"\t\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\t\t\"\t\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\t\t\"\t\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\t\t\"\t\t}\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\ttriangle(\",\r\n\t\t\t\t\"\t\tgasketDepth,\",\r\n\t\t\t\t\"\t\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\t\t\"\t);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices(\"+intOptionValue('shape.gasket.depth')+\");\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tif (options.shape=='square') {\r\n\t\t\treturn square();\r\n\t\t} else if (options.shape=='triangle') {\r\n\t\t\treturn triangle();\r\n\t\t} else if (options.shape=='gasket') {\r\n\t\t\treturn gasket();\r\n\t\t}\r\n\t}\r\n\tfunction generateBufferLines() {\r\n\t\tvar lines=[\r\n\t\t\t\"var buffer=gl.createBuffer();\",\r\n\t\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,buffer);\",\r\n\t\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\",\r\n\t\t\t\"\",\r\n\t\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\",\r\n\t\t];\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tpositionLoc,2,gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*5,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*5,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*2\",\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(positionLoc,2,gl.FLOAT,false,0,0);\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateInputHandlerLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"[].forEach.call(document.querySelectorAll('[id^=\\\"\"+optionPrefix+\".\\\"]'),function(el){\",\r\n\t\t\t\t\t\"\tel\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"document.getElementById('\"+onlyInput.name+\"')\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tvar listenerIsSingleFn=( options.animation=='rotation' && !options.debugInputs );\r\n\t\t\tif (listenerIsSingleFn) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\".addEventListener('change',\"+updateFnName+\");\",\r\n\t\t\t\t]);\r\n\t\t\t} else {\r\n\t\t\t\tvar listenerLines=[\r\n\t\t\t\t\t\".addEventListener('change',function(){\",\r\n\t\t\t\t];\r\n\t\t\t\tif (options.debugInputs) {\r\n\t\t\t\t\tlistenerLines.push(\r\n\t\t\t\t\t\t\"\tconsole.log(this.id,'input value:',parseFloat(this.value));\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlistenerLines.push(\r\n\t\t\t\t\t\"\t\"+updateFnName+\"();\"\r\n\t\t\t\t);\r\n\t\t\t\tif (options.animation!='rotation') {\r\n\t\t\t\t\tlistenerLines.push(\r\n\t\t\t\t\t\t\"\tupdateCanvas();\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlistenerLines.push(\r\n\t\t\t\t\t\"});\"\r\n\t\t\t\t);\r\n\t\t\t\tappendLinesToLastLine(lines,listenerLines);\r\n\t\t\t}\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"});\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"document.getElementById('\"+name+\"').addEventListener('change',function(){\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (options.debugInputs) {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"\tconsole.log(this.id,'input value:',parseFloat(this.value));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\t\"+updateFnName+\"();\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (options.animation!='rotation') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"\tupdateCanvas();\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"});\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"canvas.addEventListener('mousemove',function(ev){\",\r\n\t\t\t\t\t\t\"\tvar rect=this.getBoundingClientRect();\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (options[name+'.input']=='mousemovex') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"\t\"+varName+\"=(ev.clientX-rect.left)/(rect.width-1);\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else if (options[name+'.input']=='mousemovey') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"\t\"+varName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (options.debugInputs) {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"\tconsole.log('\"+name+\" input value:',\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\t\"+updateFnName+\"();\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (options.animation!='rotation') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"\tupdateCanvas();\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"});\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options['shape.gasket.depth.input']=='slider') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"document.getElementById('shape.gasket.depth').addEventListener('change',function(){\"\r\n\t\t\t);\r\n\t\t\tif (options.debugInputs) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tconsole.log(this.id,'input value:',parseInt(this.value));\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tstoreGasketVertices(parseInt(this.value));\",\r\n\t\t\t\t\"\tgl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\"\r\n\t\t\t);\r\n\t\t\tif (options.animation!='rotation') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tupdateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"});\"\r\n\t\t\t);\r\n\t\t} else if (isMousemoveInput('shape.gasket.depth')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"canvas.addEventListener('mousemove',function(ev){\",\r\n\t\t\t\t\"\tvar rect=this.getBoundingClientRect();\"\r\n\t\t\t);\r\n\t\t\tif (options['shape.gasket.depth.input']=='mousemovex') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tvar newGasketDepth=Math.floor((gasketMaxDepth+1)*(ev.clientX-rect.left)/rect.width);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options['shape.gasket.depth.input']=='mousemovey') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tvar newGasketDepth=Math.floor((gasketMaxDepth+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (newGasketDepth!=gasketDepth) {\"\r\n\t\t\t);\r\n\t\t\tif (options.debugInputs) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\tconsole.log('shape.gasket.depth input value:',newGasketDepth);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\t\tstoreGasketVertices(newGasketDepth);\",\r\n\t\t\t\t\"\t\tgl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\"\r\n\t\t\t);\r\n\t\t\tif (options.animation!='rotation') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\tupdateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"});\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options['animation.rotation.speed.input']=='slider' && options.debugInputs) {\r\n\t\t\t// listener is only for logging\r\n\t\t\tlines.push(\r\n\t\t\t\t\"document.getElementById('animation.rotation.speed').addEventListener('change',function(){\",\r\n\t\t\t\t\"\tconsole.log(this.id,'input value:',parseFloat(this.value));\",\r\n\t\t\t\t\"});\"\r\n\t\t\t);\r\n\t\t} else if (isMousemoveInput('animation.rotation.speed')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var rotationSpeed=\"+floatOptionValue('animation.rotation.speed')+\";\",\r\n\t\t\t\t\"canvas.addEventListener('mousemove',function(ev){\",\r\n\t\t\t\t\"\tvar rect=this.getBoundingClientRect();\"\r\n\t\t\t);\r\n\t\t\tif (options['animation.rotation.speed.input']=='mousemovex') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trotationSpeed=-1+2*(ev.clientX-rect.left)/(rect.width-1);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options['animation.rotation.speed.input']=='mousemovey') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trotationSpeed=-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.debugInputs) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tconsole.log('animation.rotation.speed input value:',rotationSpeed);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"});\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (lines.length) lines.push(\"\t\");\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateRenderLines() {\r\n\t\tfunction renderInner() {\r\n\t\t\tvar lines=[];\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tif (options['animation.rotation.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"gl.uniform1f(rotationAngleLoc,\"+floatOptionValue('animation.rotation.speed')+\"*360*(time-startTime)/1000);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (options['animation.rotation.speed.input']=='slider') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"var rotationSpeed=parseFloat(document.getElementById('animation.rotation.speed').value);\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"rotationAngle+=rotationSpeed*360*(time-prevTime)/1000;\",\r\n\t\t\t\t\t\t\"gl.uniform1f(rotationAngleLoc,rotationAngle);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options.shape=='square') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLE_FAN,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLES,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=[];\r\n\t\tif (options.animation=='rotation') {\r\n\t\t\tif (options['animation.rotation.speed.input']!='constant') {\r\n\t\t\t\t// angle needs to be a state only if speed is controllable\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var rotationAngle=0;\",\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar needUpdateCanvasFunction=options.animation=='rotation'||options.hasInputs();\r\n\t\tif (needUpdateCanvasFunction) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateCanvas(time) {\"\r\n\t\t\t);\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tindentLines(1,renderInner())\r\n\t\t\t);\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tif (options['animation.rotation.speed.input']!='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trequestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"requestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"updateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\trenderInner()\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\treturn [].concat([\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t],options.hasSliderInputs()?[\r\n\t\t\"<style>\",\r\n\t\t\"\tlabel {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 15em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.min {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 1.5em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.max {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 1.5em;\",\r\n\t\t\"\t\ttext-align: left;\",\r\n\t\t\"\t}\",\r\n\t\t\"</style>\",\r\n\t]:[],[\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t],indentLines(1,generateVertexShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\t\"\tprecision mediump float;\",\r\n\t],indentLines(1,generateFragmentShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='512' height='512'></canvas>\",\r\n\t\t\"</div>\",\r\n\t],generateControlMessageLines(),generateInputLines(),[\r\n\t\t\"<script>\",\r\n\t],indentLines(1,generateMakeProgramLines()),[\r\n\t\t\"\t\",\r\n\t\t\"\tvar canvas=document.getElementById('myCanvas');\",\r\n\t\t\"\tvar gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\",\r\n\t],(options.background=='solid' && !options.hasInputsFor('background.solid.color'))?[\r\n\t\t\"\tgl.clearColor(\"+colorValue('background.solid.color')+\");\",\r\n\t]:[],[\r\n\t\t\"\tvar program=makeProgram(\",\r\n\t\t\"\t\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\"\t\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\"\t);\",\r\n\t\t\"\tgl.useProgram(program);\",\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateShapeLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateBufferLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateInputHandlerLines()),options.animation=='rotation'?[\r\n\t\t\"\tvar rotationAngleLoc=gl.getUniformLocation(program,'rotationAngle');\",\r\n\t\t\"\t\",\r\n\t]:[],indentLines(1,generateRenderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</body>\",\r\n\t\t\"</html>\",\r\n\t]).join(\"\\n\");\r\n};\r\n",null,"var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.animation': 'Animation',\r\n\t\t'options.animation.none': 'None',\r\n\t\t'options.animation.rotation': 'Rotation around z axis',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'options.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t//'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShader': 'Log shader compilation errors',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar containerNode=$(this);\r\n\t\tvar optionsNode;\r\n\t\tvar codeNode;\r\n\t\tvar options=new Options();\r\n\r\n\t\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\t\t// TODO sub-sub option support?\r\n\t\t\toptionsNode.find(\"[data-option^='\"+optionName+\".']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tcodeNode.text(generateCode(options.cloneWithoutHidden(),i18n));\r\n\t\t\tif (window.hljs) hljs.highlightBlock(codeNode[0]);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option.name,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option.name,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri(codeNode.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri(codeNode.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tcontainerNode.empty().append(optionsNode=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\tcontainerNode.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append(codeNode=$(\"<code>\").text(generateCode(options.cloneWithoutHidden(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock(codeNode[0]);\r\n\t\t} else {\r\n\t\t\tcontainerNode.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\tcontainerNode.append(writeButtons());\r\n\t});\r\n});\r\n","Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(this.name+'.') && !optionStartsWith(this.name+'.'+value+'.');\r\n};\r\n\r\nInputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n}\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n}\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n}\r\nInputOption.prototype.getStep=function(){\r\n\tif (this.availableValues.length>=3) {\r\n\t\treturn this.availableValues[2];\r\n\t} else {\r\n\t\treturn 'any';\r\n\t}\r\n}\r\nInputOption.prototype.getMinLabel=function(){\r\n\treturn this.getMin().toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(){\r\n\treturn this.getMax().toString().replace('-','−');\r\n};\r\n\r\nDebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar Options=function(){\r\n\tthis.reset();\r\n};\r\nOptions.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex']),\r\n\tnew Option('shape',['square','triangle','gasket']),\r\n\tnew Option('animation',['none','rotation']),\r\n];\r\nOptions.prototype.inputOptions=[\r\n\tnew InputOption('background.solid.color.r',[0,1],1),\r\n\tnew InputOption('background.solid.color.g',[0,1],1),\r\n\tnew InputOption('background.solid.color.b',[0,1],1),\r\n\tnew InputOption('background.solid.color.a',[0,1],1),\r\n\tnew InputOption('shader.single.color.r',[0,1],1),\r\n\tnew InputOption('shader.single.color.g',[0,1]),\r\n\tnew InputOption('shader.single.color.b',[0,1]),\r\n\tnew InputOption('shader.single.color.a',[0,1],1),\r\n\tnew InputOption('shape.gasket.depth',[0,10,1],6),\r\n\tnew InputOption('animation.rotation.speed',[-1,1],0.2),\r\n];\r\nOptions.prototype.debugOptions=[\r\n\tnew DebugOption('debugShader',true),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptions.prototype.reset=function(){\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n};\r\n\r\n// TODO check what .has*() fns are in use\r\nOptions.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nOptions.prototype.cloneWithoutHidden=function(){\r\n\t// clone and set .input=constant for hidden sections\r\n\tvar newOptions=new Options();\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t\tif (\r\n\t\t\tthis.generalOptions.some(function(generalOption){\r\n\t\t\t\treturn generalOption.doesValueHideOption(this[generalOption.name],option);\r\n\t\t\t},this)\r\n\t\t) {\r\n\t\t\tnewOptions[option.name+'.input']='constant';\r\n\t\t} else {\r\n\t\t\tnewOptions[option.name+'.input']=this[option.name+'.input'];\r\n\t\t}\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\treturn newOptions;\r\n};\r\n\r\nmodule.exports=Options;\r\n"],"sourceRoot":"."}