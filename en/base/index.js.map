{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/lines.js","src/listeners.js","src/main.js","src/options.js","src/shapes.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","listeners","shapes","Lines","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","glslColorValue","g","b","isMousemoveInput","indexOf","makeShape","className","shape","charAt","toUpperCase","slice","shapeParams","getInputOptionsFor","map","option","value","changes","min","getMin","max","getMax","shapeCtorArgs","shader","concat","Function","prototype","bind","apply","generateHtmlStyleLines","lines","hasSliderInputs","wrapIfNotEmpty","generateVertexShaderLines","generateMain","forEach","d","D","optName","varName","needsTransform","needsUniform","needAspectConstant","projection","needTransformedPosition","use2dTransform","transformOrder","transformName","rotate.x","rotate.y","rotate.z","needAspectUniform","dim","hasInputsFor","indent","generateFragmentShaderLines","twoSided","generateHtmlControlMessageLines","writeOptionGroup","group","filter","inputOptions","transformOptions","generateHtmlInputLines","getMinLabel","getStep","getMaxLabel","generateJsMakeProgramLines","debugShader","wrap","generateJsInitLines","background","generateJsInputHandlerLines","writeListener","listener","write","isAnimated","debugInputs","canvasUpdater","canvasListener","wh","SliderListener","enter","log","post","colorStates","optionPrefix","updateFnName","stateVarPrefix","c","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","join","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","colorMultipleListeners","canvasMousemoveListener","prexy","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","CanvasMousemoveListener","getInputsFor","lastIndexOf","substring","S","undefined","cond","updateName","entry","state","generateJsRenderLines","renderInner","renderInnerTransforms","needStartTime","needPrevTime","needWrap","innerTransformsLines","writeDraw","innerLines","hasInputs","scriptLines","interleave","writeInit","Array","./lines.js","./listeners.js","./shapes.js",2,"this","data","addFlattenedArgs","flattenArgs","arguments","push","isArray","lastLine","pop","level","line","isEmpty","first","begin","end","unshift","replace","match",3,"Listener","entries","makePushArgs","where","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","exec","id","Object","create","constructor","query","xLine","yLine",4,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shader.face","options.shader.light","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.shape.hat","options.shape.terrain","options.projection","options.projection.ortho","options.projection.perspective","options.input","options.canvas.width","options.canvas.height","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shape.gasket.lod","options.shape.hat.lod","options.shape.terrain.lod","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShader","options.debugInputs","options.formatting","options.indent","options.indent.tab","options.indent.2","options.indent.4","options.indent.8","controls.type.mousemovex","controls.type.mousemovey","controls.to","$","each","showHideSuboptionInputs","optionName","optionValue","$options","find","show","not","hide","updateCode","clearTimeout","codeUpdateTimeoutId","setTimeout","$code","text","fix","window","hljs","highlightBlock","codeUpdateDelay","writeGeneralOption","append","availableValues","availableValue","val","change","writeInputOption","inputListener","that","checkValidity","parseFloat","sliderInput","numberInput","inputId","attr","getSetupStep","on","click","defaultValue","availableInputTypes","availableInputType","writeDebugOption","prop","makeSortable","$sortableRoot","callback","$dragged","children","prepend","ev","parent","originalEvent","dataTransfer","effectAllowed","setData","setDragImage","addClass","keydown","$handle","$sorted","keyCode","prev","before","focus","next","after","preventDefault","dropEffect","$target","nextAll","is","prevAll","removeClass","writeOptions","$transforms","generalOptions","transforms","transform","debugOptions","formattingOptions","get","hideSuboptionInputs","writeButtons","open","$container","empty","./code.js","./options.js",5,"Option","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","FloatInputOption","IntInputOption","CanvasIntInputOption","DebugOption","OptionsBlueprint","reset","valueOption","speedOption","groupNames","groupName","OptionsInstance","blueprint","isHidden","some","generalOption","matchedOptions","endsWith","suffix",6,"Shape","shaderType","glPrimitive","usesElements","getNumbersPerPosition","getNumbersPerNormal","getNumbersPerColor","getNumbersPerVertex","writeBufferData","writeArraysAndBufferData","cv","writeArrays","LodShape","lod","getDistinctVertexCount","getTotalVertexCount","writeStoreShape","Mesh","writeMeshInit","writeMeshVertex","Square","Triangle","Gasket","lodSymbol","Cube","Hat","Terrain"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,GAAAK,GAAAX,EAAA,kBACAY,EAAAZ,EAAA,eACAa,EAAAb,EAAA,aAEAU,GAAAJ,QAAA,SAAAQ,EAAAC,GACA,QAAAC,GAAAC,GACA,MAAAC,UAAAJ,EAAAG,IAEA,QAAAE,GAAAF,GACA,MAAAH,GAAAG,GAAAG,QAAA,GAEA,QAAAC,GAAAC,GACA,MAAAH,GAAAG,EAAA,MAAA,IACAH,EAAAG,EAAA,MAAA,IACAH,EAAAG,EAAA,MAAA,IACAH,EAAAG,EAAA,MAEA,QAAAC,GAAAD,GACA,GAAA3B,GAAAwB,EAAAG,EAAA,MACAE,EAAAL,EAAAG,EAAA,MACAG,EAAAN,EAAAG,EAAA,MACAvB,EAAAoB,EAAAG,EAAA,KACA,OAAA3B,IAAAI,GAAAyB,GAAAzB,GAAA0B,GAAA1B,EACAA,EAEAJ,EAAA,IAAA6B,EAAA,IAAAC,EAAA,IAAA1B,EAGA,QAAA2B,GAAAT,GACA,OAAA,aAAA,cAAAU,QAAAb,EAAAG,EAAA,YAAA,EAGA,QAAAW,KACA,GAAAC,GAAAf,EAAAgB,MAAAC,OAAA,GAAAC,cAAAlB,EAAAgB,MAAAG,MAAA,GACAC,EAAApB,EAAAqB,mBAAA,SAAAC,IAAA,SAAAC,GACA,MAAA,YAAAvB,EAAAuB,EAAApB,KAAA,WAEAqB,MAAAtB,EAAAqB,EAAApB,MACAsB,SAAA,IAIAD,MAAAtB,EAAAqB,EAAApB,MACAsB,SAAA,EACAC,IAAAH,EAAAI,SACAC,IAAAL,EAAAM,YAIAC,GAAA,KAAA9B,EAAA+B,QAAAC,OAAAZ,EACA,OAAA,KAAAa,SAAAC,UAAAC,KAAAC,MAAAtC,EAAAiB,GAAAe,IAIA,QAAAO,KACA,GAAAC,GAAA,GAAAvC,EAoBA,OAnBAC,GAAAuC,mBACAD,EAAArD,EACA,UACA,0BACA,gBACA,sBACA,IACA,SACA,0BACA,eACA,sBACA,IACA,SACA,0BACA,eACA,qBACA,KAGAqD,EAAAE,eACA,UACA,YAGA,QAAAC,KAWA,QAAAC,KACA,GAAAJ,GAAA,GAAAvC,EA2LA,QA1LA,IAAA,IAAA,KAAA4C,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA1B,cACA4B,EAAA,UAAAF,EACAG,EAAA,SAAAF,CACA7C,GAAAgD,eAAAF,KACA9C,EAAAiD,aAAA,UAAAL,GACAN,EAAArD,EACA,UAAA2D,EAAA,gBAAAG,EAAA,MACA,UAAAH,EAAA,gBAAAG,EAAA,OAGAT,EAAArD,EACA,UAAA2D,EAAA,gBAAAvC,EAAAyC,GAAA,MACA,UAAAF,EAAA,gBAAAvC,EAAAyC,GAAA,UAKAI,GACAZ,EAAArD,EACA,gBAAAiB,EAAA,gBAAA,MAAAA,EAAA,iBAAA,OAGA,eAAAF,EAAAmD,YACAb,EAAArD,EACA,mBACA,yCACA,uBAGAmE,EACAd,EAAArD,EACA,6BAGAqD,EAAArD,EACA,gBAGAoE,EACAf,EAAA3D,EACA,sBACA,YACA,WACA,WAGA2D,EAAA3D,EACA,YAEAqB,EAAAsD,eAAAX,QAAA,SAAAY,GACAvD,EAAAgD,eAAAO,IAGAjB,EAAA3D,GACA6E,YACA,SACA,uBACA,uBACA,uBACA,sBACA,KAEAC,YACA,SACA,uBACA,uBACA,uBACA,sBACA,KAEAC,YACA,SACA,uBACA,uBACA,uBACA,sBACA,MAEAH,MAEA,eAAAvD,EAAAmD,YACAb,EAAA3D,EACA,8CACA,uBACA,uBACA,mCACA,sBACA,MAIAyE,IACAd,EAAA3D,EACA,KAEA2D,EAAArD,EACA,oCAGA,SAAAe,EAAAmD,WACAQ,GAAAT,EACAZ,EAAA3D,EACA,kCAEAqC,EAAA4C,IAAA,GACAtB,EAAA3D,EACA,2BAGA,eAAAqB,EAAAmD,aACAQ,GAAAT,EACAZ,EAAA3D,EACA,SACA,kDACA,kDACA,sEACA,iDACA,KAGA2D,EAAA3D,EACA,SACA,2CACA,2CACA,+DACA,0CACA,MAIA2D,EAAA3D,EACA,KAEA,SAAAqB,EAAA+B,SACA,eAAA/B,EAAAmD,YACAb,EAAArD,EACA,gDAGA+B,EAAA4C,IAAA,EACAtB,EAAArD,EACA,6BAGAqD,EAAArD,EACA,wCAGAe,EAAAsD,eAAAX,QAAA,SAAAY,GACAvD,EAAAgD,eAAAO,IAGAjB,EAAA3D,GACA6E,YACA,SACA,kBACA,kBACA,iBACA,KAEAC,YACA,SACA,kBACA,kBACA,iBACA,KAEAC,YACA,SACA,kBACA,kBACA,iBACA,MAEAH,MAEAjB,EAAA3D,EACA,OAGA,UAAAqB,EAAA+B,QAAA,QAAA/B,EAAA+B,SACAO,EAAArD,EACA,4BAGAqD,EAtMA,GAAAe,GACA,GAAArC,EAAA4C,MACA5D,EAAAgD,eAAA,cACAhD,EAAAgD,eAAA,aACAhD,EAAAgD,eAAA,YAEAW,EAAA3D,EAAA6D,aAAA,UACAX,GAAAS,GAAA3D,EAAA,iBAAAA,EAAA,iBACAoD,EAAA,SAAApD,EAAA+B,QAAA,eAAA/B,EAAAmD,WAiMAb,EAAA,GAAAvC,EAqCA,OApCA4D,IACArB,EAAArD,EAAA,0BAEA,IAAA,IAAA,KAAA0D,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA1B,cACA4B,EAAA,UAAAF,EACAG,EAAA,SAAAF,CACA7C,GAAAiD,aAAAH,IACAR,EAAArD,EAAA,iBAAA8D,EAAA,OAGAM,EACAf,EAAArD,EAAA,4BAEAqD,EAAArD,EAAA,4BAEA,SAAAe,EAAA+B,SACA,eAAA/B,EAAAmD,YACAb,EAAArD,EAAA,kCAEA+B,EAAA4C,IAAA,GACAtB,EAAArD,EAAA,0BAEAqD,EAAArD,EAAA,sCAEA,UAAAe,EAAA+B,QAAA,QAAA/B,EAAA+B,SACAO,EAAArD,EACA,wBACA,mCAGAqD,EAAArD,EACA,gBACAyD,IAAAoB,SACA,KAEAxB,EAEA,QAAAyB,KACA,GAAAzB,GAAA,GAAAvC,EAoEA,OAnEAuC,GAAArD,EACA,4BAEA,UAAAe,EAAA+B,OACA/B,EAAA6D,aAAA,uBACAvB,EAAArD,EACA,sBACA,gBACA,uBACA,KAGAqD,EAAArD,EACA,gBACA,sBAAAwB,EAAA,uBAAA,KACA,KAGA,UAAAT,EAAA+B,QAAA,QAAA/B,EAAA+B,OACAO,EAAArD,EACA,kCACA,gBACA,mCACA,KAEA,SAAAe,EAAA+B,SACA,eAAA/B,EAAAmD,YACAb,EAAArD,EACA,kCAGAqD,EAAArD,EACA,mCACA,gBACA,wCACA,wCACA,yCACA,2BAEA,SAAAe,EAAAmD,WACAb,EAAArD,EACA,iCAEA,eAAAe,EAAAmD,YACAb,EAAArD,EACA,wCAGAqD,EAAArD,EACA,0CAEA+B,EAAAgD,UACA1B,EAAArD,EACA,+BAGAqD,EAAArD,EACA,2CACA,0BACA,sBACA,iBACA,oCACA,oDACA,UACA,MAGAqD,EAEA,QAAA2B,KAEA,QAAAC,GAAAC,GACAA,EAAAC,OAAA,SAAA7C,GACA,MAAAX,GAAAW,EAAApB,QACAwC,QAAA,SAAApB,GACAe,EAAArD,EACA,OAAAgB,EAAA,iBAAAD,EAAAuB,EAAApB,KAAA,WAAA,IAAAF,EAAA,eAAA,YAAAA,EAAA,WAAAsB,EAAApB,MAAA,oBANA,GAAAmC,GAAA,GAAAvC,EAYA,OAFAmE,GAAAlE,EAAAqE,cACAH,EAAAlE,EAAAsE,kBACAhC,EAAAE,eACA,OACA,SAGA,QAAA+B,KAEA,QAAAL,GAAAC,GACAA,EAAAC,OAAA,SAAA7C,GACA,MAAA,UAAAvB,EAAAuB,EAAApB,KAAA,YACAwC,QAAA,SAAApB,GACAe,EAAArD,EACA,QACA,gBAAAsC,EAAApB,KAAA,KAAAF,EAAA,WAAAsB,EAAApB,MAAA,YACA,sBAAAoB,EAAAiD,cAAA,YACA,GAAAjD,EAAAkD,UACA,2BAAAlD,EAAApB,KAAA,UAAAoB,EAAAI,SAAA,UAAAJ,EAAAM,SAAA,YAAA3B,EAAAqB,EAAApB,MAAA,OACA,2BAAAoB,EAAApB,KAAA,UAAAoB,EAAAI,SAAA,UAAAJ,EAAAM,SAAA,WAAAN,EAAAkD,UAAA,YAAApE,EAAAkB,EAAApB,MAAA,QAEA,sBAAAoB,EAAAmD,cAAA,UACA,YAdA,GAAApC,GAAA,GAAAvC,EAoBA,OAFAmE,GAAAlE,EAAAqE,cACAH,EAAAlE,EAAAsE,kBACAhC,EAEA,QAAAqC,KACA,GAAArC,GAAA,GAAAvC,EA4BA,OA3BAuC,GAAArD,EACA,sDACA,iDACA,mCAEAe,EAAA4E,aACAtC,EAAArD,EACA,+GAGAqD,EAAArD,EACA,0DACA,qDACA,qCAEAe,EAAA4E,aACAtC,EAAArD,EACA,mHAGAqD,EAAArD,EACA,kCACA,yCACA,2CACA,2BACA,mBAEAqD,EAAAuC,KACA,4DACA,KAGA,QAAAC,KACA,GAAAxC,GAAA,GAAAvC,EA4BA,OA3BAuC,GAAArD,EACA,kDACA,+EAEA,SAAAe,EAAA+E,YAAA/E,EAAA6D,aAAA,2BAEA,GAAA7D,EAAA,6BACA,GAAAA,EAAA,6BACA,GAAAA,EAAA,6BACA,GAAAA,EAAA,6BAEAsC,EAAArD,EACA,iBAAAsB,EAAA,0BAAA,MAGAS,EAAA4C,IAAA,GACAtB,EAAArD,EACA,6BAGAqD,EAAArD,EACA,2BACA,mDACA,oDACA,KACA,2BAEAqD,EAEA,QAAA0C,KAEA,QAAAC,GAAAC,GACA5C,EAAArD,EACAiG,EAAAC,OAAAnF,EAAAoF,aAAApF,EAAAqF,cAIA,QAAAC,KACAhD,EAAArD,EACA,4BACA,gDACA,uDACA,IACA,mBAGA,QAAAsG,GAAAC,GACA,GAAA1C,GAAA,UAAA0C,CACA,IAAA,UAAAxF,EAAA8C,EAAA,UAAA,CACA,GAAAoC,GAAA,GAAArF,GAAA4F,eAAA3C,EACAoC,GAAAQ,QACAC,IAAA,6DACAC,KAAA,UAAAJ,EAAA,0BACAI,KAAA,mBACAX,EAAAC,IAGA,QAAAW,GAAAC,EAAAC,EAAAC,IACA,IAAA,IAAA,IAAA,KAAArD,QAAA,SAAAsD,GACA,GAAA9F,GAAA2F,EAAA,IAAAG,CACArF,GAAAT,IACAmC,EAAArD,EACA,OAAA+G,EAAAC,EAAA/E,cAAA,IAAAb,EAAAF,GAAA,OAKA,QAAA+F,GAAAJ,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,GACAhE,EAAArD,EACA,YAAA8G,EAAA,QAEA/F,EAAAuG,sBAAAT,GACAxD,EAAArD,EACA,IAAAkH,EAAA,qCACA,gDAAAL,EAAA,gBACA,MAAAM,GAIA9D,EAAArD,EACA,IAAAoH,GAAA,IAAA,IAAA,IAAA,KAAA/E,IAAA,SAAA2E,GACA,GAAA9F,GAAA2F,EAAA,IAAAG,CACA,OAAA,UAAAjG,EAAAG,EAAA,UACA,uCAAAA,EAAA,YACAS,EAAAT,GACA6F,EAAAC,EAAA/E,cAEAb,EAAAF,KAEAqG,OAAAF,GAGAhE,EAAArD,EACA,IACA8G,EAAA,OAGA,QAAAU,GAAAX,EAAAC,EAAAC,GACA,GACAd,GADAwB,EAAA1G,EAAA2G,gBAAAb,EAGAZ,GADA,OAAAwB,EACA,GAAA7G,GAAA+G,uBAAA,SAAAd,EAAA,OAEA,GAAAjG,GAAA4F,eAAAiB,EAAAvG,MAEA+E,EAAAQ,QACAC,IAAA,+DACAC,KAAAG,EAAA,OACAd,EAAAC,GAEA,QAAA2B,GAAAf,EAAAC,EAAAC,IACA,IAAA,IAAA,IAAA,KAAArD,QAAA,SAAAsD,GACA,GAAA9F,GAAA2F,EAAA,IAAAG,EACAlD,EAAAiD,EAAAC,EAAA/E,aACA,IAAA,UAAAlB,EAAAG,EAAA,UAAA,CACA,GAAA+E,GAAA,GAAArF,GAAA4F,eAAAtF,EACA+E,GAAAQ,QACAC,IAAA,+DACAC,KAAAG,EAAA,OACAd,EAAAC,OACAtE,GAAAT,IACA2G,EAAApB,QACAqB,MACA/G,EAAAG,EAAA,UACA4C,EAAA,0CACAA,EAAA,gDAEA4C,IAAA,gBAAAxF,EAAA,kBAAA4C,EAAA,MACA6C,KAAAG,EAAA,SAIA,QAAAiB,GAAAlB,EAAAC,EAAAC,GACA,GAAAiB,IAAA,IAAA,IAAA,IAAA,KAAAC,MAAA,SAAAjB,GACA,GAAAkB,GAAAnH,EAAA8F,EAAA,IAAAG,EAAA,SACA,OAAA,YAAAkB,GAAA,UAAAA,GAEAF,GACAR,EAAAX,EAAAC,EAAAC,GAEAa,EAAAf,EAAAC,EAAAC,GAGA,QAAAoB,GACAtB,EAAAC,EAAAC,EACAG,EAAAC,EACAC,EAAAC,GAEAT,EAAAC,EAAAC,EAAAC,GACAE,EAAAJ,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,GACAU,EAAAlB,EAAAC,EAAAC,GAxHA,GAAA1D,GAAA,GAAAvC,GAMA+G,EAAA,GAAAjH,GAAAwH,uBAwOA,OApHArH,GAAA6D,aAAA,YACAvB,EAAArD,EACA,0DAEAqG,IACAC,EAAA,SACAA,EAAA,WAEAvF,EAAA6D,aAAA,2BACAuD,EACA,yBAAA,mBAAA,aACA,0BAAA,KACA,iBAAA,MAGApH,EAAA6D,aAAA,yBACAvB,EAAArD,EACA,wDAEAmI,EACA,sBAAA,cAAA,QACA,0BAAA,KACA,2BAAA,QAGApH,EAAAsH,aAAA,SAAA3E,QAAA,SAAApB,GACA,QAAAwB,GAAAvC,GACA,GAAArB,GAAAoC,EAAApB,KAAAoH,YAAA,KACAzI,EAAAyC,EAAApB,KAAAqH,UAAArI,EAAA,GACAsI,EAAA3I,EAAAmC,OAAA,GAAAC,cAAApC,EAAAqC,MAAA,EACA,OAAAuG,UAAAlH,EACAA,EAAA,QAAAiH,EAEA,QAAAA,EAGA,GAAA,UAAAzH,EAAAuB,EAAApB,KAAA,UAAA,CACA,GAAA+E,GAAA,GAAArF,GAAA4F,eAAAlE,EAAApB,KACA+E,GAAAQ,QACAC,IAAA,6DACAC,KAAA,qCACAX,EAAAC,OACAtE,GAAAW,EAAApB,OACA2G,EAAApB,QACAqB,MACA/G,EAAAuB,EAAApB,KAAA,UACA,OAAA4C,EAAA,OAAA,eAAAA,EAAA,OAAA,KAAAA,EAAA,OAAA,IAAAA,EAAA,OAAA,0CACA,OAAAA,EAAA,OAAA,eAAAA,EAAA,OAAA,KAAAA,EAAA,OAAA,IAAAA,EAAA,OAAA,gDAEA4E,KAAA5E,EAAA,OAAA,KAAAA,KACA4C,IAAA,gBAAApE,EAAApB,KAAA,kBAAA4C,EAAA,OAAA,MACA6C,KAAA,cAAA7C,EAAA,OAAA,SAGA,IAAA,IAAA,KAAAJ,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA1B,cACA4B,EAAA,UAAAF,EACAG,EAAA,SAAAF,EACA+E,EAAA,eAAA/E,CACA,IAAA,UAAA7C,EAAA8C,EAAA,UAAA,CACA,GAAAoC,GAAA,GAAArF,GAAA4F,eAAA3C,GACA+E,EAAA3C,EAAAQ,QACAC,IAAA,8DACA,IAAA3F,EAAA8C,EAAA,WAAA,YAAA9C,EAAA8C,EAAA,kBACAR,EAAArD,EACA,OAAA8D,EAAA,sCAAAA,EAAA,MACA,YAAA6E,EAAA,OACA,iBAAA7E,EAAA,2CAAAD,EAAA,cACA,KACA8E,EAAA,OAEAC,EAAAjC,KAAAgC,EAAA,QAEA3C,EAAAC,OACAtE,GAAAkC,KACA,GAAA9C,EAAA8C,EAAA,WAAA,YAAA9C,EAAA8C,EAAA,iBACAR,EAAArD,EACA,OAAA8D,EAAA,sCAAAA,EAAA,MACA,gBAAAA,EAAA,OAAA1C,EAAAyC,GAAA,MAEAgE,EAAApB,QACAqB,MACA/G,EAAA8C,EAAA,UACA,OAAAC,EAAA,qDACA,OAAAA,EAAA,2DAEA4C,IAAA,gBAAA7C,EAAA,kBAAAC,EAAA,MACA6C,KAAA,gBAAA7C,EAAA,OAAAA,EAAA,OAEA+D,EAAApB,QACAoC,MAAA,OAAA/E,EAAA,IAAA1C,EAAAyC,GAAA,KACAiE,MACA/G,EAAA8C,EAAA,UACAC,EAAA,qDACAA,EAAA,2DAEA4C,IAAA,gBAAA7C,EAAA,kBAAAC,EAAA,MAGA,IAAA,UAAA/C,EAAA8C,EAAA,gBAAA,CACA,GAAAoC,GAAA,GAAArF,GAAA4F,eAAA3C,EAAA,SACAoC,GAAAQ,QACAC,IAAA,+DACAV,EAAAC,OACAtE,GAAAkC,EAAA,WACAgE,EAAApB,QACAoC,MAAA,OAAA/E,EAAA,SAAA1C,EAAAyC,EAAA,UAAA,KACAiE,MACA/G,EAAA8C,EAAA,gBACAC,EAAA,0DACAA,EAAA,gEAEA4C,IAAA,gBAAA7C,EAAA,wBAAAC,EAAA,aAGAkC,EAAA6B,GACAxE,EAEA,QAAAyF,KAGA,QAAAC,KAEA,QAAAC,KACA,GAAA3F,GAAA,GAAAvC,EAiDA,QAhDA,IAAA,IAAA,KAAA4C,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA1B,cACA4B,EAAA,UAAAF,EACAG,EAAA,SAAAF,GACA,GAAA7C,EAAA8C,EAAA,WAAA,YAAA9C,EAAA8C,EAAA,mBACA,YAAA9C,EAAA8C,EAAA,iBAAA,YAAA9C,EAAA8C,EAAA,WAEAoF,GAAA,EACA5F,EAAArD,EACA,OAAA8D,EAAA,KAAA/C,EAAA8C,GACAzC,EAAAyC,GAAA,IACA,IACAzC,EAAAyC,EAAA,UAAA,6BAIAqF,GAAA,EACA,UAAAnI,EAAA8C,EAAA,WACAR,EAAArD,EACA,OAAA8D,EAAA,kCAAAD,EAAA,MACA,OAAAC,EAAA,eAAAA,EAAA,iBAGA,UAAA/C,EAAA8C,EAAA,iBACAR,EAAArD,EACA,OAAA8D,EAAA,uCAAAD,EAAA,YACA,OAAAC,EAAA,oBAAAA,EAAA,sBAGAT,EAAArD,EACA8D,EAAA,MAAA,YAAA/C,EAAA8C,EAAA,gBACAzC,EAAAyC,EAAA,UACAC,EAAA,SACA,0BAEA,UAAA/C,EAAA8C,EAAA,YACAsF,GAAA,EACA9F,EAAArD,EACA8D,EAAA,SAAAA,EAAA,SACAA,EAAA,eAAAA,EAAA,OAIAT,EAAArD,EACA,gBAAA8D,EAAA,OAAAA,EAAA,SAIAT,EAnDA,GAAA8F,IAAA,EAqDAC,EAAAJ,IACA3F,EAAA,GAAAvC,EAmBA,OAlBAqI,IACA9F,EAAArD,EACA,6BACA,iBACA,uCACA,kCACA,KAGA,SAAAe,EAAA+E,YACAzC,EAAArD,EACA,kCAGAqD,EAAArD,EACAoJ,EACArH,EAAAsH,aAEAhG,EA5EA,GAAA4F,IAAA,EACAC,GAAA,EA6EA7F,EAAA,GAAAvC,GACAwI,EAAAP,GAuEA,OAtEAhI,GAAAoF,gBACA,IAAA,IAAA,KAAAzC,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA1B,cACA4B,EAAA,UAAAF,EACAG,EAAA,SAAAF,CAEA7C,GAAAiD,aAAAH,KAEA,UAAA9C,EAAA8C,EAAA,YAAAlC,EAAAkC,IACA,GAAA9C,EAAA8C,EAAA,WAAA,YAAA9C,EAAA8C,EAAA,kBAGAR,EAAArD,EACA,OAAA8D,EAAA,sCAAAA,EAAA,OAGA,YAAA/C,EAAA8C,EAAA,iBAAA,YAAA9C,EAAA8C,EAAA,WACAR,EAAArD,EACA,OAAA8D,EAAA,IAAA1C,EAAAyC,GAAA,OAIAoF,GAAAC,EACA7F,EAAArD,EACA,mCACA,2BAEAiJ,EACA5F,EAAArD,EACA,oCAEAkJ,GACA7F,EAAArD,EACA,oCAKAe,EAAAoF,cACA9C,EAAArD,EACA,+BACAsJ,EAAAzE,UAEAqE,GACA7F,EAAArD,EACA,mBAGAqD,EAAArD,EACA,uCACA,IACA,wCAEAe,EAAAwI,YACAlG,EAAArD,EACA,oBACA,2BACAsJ,EAAAzE,SACA,iBACA,IACA,6BACA,yBACA,gDACA,KACA,IACA,oBAGAxB,EAAArD,EAAAsJ,GAEAjG,EAt0BA,GAAAtB,GAAAF,IAy0BA2H,EAAA,GAAA1I,EACA0I,GAAAC,WACA/D,IACAG,IACA9D,EAAA2H,YACA3D,IACA+C,KACAlD,KACA,WACA,YAEA,IAAAvC,GAAA,GAAAvC,EAyBA,OAxBAuC,GAAArD,EACA,kBACA,mBACA,SACA,2BACA,gCACAoD,IACA,wDACAI,IAAAqB,SACA,YACA,4DACAC,IAAAD,SACA,YACA,UACA,SACA,QACA,iCAAA5D,EAAA,gBAAA,aAAAA,EAAA,iBAAA,cACA,SACA+D,IACAM,IACAkE,EACA,UACA,WAEAnG,EAAAkE,KACA,OAAAxG,EAAA8D,OAAA,IAAA8E,MAAAxI,SAAAJ,EAAA8D,QAAA,GAAA0C,KAAA,SCKGqC,aAAa,EAAEC,iBAAiB,EAAEC,cAAc,IAAIC,GAAG,SAAS9J,EAAQU,EAAOJ,GCl6BlF,GAAAO,GAAA,WACAkJ,KAAAC,QACAD,KAAAE,iBACAF,KAAAG,YAAAC,YAKAtJ,GAAAmC,UAAAkH,YAAA,SAAAtK,GAEA,IAAA,GADAD,MACAM,EAAA,EAAAA,EAAAL,EAAAY,OAAAP,IACA,gBAAAL,GAAAK,GACAN,EAAAyK,KAAAxK,EAAAK,IACAyJ,MAAAW,QAAAzK,EAAAK,IACAyJ,MAAA1G,UAAAoH,KAAAlH,MAAAvD,EAAAC,EAAAK,IACAL,EAAAK,YAAAY,IACA6I,MAAA1G,UAAAoH,KAAAlH,MAAAvD,EAAAC,EAAAK,GAAA+J,KAGA,OAAArK,IAEAkB,EAAAmC,UAAAiH,iBAAA,SAAArK,GACA8J,MAAA1G,UAAAoH,KAAAlH,MAAA6G,KAAAC,KAAApK,IAIAiB,EAAAmC,UAAAjD,EAAA,WAIA,MAHAgK,MAAAE,iBACAF,KAAAG,YAAAC,YAEAJ,MAEAlJ,EAAAmC,UAAAvD,EAAA,WACA,GAAA6K,GAAAP,KAAAC,KAAAO,MACA3K,EAAAmK,KAAAG,YAAAC,UAGA,OAFAvK,GAAA,GAAA0K,EAAA1K,EAAA,GACAmK,KAAAE,iBAAArK,GACAmK,MAEAlJ,EAAAmC,UAAA4B,OAAA,SAAA4F,GAOA,MANAhC,UAAAgC,IACAA,EAAA,GAEAT,KAAAC,KAAAD,KAAAC,KAAA5H,IAAA,SAAAqI,GACA,MAAAf,OAAAc,EAAA,GAAAlD,KAAA,KAAAmD,IAEAV,MAEAlJ,EAAAmC,UAAA0H,QAAA,WACA,MAAAX,MAAAC,KAAAxJ,QAAA,GAEAK,EAAAmC,UAAAwG,WAAA,WAEA,IAAA,GADAmB,IAAA,EACA1K,EAAA,EAAAA,EAAAkK,UAAA3J,OAAAP,IAAA,CACA,GAAAN,GAAAoK,KAAAG,aAAAC,UAAAlK,IACAN,GAAAa,OAAA,IACAmK,EACAA,GAAA,EAEAZ,KAAAC,KAAAI,KAAA,IAEAL,KAAAE,iBAAAtK,IAGA,MAAAoK,OAEAlJ,EAAAmC,UAAA2C,KAAA,SAAAiF,EAAAC,GAIA,MAHAd,MAAAnF,SACAmF,KAAAC,KAAAc,QAAAF,GACAb,KAAAC,KAAAI,KAAAS,GACAd,MAEAlJ,EAAAmC,UAAAM,eAAA,SAAAsH,EAAAC,GAIA,MAHAd,MAAAW,WACAX,KAAApE,KAAAiF,EAAAC,GAEAd,MAUAlJ,EAAAmC,UAAAsE,KAAA,SAAA1C,GACA,MAAAmF,MAAAC,KAAA5H,IAAA,SAAAqI,GACA,MAAAA,GAAAM,QAAA,SAAA,SAAAC,GACA,MAAAtB,OAAAsB,EAAAxK,OAAA,GAAA8G,KAAA1C,OAEA0C,KAAA,OAGA5G,EAAAJ,QAAAO,OD06BMoK,GAAG,SAASjL,EAAQU,EAAOJ,GE7gCjC,GAAAO,GAAAb,EAAA,cAEAkL,EAAA,WACAnB,KAAAoB,WAEAD,GAAAlI,UAAAwD,MAAA,WASA,QAAA4E,GAAAC,GACA,MAAA,YACA,IAAA,GAAApL,GAAA,EAAAA,EAAAkK,UAAA3J,OAAAP,IACAoL,EAAAjB,KAAAD,UAAAlK,GAEA,OAAAqL,IAbA,GAAA3C,IACAC,SACA2C,OACA9C,KAAA,KACAhC,OACAC,QAEAqD,MAAAoB,QAAAf,KAAAzB,EASA,IAAA2C,IACA1C,MAAAwC,EAAAzC,EAAAC,OACA2C,IAAAH,EAAAzC,EAAA4C,KACA9C,KAAA,SAAAA,GAEA,MADAE,GAAAF,KAAAA,EACA6C,GAEA7E,IAAA2E,EAAAzC,EAAAlC,KACAC,KAAA0E,EAAAzC,EAAAjC,MAEA,OAAA4E,IAEAJ,EAAAlI,UAAAwI,oBAAA,WACA,UAEAN,EAAAlI,UAAAyI,aAAA,WACA,MAAA,IAEAP,EAAAlI,UAAA0I,SAAA,SAAAjB,GACA,MAAAA,IAEAS,EAAAlI,UAAAiD,MAAA,SAAA0F,EAAAC,GAQA,QAAAC,GAAApB,EAAAhC,GACA,GAAAqD,EAEAA,GADArB,IAAAsB,GACAA,EAAAtB,GAEAsB,EAAAtB,IACAuB,SACAC,SACAC,KAAAC,GAGA,OAAAL,EAAAG,QACA,OAAAxD,EACAqD,EAAAG,MAAA,KAEAH,EAAAG,MAAA7B,KAAA3B,IAGA,OAAA2D,GACAN,EAAAE,MAAA5B,KAAAgC,GAEAA,EAAA3B,EAEA,QAAA4B,KACA,OAAAD,GACAE,EAAAlC,KAAAgC,GAEAA,EAAA,KAEA,QAAAG,KAGA,QAAAC,GAAA/B,EAAAqB,GACA,GAAAW,GAAA,IACA,QAAAX,EAAAG,QACAQ,EAAAX,EAAAG,MAAA3E,KAAA,SAEAmF,GAAAC,IACA,OAAAA,GACAtJ,EAAAgH,KAAA,KAEAsC,EAAAD,EACA,OAAAC,GACAtJ,EAAAgH,KAAA,OAAAsC,EAAA,QAGA,OAAAA,EACAtJ,EAAAgH,KAAA,IAAAK,GAEArH,EAAAgH,KAAAK,GAGA,QAAAkC,GAAAlC,EAAAqB,GACAA,EAAAI,KAAAU,EACAC,EAAAf,EAAAE,OACAF,EAAAI,KAAAY,EACAN,EAAA/B,EAAAqB,GAEA,QAAAe,GAAAb,GACAA,EAAAvI,QAAA,SAAAgH,GACAsB,EAAAtB,GAAAyB,MAAAC,GACAQ,EAAAlC,EAAAsB,EAAAtB,MA/BA,GAAArH,MACAsJ,EAAA,IAsCA,OAJAG,GAAAP,GACA,OAAAI,GACAtJ,EAAAgH,KAAA,KAEA,GAAAvJ,GAAAuC,GA5EA,GAAA2J,GAAA,GAAAlM,GACAkL,KACAO,KACAF,EAAA,KACAD,EAAA,EACAS,EAAA,EACAE,EAAA,CAwEA/C,MAAAoB,QAAA1H,QAAA,SAAAkF,GACAoE,EAAAhN,EAAA4I,EAAAC,OACAD,EAAA4C,IAAA9H,QAAA,SAAAgH,GACAoB,EAAApB,EAAA,QAEAmB,GACAjD,EAAAlC,IAAAhD,QAAA,SAAAgH,GACAoB,EAAApB,EAAA9B,EAAAF,QAGAE,EAAAjC,KAAAjD,QAAA,SAAAgH,GACAoB,EAAApB,EAAA9B,EAAAF,QAEAkD,GACAE,EAAA,mBAAAlD,EAAAF,MAEA4D,KAEA,IAAAW,GAAAjD,KAAAkD,kBACA5D,EAAAkD,GAOA,IANAlD,EAAAqB,YACArB,EAAA,GAAAxI,GACAkJ,KAAAyB,sBACAnC,IAGA,GAAAA,EAAAW,KAAAxJ,OAAA,CACA,GAAAwK,GAAA,eAAAkC,KAAA7D,EAAAW,KAAA,GACA,IAAAgB,EACA,MAAA+B,GAAAhN,EACAgK,KAAA2B,SACA,GAAA7K,GACAmM,EAAA,GAAAhC,EAAA,GAAAgC,EAAA,MAOA,MAAA3D,GAAAW,KAAAxJ,OACAuM,EAAAhN,EACAgK,KAAA2B,SACArC,EAAA1D,KACAqH,EAAA,GAAA,YAAAjD,KAAA0B,eAAA,KACA,IAAAuB,EAAA,MAKAD,EAIA,IAAAxG,GAAA,SAAA4G,GACAjC,EAAA3K,KAAAwJ,MACAA,KAAAoD,GAAAA,EAEA5G,GAAAvD,UAAAoK,OAAAC,OAAAnC,EAAAlI,WACAuD,EAAAvD,UAAAsK,YAAA/G,EACAA,EAAAvD,UAAAiK,gBAAA,WACA,OAAA,4BAAAlD,KAAAoD,GAAA,gCAAA,MAGA,IAAAzF,GAAA,SAAA6F,GACArC,EAAA3K,KAAAwJ,MACAA,KAAAwD,MAAAA,EAEA7F,GAAA1E,UAAAoK,OAAAC,OAAAnC,EAAAlI,WACA0E,EAAA1E,UAAAsK,YAAA5F,EACAA,EAAA1E,UAAA0I,SAAA,SAAAtI,GACA,MAAAA,GAAAuC,KACA,8CAAAoE,KAAAwD,MAAA,mBACA,QAGA7F,EAAA1E,UAAAiK,gBAAA,WACA,OAAA,gCAAA,MAGA,IAAA9E,GAAA,WACA+C,EAAA3K,KAAAwJ,MAEA5B,GAAAnF,UAAAoK,OAAAC,OAAAnC,EAAAlI,WACAmF,EAAAnF,UAAAsK,YAAAnF,EACAA,EAAAnF,UAAAwD,MAAA,WACA,GAAA8E,GAAAJ,EAAAlI,UAAAwD,MAAAjG,KAAAwJ,KASA,OARAuB,GAAAzD,MAAA,SAAAI,EAAAuF,EAAAC,GACA,MAAA,cAAAxF,EACAqD,EAAAC,IAAAiC,GACA,cAAAvF,EACAqD,EAAAC,IAAAkC,GAEAnC,GAEAA,GAEAnD,EAAAnF,UAAAiK,gBAAA,WACA,OAAA,uCAAA,OAEA9E,EAAAnF,UAAAyI,aAAA,WACA,MAAA,MAEAtD,EAAAnF,UAAAwI,oBAAA,WACA,OACA,2CAIAlL,EAAAiG,eAAAA,EACAjG,EAAAoH,uBAAAA,EACApH,EAAA6H,wBAAAA,IFghCGwB,aAAa,IAAI+D,GAAG,SAAS1N,EAAQU,EAAOJ,GGvvC/C,QAAAqN,KACA,MAAA,oBAAAC,IAMA,QAAAC,GAAAC,GAIA,MAAA,gCAAAC,mBAAAD,GAZA,GAAAF,GAAA,EAKAI,EAAAhO,EAAA,gBACAiO,EAAAjO,EAAA,aASAe,EAAA,SAAAoM,GACA,OACAe,eAAA,uIAEAC,kBAAA,kBACAC,qBAAA,aACAC,0BAAA,qBACAC,2BAAA,cACAC,iBAAA,SACAC,wBAAA,eACAC,wBAAA,uBACAC,sBAAA,qBACAC,uBAAA,oBACAC,gBAAA,gBACAC,uBAAA,SACAC,yBAAA,WACAC,uBAAA,oBACAC,qBAAA,OACAC,oBAAA,uBACAC,wBAAA,iCACAC,qBAAA,aACAC,2BAAA,aACAC,iCAAA,cAEAC,gBAAA,gBACAC,uBAAA,eACAC,wBAAA,gBACAC,mCAAA,iCACAC,mCAAA,mCACAC,mCAAA,kCACAC,mCAAA,mCACAC,gCAAA,+BACAC,gCAAA,iCACAC,gCAAA,gCACAC,gCAAA,iCACAC,2BAAA,oCACAC,wBAAA,2BACAC,4BAAA,+BACAC,kBAAA,gBACAC,2BAAA,gBACAC,yBAAA,wBACAC,6BAAA,2CACAC,6BAAA,yCACAC,2BAAA,WAEAC,oBAAA,aACAC,mBAAA,kCACAC,yBAAA,kCACAC,mBAAA,kCACAC,yBAAA,kCACAC,mBAAA,kCACAC,yBAAA,kCAEAC,gBAAA,gBACAC,sBAAA,gCACAC,sBAAA,mBAEAC,qBAAA,0BACAC,iBAAA,SACAC,qBAAA,MACAC,mBAAA,WACAC,mBAAA,WACAC,mBAAA,WAEAC,2BAAA,sDACAC,2BAAA,oDACAC,cAAA,aAcAzE,GAGA0E,GAAA,WACAA,EAAA,kBAAAC,KAAA,WAQA,QAAAC,GAAAC,EAAAC,GAEAC,EAAAC,KAAA,kBAAAH,EAAA,OAAAI,OACAC,IAAA,kBAAAL,EAAA,IAAAC,EAAA,OAAAK,OAEA,QAAAC,KACAC,aAAAC,GACAA,EAAAC,WAAA,WACAC,EAAAC,KAAA3E,EAAAnN,EAAA+R,MAAA9R,IACA+R,OAAAC,MAAAA,KAAAC,eAAAL,EAAA,KACAM,GAEA,QAAAC,GAAA7Q,GACA,GAAA8K,GAAAQ,GACA,OAAAkE,GAAA,SACAsB,OAAA,eAAAhG,EAAA,KAAApM,EAAA,WAAAsB,EAAApB,MAAA,aACAkS,OAAA,KACAA,OACAtB,EAAA,eAAA1E,EAAA,MAAAgG,OACA9Q,EAAA+Q,gBAAAhR,IAAA,SAAAiR,GACA,MAAAxB,GAAA,YAAAyB,IAAAD,GAAAvF,KAAA/M,EAAA,WAAAsB,EAAApB,KAAA,IAAAoS,OAEAC,IAAAxS,EAAAuB,EAAApB,OAAAsS,OAAA,WACAzS,EAAAuB,EAAApB,MAAA8I,KAAAzH,MACAyP,EAAA1P,EAAApB,KAAA8I,KAAAzH,OACAiQ,OAIA,QAAAiB,GAAAnR,GAIA,QAAAoR,GAAAC,GACA3J,KAAA4J,kBACAD,EAAAJ,IAAAvJ,KAAAzH,OACAxB,EAAAuB,EAAApB,MAAA2S,WAAA7J,KAAAzH,OACAiQ,KAPA,GAEAsB,GAAAC,EAFA3G,EAAAQ,IACAoG,EAAApG,GASA,OAAAkE,GAAA,qBAAAxP,EAAApB,KAAA,MACAkS,OAAA,eAAAhG,EAAA,KAAApM,EAAA,WAAAsB,EAAApB,MAAA,aACAkS,OAAA,sBAAA9Q,EAAAiD,cAAA,YACA6N,OACAU,EAAAhC,EAAA,2BAAA1E,EAAA,MACA6G,KAAA,MAAA3R,EAAAI,UACAuR,KAAA,MAAA3R,EAAAM,UACAqR,KAAA,OAAA3R,EAAA4R,gBACAX,IAAAxS,EAAAuB,EAAApB,OACAiT,GAAA,eAAA,WACAT,EAAAlT,KAAAwJ,KAAA+J,MAGAX,OAAA,sBAAA9Q,EAAAmD,cAAA,YACA2N,OACAW,EAAAjC,EAAA,kCACAmC,KAAA,MAAA3R,EAAAI,UACAuR,KAAA,MAAA3R,EAAAM,UACAqR,KAAA,OAAA3R,EAAA4R,gBACAX,IAAAxS,EAAAuB,EAAApB,OACAiT,GAAA,eAAA,WACAT,EAAAlT,KAAAwJ,KAAA8J,MAGAV,OAAA,KACAA,OACAtB,EAAA,wCAAAsC,MAAA,WACAN,EAAAP,IAAAjR,EAAA+R,cAAAb,YAGAJ,OAAA,KACAA,OAAA,eAAAY,EAAA,KAAAhT,EAAA,mBAAA,aACAoS,OACAtB,EAAA,eAAAkC,EAAA,MAAAZ,OACA9Q,EAAAgS,oBAAAjS,IAAA,SAAAkS,GACA,MAAAzC,GAAA,YAAAyB,IAAAgB,GAAAxG,KAAA/M,EAAA,mBAAAuT,OAEAhB,IAAAxS,EAAAuB,EAAApB,KAAA,WAAAsS,OAAA,WACAzS,EAAAuB,EAAApB,KAAA,UAAA8I,KAAAzH,MACAiQ,OAIA,QAAAgC,GAAAlS,GACA,GAAA8K,GAAAQ,GACA,OAAAkE,GAAA,SACAsB,OACAtB,EAAA,8BAAA1E,EAAA,MACAqH,KAAA,UAAA1T,EAAAuB,EAAApB,OACAsS,OAAA,WACAzS,EAAAuB,EAAApB,MAAA4Q,EAAA9H,MAAAyK,KAAA,WACAjC,OAGAY,OAAA,gBAAAhG,EAAA,KAAApM,EAAA,WAAAsB,EAAApB,MAAA,YAEA,QAAAwT,GAAAC,EAAAC,GAIA,GAAAC,GAAA,IACAF,GAAAG,WAAAC,QACAjD,EAAA,0GAAAqC,GAAA,YAAA,SAAAa,GACAH,EAAA/C,EAAA9H,MAAAiL,SACAD,EAAAE,cAAAC,aAAAC,cAAA,OACAJ,EAAAE,cAAAC,aAAAE,QAAA,OAAAnU,MACA8T,EAAAE,cAAAC,aAAAG,cACAN,EAAAE,cAAAC,aAAAG,aAAAT,EAAA,GAAA,EAAA,GAEAlC,WAAA,WACAkC,EAAAU,SAAA,UACA,KAEAC,QAAA,SAAAR,GACA,GAAAS,GAAA3D,EAAA9H,MACA0L,EAAAD,EAAAR,QACA,OAAA,KAAAD,EAAAW,SACAD,EAAAE,OAAAC,OAAAH,GACAD,EAAAK,QACAlB,KACA,GACA,IAAAI,EAAAW,SACAD,EAAAK,OAAAC,MAAAN,GACAD,EAAAK,QACAlB,KACA,GAJA,UAOAT,GAAA,WAAA,SAAAa,GACAA,EAAAiB,iBACAjB,EAAAE,cAAAC,aAAAe,WAAA,MACA,IAAAC,GAAArE,EAAA9H,KACA6K,KACAsB,EAAAC,UAAAC,GAAAxB,IACAsB,EAAAN,OAAAhB,GACAD,KACAuB,EAAAG,UAAAD,GAAAxB,KACAsB,EAAAH,MAAAnB,GACAD,QAGAT,GAAA,OAAA,SAAAa,GACAA,EAAAiB,mBACA9B,GAAA,UAAA,SAAAa,GACAA,EAAAiB,iBACApB,IACAA,EAAA0B,YAAA,SACA1B,EAAA,QAIA,QAAA2B,KACA,GAAAC,GACAtE,EAAAL,EAAA,SAAAsB,OACAtB,EAAA,cAAAsB,OAAA,WAAApS,EAAA,mBAAA,aAAAoS,OACArS,EAAA2V,eAAArU,IAAA8Q,KAEAC,OACAtB,EAAA,cAAAsB,OAAA,WAAApS,EAAA,iBAAA,aAAAoS,OACArS,EAAAqE,aAAA/C,IAAAoR,KAEAL,OACAtB,EAAA,cAAAsB,OAAA,WAAApS,EAAA,qBAAA,aAAAoS,OACAqD,EAAA3E,EAAA,SAAAsB,OACArS,EAAA4V,WAAAtU,IAAA,SAAAuU,GACA,MAAA9E,GAAA,0CAAA8E,EAAA1V,KAAA,MAAAkS,OACAwD,EAAA7V,QAAAsB,IAAAoR,SAKAL,OACAtB,EAAA,cAAAsB,OAAA,WAAApS,EAAA,iBAAA,aAAAoS,OACArS,EAAA8V,aAAAxU,IAAAmS,KAEApB,OACAtB,EAAA,cAAAsB,OAAA,WAAApS,EAAA,sBAAA,aAAAoS,OACArS,EAAA+V,kBAAAzU,IAAA8Q,IASA,OANAuB,GAAA+B,EAAA,WACA1V,EAAAsD,eAAAoS,EAAA3B,WAAAzS,IAAA,WACA,MAAAyP,GAAA9H,MAAAiK,KAAA,oBACA8C,MACAvE,MAEAL,EAEA,QAAA6E,KACAjW,EAAA2V,eAAAhT,QAAA,SAAApB,GACA0P,EAAA1P,EAAApB,KAAAH,EAAAuB,EAAApB,SAGA,QAAA+V,KACA,MAAAnF,GAAA,SAAAsB,OACAtB,EAAA,iFAAAsC,MAAA,WAEAtC,EAAA9H,MAAAiK,KAAA,OAAAnG,EAAA8E,EAAAC,YAEAO,OACA,KACAA,OACAtB,EAAA,oDAAAsC,MAAA,WACArB,OAAAmE,KAAApJ,EAAA8E,EAAAC,QAAA,oBAEAO,OACA,gFArNA,GACAjB,GACAS,EAFAuE,EAAArF,EAAA9H,MAGAjJ,EAAA,GAAAkN,GACAyE,EAAA,KACAQ,EAAA,GAoNAiE,GAAAC,QAAAhE,OAAAjB,EAAAqE,KACAQ,IACAG,EAAA/D,OAAA6D,KAAA7D,OACAtB,EAAA,SAAAsB,OAAAR,EAAAd,EAAA,UAAAe,KAAA3E,EAAAnN,EAAA+R,MAAA9R,MAEA+R,OAAAC,KACAA,KAAAC,eAAAL,EAAA,IAEAuE,EAAA/D,OAAA,MAAApS,EAAA,gBAAA,QAEAmW,EAAA/D,OAAA6D,WH6vCGI,YAAY,EAAEC,eAAe,IAAIC,GAAG,SAAStX,EAAQU,EAAOJ,GIpkD/D,GAAAiX,GAAA,SAAAtW,EAAAmS,EAAAgB,GACArK,KAAA9I,KAAAA,EACA8I,KAAAqJ,gBAAAA,EACA5K,SAAA4L,EACArK,KAAAqK,aAAAhB,EAAA,GAEArJ,KAAAqK,aAAAA,EAGAmD,GAAAvU,UAAAwU,oBAAA,SAAAlV,EAAAD,GACA,QAAAoV,GAAAnW,GACA,MAAA,KAAAe,EAAApB,KAAAU,QAAAL,GAEA,MAAAmW,GAAA1N,KAAA9I,KAAA,OAAAwW,EAAA1N,KAAA9I,KAAA,IAAAqB,EAAA,KAGA,IAAAoV,GAAA,SAAAzW,EAAA0W,EAAAvD,GACAmD,EAAAhX,KAAAwJ,KAAA9I,EAAA0W,EAAAvD,GAEAsD,GAAA1U,UAAAoK,OAAAC,OAAAkK,EAAAvU,WACA0U,EAAA1U,UAAAsK,YAAAoK,EACAA,EAAA1U,UAAAqR,qBAAA,WAAA,SAAA,aAAA,cACAqD,EAAA1U,UAAAP,OAAA,WACA,MAAAsH,MAAAqJ,gBAAA,IAEAsE,EAAA1U,UAAAL,OAAA,WACA,MAAAoH,MAAAqJ,gBAAA,IAEAsE,EAAA1U,UAAAsC,YAAA,WACA,MAAAyE,MAAAtH,SAAAmV,WAAA7M,QAAA,IAAA,MAEA2M,EAAA1U,UAAAwC,YAAA,WACA,MAAAuE,MAAApH,SAAAiV,WAAA7M,QAAA,IAAA,KAGA,IAAA8M,GAAA,SAAA5W,EAAA0W,EAAAvD,GACAsD,EAAAnX,KAAAwJ,KAAA9I,EAAA0W,EAAAvD,GAEAyD,GAAA7U,UAAAoK,OAAAC,OAAAqK,EAAA1U,WACA6U,EAAA7U,UAAAsK,YAAAuK,EACAA,EAAA7U,UAAAuC,QAAA,WACA,MAAA,OAEAsS,EAAA7U,UAAAiR,aAAA,WACA,MAAAlK,MAAApH,UAAA,IACA,MACAoH,KAAApH,UAAA,GACA,OAEA,QAIA,IAAAmV,GAAA,SAAA7W,EAAA0W,EAAAvD,GACAsD,EAAAnX,KAAAwJ,KAAA9I,EAAA0W,EAAAvD,GAEA0D,GAAA9U,UAAAoK,OAAAC,OAAAqK,EAAA1U,WACA8U,EAAA9U,UAAAsK,YAAAwK,EACAA,EAAA9U,UAAAuC,QAAA,WACA,MAAA,IAEAuS,EAAA9U,UAAAiR,aAAA,WACA,MAAA,GAGA,IAAA8D,GAAA,SAAA9W,EAAA0W,EAAAvD,GACA0D,EAAAvX,KAAAwJ,KAAA9I,EAAA0W,EAAAvD,GAEA2D,GAAA/U,UAAAoK,OAAAC,OAAAyK,EAAA9U,WACA+U,EAAA/U,UAAAsK,YAAAyK,EACAA,EAAA/U,UAAAqR,qBAAA,WAAA,SAEA,IAAA2D,GAAA,SAAA/W,EAAAmT,GACAmD,EAAAhX,KAAAwJ,KAAA9I,IAAA,GAAA,GAAAmT,GAEA4D,GAAAhV,UAAAoK,OAAAC,OAAAkK,EAAAvU,WACAgV,EAAAhV,UAAAsK,YAAA0K,CAEA,IAAAC,GAAA,WACAlO,KAAAmO,QAEAD,GAAAjV,UAAAyT,gBACA,GAAAc,GAAA,cAAA,OAAA,UACA,GAAAA,GAAA,UAAA,SAAA,SAAA,OAAA,UACA,GAAAA,GAAA,SAAA,SAAA,WAAA,SAAA,OAAA,MAAA,YACA,GAAAA,GAAA,cAAA,QAAA,iBAEAU,EAAAjV,UAAAmC,cACA,GAAA4S,GAAA,gBAAA,EAAA,MAAA,KACA,GAAAA,GAAA,iBAAA,EAAA,MAAA,KACA,GAAAF,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,yBAAA,EAAA,GAAA,GACA,GAAAA,GAAA,yBAAA,EAAA,IACA,GAAAA,GAAA,yBAAA,EAAA,IACA,GAAAA,GAAA,yBAAA,EAAA,GAAA,GACA,GAAAC,GAAA,oBAAA,EAAA,IAAA,GACA,GAAAA,GAAA,iBAAA,EAAA,GAAA,GACA,GAAAA,GAAA,qBAAA,EAAA,GAAA,IAEAG,EAAAjV,UAAAoC,oBACA6S,EAAAjV,UAAA0T,eACA,WAAA,WAAA,YAAAjT,QAAA,SAAAxC,GAEA,GAAAkX,GAAA,GAAAN,GAAA5W,GAAA,KAAA,KAAA,GACAmX,EAAA,GAAAP,GAAA5W,EAAA,UAAA,KAAA,KAAA,EACAgX,GAAAjV,UAAAoC,iBAAAgF,KAAA+N,GACAF,EAAAjV,UAAAoC,iBAAAgF,KAAAgO,GACAH,EAAAjV,UAAA0T,WAAAtM,MACAnJ,KAAAA,EACAH,SAAAqX,EAAAC,OAGAH,EAAAjV,UAAA4T,cACA,GAAAoB,GAAA,eAAA,GACA,GAAAA,GAAA,gBAEAC,EAAAjV,UAAA6T,mBACA,GAAAU,GAAA,UAAA,MAAA,IAAA,IAAA,OAEAU,EAAAjV,UAAAqV,YAAA,iBAAA,eAAA,mBAAA,eAAA,qBACAJ,EAAAjV,UAAAkV,MAAA,WACAnO,KAAAsO,WAAA5U,QAAA,SAAA6U,GACAvO,KAAAuO,GAAA7U,QAAA,SAAApB,GACA0H,KAAA1H,EAAApB,MAAAoB,EAAA+R,cACA,gBAAAkE,GAAA,oBAAAA,KACAvO,KAAA1H,EAAApB,KAAA,UAAA,aAEA8I,OACAA,MACAA,KAAA3F,eAAA2F,KAAA2M,WAAAtU,IAAA,SAAAuU,GACA,MAAAA,GAAA1V,QAGAgX,EAAAjV,UAAA6P,IAAA,WACA,MAAA,IAAA0F,GAAAxO,MAGA,IAAAwO,GAAA,SAAAC,GACAA,EAAAH,WAAA5U,QAAA,SAAA6U,GACAvO,KAAAuO,MACAE,EAAAF,GAAA7U,QAAA,SAAApB,GACA,GAAAoW,GAAAD,EAAA/B,eAAAiC,KAAA,SAAAC,GACA,MAAAA,GAAAnB,oBAAAgB,EAAAG,EAAA1X,MAAAoB,IAEAoW,KACA1O,KAAAuO,GAAAlO,KAAA/H,GACA0H,KAAA1H,EAAApB,MAAAuX,EAAAnW,EAAApB,OACA,gBAAAqX,GAAA,oBAAAA,KACAvO,KAAA1H,EAAApB,KAAA,UAAAuX,EAAAnW,EAAApB,KAAA,aAGA8I,OACAA,MACAA,KAAA3F,eAAAoU,EAAApU,eAEAmU,GAAAvV,UAAAb,mBAAA,SAAAb,GACA,MAAAyI,MAAA5E,aAAAD,OAAA,SAAA7C,GACA,MAAA,KAAAA,EAAApB,KAAAU,QAAAL,EAAA,MACAyI,OAEAwO,EAAAvV,UAAAoF,aAAA,SAAA9G,GACA,MAAAyI,MAAA5E,aAAAD,OAAA,SAAA7C,GACA,MAAA,KAAAA,EAAApB,KAAAU,QAAAL,EAAA,MAAA,YAAAyI,KAAA1H,EAAApB,KAAA,WACA8I,OAEAwO,EAAAvV,UAAAyE,gBAAA,SAAAnG,GACA,GAAAsX,GAAA7O,KAAA3B,aAAA9G,EACA,OAAA,IAAAsX,EAAApY,OACAoY,EAAA,GAEA,MAGAL,EAAAvV,UAAAsG,UAAA,WACA,MAAAS,MAAA5E,aAAAuT,KAAA,SAAArW,GACA,MAAA,YAAA0H,KAAA1H,EAAApB,KAAA,WACA8I,OAAAA,KAAA3E,iBAAAsT,KAAA,SAAArW,GACA,MAAA,YAAA0H,KAAA1H,EAAApB,KAAA,WACA8I,OAEAwO,EAAAvV,UAAAK,gBAAA,WACA,MAAA0G,MAAA5E,aAAAuT,KAAA,SAAArW,GACA,MAAA,UAAA0H,KAAA1H,EAAApB,KAAA,WACA8I,OAAAA,KAAA3E,iBAAAsT,KAAA,SAAArW,GACA,MAAA,UAAA0H,KAAA1H,EAAApB,KAAA,WACA8I,OAEAwO,EAAAvV,UAAA2B,aAAA,SAAArD,GACA,MAAAyI,MAAA3B,aAAA9G,GAAAd,OAAA,GAEA+X,EAAAvV,UAAAqE,sBAAA,SAAA/F,GACA,MAAAyI,MAAA5H,mBAAAb,GAAA0G,MAAA,SAAA3F,GACA,MAAA,UAAA0H,KAAA1H,EAAApB,KAAA,WACA8I,OAEAwO,EAAAvV,UAAAkD,WAAA,WACA,QAAA2S,GAAA5X,EAAA6X,GACA,MAAA,KAAA7X,EAAAU,QAAAmX,EAAA7X,EAAAT,OAAAsY,EAAAtY;CAEA,MAAAuJ,MAAA3E,iBAAAsT,KAAA,SAAArW,GACA,MAAAwW,GAAAxW,EAAApB,KAAA,YAAA,GAAA8I,KAAA1H,EAAApB,OAAA,YAAA8I,KAAA1H,EAAApB,KAAA,YACA8I,OAEAwO,EAAAvV,UAAAe,aAAA,SAAAzC,GACA,MACA,YAAAyI,KAAAzI,EAAA,WACA,GAAAyI,KAAAzI,EAAA,WAAA,YAAAyI,KAAAzI,EAAA,iBAGAiX,EAAAvV,UAAAc,eAAA,SAAAxC,GACA,MAAAyI,MAAAhG,aAAAzC,IAAA,GAAAyI,KAAAzI,IAGAZ,EAAAJ,QAAA2X,OJukDMc,GAAG,SAAS/Y,EAAQU,EAAOJ,GK/xDjC,GAAAO,GAAAb,EAAA,cAEAgZ,EAAA,SAAAC,GACAlP,KAAAkP,WAAAA,EAEAD,GAAAhW,UAAA0B,IAAA,EACAsU,EAAAhW,UAAA8B,UAAA,EACAkU,EAAAhW,UAAAkW,YAAA,YACAF,EAAAhW,UAAAmW,aAAA,WACA,OAAA,GAEAH,EAAAhW,UAAAoW,sBAAA,WACA,MAAArP,MAAArF,KAEAsU,EAAAhW,UAAAqW,oBAAA,WACA,MAAA,SAAAtP,KAAAkP,YAAA,GAAAlP,KAAArF,IAAA,EAAA,GAEAsU,EAAAhW,UAAAsW,mBAAA,WACA,MAAA,UAAAvP,KAAAkP,YAAA,QAAAlP,KAAAkP,WAAA,EAAA,GAEAD,EAAAhW,UAAAuW,oBAAA,WACA,MAAAxP,MAAAqP,wBAAArP,KAAAsP,sBAAAtP,KAAAuP,sBAEAN,EAAAhW,UAAAwW,gBAAA,WACA,GAAApW,GAAA,GAAAvC,EASA,OARAuC,GAAArD,EACA,2DAEAgK,KAAAoP,gBACA/V,EAAArD,EACA,mEAGAqD,GAEA4V,EAAAhW,UAAAyW,yBAAA,SAAA1S,EAAA2S,GACA,MAAA,IAAA7Y,GACAkJ,KAAA4P,YAAA5S,EAAA2S,GACA3P,KAAAyP,oBAIAR,EAAAhW,UAAAyG,UAAA,WACA,GAAA1C,GAAA,UAAAgD,KAAAkP,YAAA,QAAAlP,KAAAkP,WACAS,EAAA,UAAA3P,KAAAkP,WACA7V,EAAA,GAAAvC,EAmDA,OAlDAuC,GAAArD,EACA,qDAEAgK,KAAAoP,gBACA/V,EAAArD,EACA,6DAGAqD,EAAArD,EACAgK,KAAA0P,yBAAA1S,EAAA2S,GACA,6DAEA3S,EACA3D,EAAArD,EACA,0BACA,gBAAAgK,KAAArF,IAAA,mBACA,oCAAAqF,KAAArF,IAAA,GAAA,IACA,oCACA,KACA,2CACA,sDACA,0BACA,8BACA,oCAAAqF,KAAArF,IAAA,GAAA,IACA,mCAAAqF,KAAArF,IACA,KACA,yCAEAqF,KAAArF,IAAA,GAAA,SAAAqF,KAAAkP,WACA7V,EAAArD,EACA,0BACA,gBAAAgK,KAAArF,IAAA,mBACA,oCAAAqF,KAAArF,IAAA,GAAA,IACA,oCACA,KACA,2CACA,wDACA,0BACA,+BACA,oCAAAqF,KAAArF,IAAA,GAAA,IACA,mCAAAqF,KAAArF,IACA,KACA,0CAGAtB,EAAArD,EACA,sCAAAgK,KAAArF,IAAA,wBACA,4CAGAtB,GAGA4V,EAAAhW,UAAAoG,UAAA,WACA,MACA,IAAAvI,GADAkJ,KAAAoP,eACA,sBAAApP,KAAAmP,YAAA,mCAEA,oBAAAnP,KAAAmP,YAAA,kBAIA,IAAAU,GAAA,SAAAX,EAAAY,GACAb,EAAAzY,KAAAwJ,KAAAkP,GACAlP,KAAA8P,IAAAA,EAEAD,GAAA5W,UAAAoK,OAAAC,OAAA2L,EAAAhW,WACA4W,EAAA5W,UAAAsK,YAAAsM,EAIAA,EAAA5W,UAAAyW,yBAAA,SAAA1S,EAAA2S,GACA,GAAAtW,GAAA,GAAAvC,EA8DA,OA7DAkJ,MAAA8P,IAAAtX,SACAa,EAAArD,EACA,mBAAAgK,KAAA8P,IAAArX,IAAA,IACA,mBAAAuH,KAAA8P,IAAAnX,IAAA,KAEAqH,KAAAoP,eACA/V,EAAArD,EACA,oBAAAgK,KAAA+P,uBAAA,eAAA,IACA,8CAAA/P,KAAAwP,sBAAA,KACA,oBAAAxP,KAAAgQ,oBAAA,eAAA,IACA,8CACA,oCACA,qCACA,yBACA,cAAAhQ,KAAA+P,uBAAA,YAAA,IACA,cAAA/P,KAAAgQ,oBAAA,YAAA,KAGA3W,EAAArD,EACA,oBAAAgK,KAAAgQ,oBAAA,eAAA,IACA,8CAAAhQ,KAAAwP,sBAAA,KACA,0BACA,qCACA,yBACA,cAAAxP,KAAAgQ,oBAAA,YAAA,OAIA3W,EAAArD,EACA,gBAAAgK,KAAA8P,IAAAvX,MAAA,KAEAyH,KAAAoP,eACA/V,EAAArD,EACA,iBAAAgK,KAAA+P,uBAAA,YAAA,IACA,2CAAA/P,KAAAwP,sBAAA,KACA,iBAAAxP,KAAAgQ,oBAAA,YAAA,IACA,2CACA,2BAGA3W,EAAArD,EACA,iBAAAgK,KAAAgQ,oBAAA,YAAA,IACA,2CAAAhQ,KAAAwP,sBAAA,KACA,4BAIAnW,EAAArD,EACAgK,KAAAiQ,gBAAAjT,EAAA2S,GAAA9U,SACAmF,KAAAyP,kBAAA5U,SACA,KAEAmF,KAAA8P,IAAAtX,QACAa,EAAArD,EACA,cAAAgK,KAAA8P,IAAAvX,MAAA,MAGAc,EAAArD,EACA,iBAGAqD,EAGA,IAAA6W,GAAA,SAAAhB,EAAAY,GACAD,EAAArZ,KAAAwJ,KAAAkP,EAAAY,GAEAI,GAAAjX,UAAAoK,OAAAC,OAAAuM,EAAA5W,WACAiX,EAAAjX,UAAAsK,YAAA2M,EACAA,EAAAjX,UAAA0B,IAAA,EACAuV,EAAAjX,UAAAmW,aAAA,WACA,MAAA,QAAApP,KAAAkP,YAIAgB,EAAAjX,UAAAgX,gBAAA,SAAAjT,EAAA2S,GACA,GAAAtW,GAAA,GAAAvC,EA6EA,OA5EAuC,GAAArD,EACA,0BAEA,QAAAgK,KAAAkP,WACA7V,EAAArD,EACA,gCACA,uBACA,KAGAqD,EAAArD,EACA,kCACA,yBACA,KAGAgK,KAAAsP,uBACAjW,EAAArD,EACA,0BACA,mDACA,kCACA,KAGAgH,GACA3D,EAAArD,EACA,eACA,oBACA,oBACA,oBACA,oBACA,MAGAqD,EAAArD,EACAgK,KAAAmQ,iBAEA,QAAAnQ,KAAAkP,WACA7V,EAAArD,EACA,WACA,yBACA,kCACA,0BACA,mCACA,yCAAAgK,KAAAwP,sBAAA,IACAxP,KAAAoQ,gBAAApT,EAAA2S,GAAA9U,OAAA,GACA,KACA,IACA,wBACA,yBACA,mCACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,KACA,KAGAxB,EAAArD,EACA,4BACA,6BACA,4BACA,8BACA,8BACA,yCACA,yCACA,4CAAAgK,KAAAwP,sBAAA,IACAxP,KAAAoQ,gBAAApT,EAAA2S,GAAA9U,OAAA,GACA,MACA,KACA,KAGAxB,EAGA,IAAAgX,GAAA,SAAAnB,GACAD,EAAAzY,KAAAwJ,KAAAkP,GAEAmB,GAAApX,UAAAoK,OAAAC,OAAA2L,EAAAhW,WACAoX,EAAApX,UAAAsK,YAAA8M,EACAA,EAAApX,UAAAkW,YAAA,eACAkB,EAAApX,UAAA2W,YAAA,SAAA5S,EAAA2S,GACA,MAAA,IAAA7Y,GACA,mBACA,kCACA,cAAAkG,EAAA,kBAAA,IACA,eAAAA,EAAA2S,kBAAA,IACA,eAAA3S,EAAA2S,EAAA,kBAAA,kBAAA,IACA,eAAA3S,EAAA2S,EAAA,kBAAA,kBAAA,IACA,eAAA3S,EAAA2S,EAAA,kBAAA,kBAAA,IACA,OAIA,IAAAW,GAAA,SAAApB,GACAD,EAAAzY,KAAAwJ,KAAAkP,GAEAoB,GAAArX,UAAAoK,OAAAC,OAAA2L,EAAAhW,WACAqX,EAAArX,UAAAsK,YAAA+M,EACAA,EAAArX,UAAA2W,YAAA,SAAA5S,EAAA2S,GACA,MAAA,IAAA7Y,GACA,mBACA,kCACA,kDAAAkG,EAAA,kBAAA,IACA,mDAAAA,EAAA2S,kBAAA,IACA,mDAAA3S,EAAA2S,EAAA,kBAAA,kBAAA,IACA,mDAAA3S,EAAA2S,EAAA,kBAAA,kBAAA,IACA,OAIA,IAAAY,GAAA,SAAArB,EAAAY,GACAD,EAAArZ,KAAAwJ,KAAAkP,EAAAY,GAEAS,GAAAtX,UAAAoK,OAAAC,OAAAuM,EAAA5W,WACAsX,EAAAtX,UAAAsK,YAAAgN,EACAA,EAAAtX,UAAA+W,oBAAA,SAAAQ,GACA,MAAA,cAAAA,EAAA,OAEAD,EAAAtX,UAAAgX,gBAAA,SAAAjT,EAAA2S,GACA,GAAAtW,GAAA,GAAAvC,EAmFA,OAlFAuC,GAAArD,EACA,aAEA,QAAAgK,KAAAkP,YACA7V,EAAArD,EACA,YACA,eACA,oBACA,oBACA,oBACA,oBACA,MAGA,UAAAgK,KAAAkP,WACA7V,EAAArD,EACA,iCACA,6CACA,yDACA,KAEA,QAAAgK,KAAAkP,WACA7V,EAAArD,EACA,6BACA,6CACA,kEACA,KAGAqD,EAAArD,EACA,2BACA,6CACA,KAGAqD,EAAArD,EACA,wBACA,YACA,uBACA,uBACA,MACA,IACA,mCACA,oBAEA,UAAAgK,KAAAkP,WACA7V,EAAArD,EACA,+BACA,+BACA,gCAEA,QAAAgK,KAAAkP,WACA7V,EAAArD,EACA,8BACA,8BACA,8BACA,8BAGAqD,EAAArD,EACA,mBACA,mBACA,oBAGAqD,EAAArD,EACA,YACA,yBACA,yBACA,yBACA,+BACA,+BACA,+BACA,KACA,IACA,YACA,aACA,mDACA,mDACA,kDACA,MAEAqD,EAGA,IAAAoX,GAAA,SAAAvB,GACAD,EAAAzY,KAAAwJ,KAAAkP,GAEAuB,GAAAxX,UAAAoK,OAAAC,OAAA2L,EAAAhW,WACAwX,EAAAxX,UAAAsK,YAAAkN,EACAA,EAAAxX,UAAA0B,IAAA,EACA8V,EAAAxX,UAAA8B,UAAA,EACA0V,EAAAxX,UAAAmW,aAAA,WACA,OAAA,GAEAqB,EAAAxX,UAAA2W,YAAA,SAAA5S,EAAA2S,GACA,GAAA,QAAA3P,KAAAkP,YAAA,SAAAlP,KAAAkP,WAAA,CACA,GAAAvZ,GAAA,SAAAqK,KAAAkP,UACA,OAAA,IAAApY,GACA,kCACA,oBAAAnB,EAAA,kBAAA,kBACA,oBAAAA,EAAA,kBAAA,mBAAA,gBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBAAA,iBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBAAA,kBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBAAA,eACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBAAA,gBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBAAA,iBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,oBAAAA,EAAA,kBAAA,mBACA,MACA,oBACA,iCACA,wCACA,yCACA,0CACA,uCACA,wCACA,yCACA,OAGA,MAAA,IAAAmB,GACA,kCACA,mBAAAkG,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,MACA,oBACA,iCACA,kCACA,mCACA,oCACA,iCACA,kCACA,mCACA,OAKA,IAAA0T,GAAA,SAAAxB,EAAAY,GACAI,EAAA1Z,KAAAwJ,KAAAkP,EAAAY,GAEAY,GAAAzX,UAAAoK,OAAAC,OAAA4M,EAAAjX,WACAyX,EAAAzX,UAAAsK,YAAAmN,EACAA,EAAAzX,UAAA8W,uBAAA,SAAAS,GACA,MAAA,gBAAAA,EAAA,UAEAE,EAAAzX,UAAA+W,oBAAA,SAAAQ,GACA,MAAA,gBAAAA,EAAA,UAEAE,EAAAzX,UAAAkX,cAAA,WACA,MAAA,IAAArZ,GACA,iBACA,oCAGA4Z,EAAAzX,UAAAmX,gBAAA,SAAApT,EAAA2S,GACA,GAAAtW,GAAA,GAAAvC,EAwBA,OAvBAuC,GAAArD,EACA,sBACA,+BACA,kBACA,sCACA,sCACA,+BAEAgK,KAAAsP,sBACAjW,EAAArD,EACA,6DACA,sCACA,sCACA,uCAEAgH,GACA3D,EAAArD,EACA,wBACA,0CACA,0CACA,2CAGAqD,EAGA,IAAAsX,GAAA,SAAAzB,EAAAY,GACAI,EAAA1Z,KAAAwJ,KAAAkP,EAAAY,GAEAa,GAAA1X,UAAAoK,OAAAC,OAAA4M,EAAAjX,WACA0X,EAAA1X,UAAAsK,YAAAoN,EACAA,EAAA1X,UAAA8W,uBAAA,SAAAS,GACA,MAAA,gBAAAA,EAAA,UAEAG,EAAA1X,UAAA+W,oBAAA,SAAAQ,GACA,MAAA,gBAAAA,EAAA,UAEAG,EAAA1X,UAAAkX,cAAA,WACA,GAAA9W,GAAA,GAAAvC,EA0DA,OAzDAuC,GAAArD,EACA,8BACA,sBACA,kBACA,0BACA,6BAAA,QAAAgK,KAAAkP,WAAA,GAAA,MAAA,KAAAlP,KAAAwP,sBAAA,MACA,IACA,0BACA,8CACA,+BACA,IACA,mBACA,mBACA,mBACA,gDACA,mBACA,mBACA,+BACA,gCACA,cACA,cACA,qBACA,qBACA,gCACA,yDACA,wDACA,uBACA,MACA,KACA,kBACA,+BACA,gCACA,uBACA,uBACA,gBACA,gBACA,qBACA,qBACA,gCACA,yDACA,wDACA,uBACA,gCACA,yDACA,wDACA,uBACA,MACA,KACA,KAEA,QAAAxP,KAAAkP,YACA7V,EAAArD,EACA,4EACA,4EACA,sDAGAqD,GAEAsX,EAAA1X,UAAAmX,gBAAA,SAAApT,EAAA2S,GACA,GAAAtW,GAAA,GAAAvC,EAkCA,OAjCAuC,GAAArD,EACA,8BACA,8BACA,QAAAgK,KAAAkP,WACA,8CACA,wEAGAlP,KAAAsP,sBACAjW,EAAArD,EACA,uBACA,yBACA,QAAAgK,KAAAkP,WACA,wEACA,kGAEA,QAAAlP,KAAAkP,WACA,wEACA,kGAEA,OACA,sCACA,sCACA,uCAEAlS,GACA3D,EAAArD,EACA,wBACA,0CACA,0CACA,2CAGAqD,GAGA9C,EAAA8Z,OAAAA,EACA9Z,EAAA+Z,SAAAA,EACA/Z,EAAAga,OAAAA,EACAha,EAAAka,KAAAA,EACAla,EAAAma,IAAAA,EACAna,EAAAoa,QAAAA,ILkyDG/Q,aAAa,SAAS","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var listeners=require('./listeners.js');\r\nvar shapes=require('./shapes.js');\r\nvar Lines=require('./lines.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction glslColorValue(prefix) {\r\n\t\tvar r=floatOptionValue(prefix+'.r');\r\n\t\tvar g=floatOptionValue(prefix+'.g');\r\n\t\tvar b=floatOptionValue(prefix+'.b');\r\n\t\tvar a=floatOptionValue(prefix+'.a');\r\n\t\tif (r==a && g==a && b==a) {\r\n\t\t\treturn a; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn r+\",\"+g+\",\"+b+\",\"+a;\r\n\t\t}\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\r\n\tfunction makeShape() {\r\n\t\tvar className=options.shape.charAt(0).toUpperCase()+options.shape.slice(1);\r\n\t\tvar shapeParams=options.getInputOptionsFor('shape').map(function(option){\r\n\t\t\tif (options[option.name+'.input']=='constant') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: intOptionValue(option.name),\r\n\t\t\t\t\tchanges: false\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: intOptionValue(option.name),\r\n\t\t\t\t\tchanges: true,\r\n\t\t\t\t\tmin: option.getMin(),\r\n\t\t\t\t\tmax: option.getMax()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar shapeCtorArgs=[null,options.shader].concat(shapeParams);\r\n\t\treturn new (Function.prototype.bind.apply(shapes[className],shapeCtorArgs));\r\n\t}\r\n\tvar shape=makeShape();\r\n\r\n\tfunction generateHtmlStyleLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tif (options.hasSliderInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"label {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 15em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".min {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".max {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: left;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<style>\",\r\n\t\t\t\"</style>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\tshape.dim==2 &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar needAspectUniform=options.hasInputsFor('canvas');\r\n\t\tvar needAspectConstant=!needAspectUniform && options['canvas.width']!=options['canvas.height'];\r\n\t\tvar needTransformedPosition=options.shader=='light' && options.projection=='perspective';\r\n\r\n\t\tfunction generateMain() {\r\n\t\t\tvar lines=new Lines();\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needAspectConstant) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float aspect=\"+intOptionValue('canvas.width')+\".0/\"+intOptionValue('canvas.height')+\".0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float fovy=45.0;\",\r\n\t\t\t\t\t\"float near=1.0/tan(radians(fovy)/2.0);\",\r\n\t\t\t\t\t\"float far=near+2.0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"vec4 transformedPosition=\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (use2dTransform) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"vec4(position*mat2(\",\r\n\t\t\t\t\t\"\tcz, -sz,\",\r\n\t\t\t\t\t\"\tsz,  cz\",\r\n\t\t\t\t\t\"),0,1)\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"position\"\r\n\t\t\t\t);\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4( // move center of coords inside view\",\r\n\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, -(near+far)/2.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=transformedPosition\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0/aspect,1.0,-1.0,1.0)\" // correct aspect ratio and make coords right-handed\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (shape.dim>2) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0,1.0,-1.0,1.0)\" // make coords right-handed for 3d shapes\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear/aspect, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlines.t(\r\n\t\t\t\t\";\"\r\n\t\t\t);\r\n\t\t\tif (options.shader=='light') {\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedView=-vec3(transformedPosition);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (shape.dim>2) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=normal\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=vec3(0.0,0.0,1.0)\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"interpolatedColor=color;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\r\n\t\tvar lines=new Lines();\r\n\t\tif (needAspectUniform) {\r\n\t\t\tlines.a(\"uniform float aspect;\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.a(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.a(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.a(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='light') {\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\"varying vec3 interpolatedView;\");\r\n\t\t\t}\r\n\t\t\tif (shape.dim>2) {\r\n\t\t\t\tlines.a(\"attribute vec3 normal;\");\r\n\t\t\t}\r\n\t\t\tlines.a(\"varying vec3 interpolatedNormal;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"void main() {\",\r\n\t\t\tgenerateMain().indent(),\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"precision mediump float;\"\r\n\t\t);\r\n\t\tif (options.shader=='single') {\r\n\t\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\t\"void main() {\",\r\n\t\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"void main() {\",\r\n\t\t\t\t\t\"\tgl_FragColor=vec4(\"+glslColorValue('shader.single.color')+\");\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else if (options.shader=='light') {\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"varying vec3 interpolatedView;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec3 interpolatedNormal;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tvec3 ambientColor=vec3(0.2,0.2,0.2);\",\r\n\t\t\t\t\"\tvec3 diffuseColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tvec3 specularColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tfloat shininess=100.0;\"\r\n\t\t\t);\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=vec3( 0.0, 0.0,+1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=normalize(interpolatedView);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 N=normalize(interpolatedNormal);\"\r\n\t\t\t);\r\n\t\t\tif (shape.twoSided) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (!gl_FrontFacing) N=-N;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 L=normalize(vec3(-1.0,+1.0,+1.0));\",\r\n\t\t\t\t\"\tvec3 H=normalize(L+V);\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\",\r\n\t\t\t\t\"\t\tambientColor\",\r\n\t\t\t\t\"\t\t+diffuseColor*max(0.0,dot(L,N))\",\r\n\t\t\t\t\"\t\t+specularColor*pow(max(0.0,dot(H,N)),shininess)\",\r\n\t\t\t\t\"\t,1.0);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateHtmlControlMessageLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<ul>\",\r\n\t\t\t\"</ul>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateHtmlInputLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"+\r\n\t\t\t\t\t\t(option.getStep()==1\r\n\t\t\t\t\t\t\t? \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t\t: \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t)+\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\",\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsMakeProgramLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"gl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"gl.compileShader(vertexShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"gl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"gl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=gl.createProgram();\",\r\n\t\t\t\"gl.attachShader(program,vertexShader);\",\r\n\t\t\t\"gl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"gl.linkProgram(program);\",\r\n\t\t\t\"return program;\"\r\n\t\t);\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction generateJsInitLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var canvas=document.getElementById('myCanvas');\",\r\n\t\t\t\"var gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\"\r\n\t\t);\r\n\t\tif (options.background=='solid' && !options.hasInputsFor('background.solid.color') && !(\r\n\t\t\t// default clear color in OpenGL\r\n\t\t\toptions['background.solid.color.r']==0 &&\r\n\t\t\toptions['background.solid.color.g']==0 &&\r\n\t\t\toptions['background.solid.color.b']==0 &&\r\n\t\t\toptions['background.solid.color.a']==0\r\n\t\t)) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.clearColor(\"+colorValue('background.solid.color')+\");\"\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (shape.dim>2) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.enable(gl.DEPTH_TEST);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=makeProgram(\",\r\n\t\t\t\"\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\t\"\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.useProgram(program);\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsInputHandlerLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write(!options.isAnimated(),options.debugInputs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction canvasUpdater() {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function updateAspect() {\",\r\n\t\t\t\t\"\tgl.viewport(0,0,canvas.width,canvas.height);\",\r\n\t\t\t\t\"\tgl.uniform1f(aspectLoc,canvas.width/canvas.height);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateAspect();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction canvasListener(wh) {\r\n\t\t\tvar optName='canvas.'+wh;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"canvas.\"+wh+\"=parseInt(this.value);\")\r\n\t\t\t\t\t.post(\"updateAspect();\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[name+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\t\tvarName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('canvas')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var aspectLoc=gl.getUniformLocation(program,'aspect');\"\r\n\t\t\t);\r\n\t\t\tcanvasUpdater();\r\n\t\t\tcanvasListener('width');\r\n\t\t\tcanvasListener('height');\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\toptions.getInputsFor('shape').forEach(function(option){\r\n\t\t\tfunction varName(prefix) {\r\n\t\t\t\tvar i=option.name.lastIndexOf('.');\r\n\t\t\t\tvar s=option.name.substring(i+1);\r\n\t\t\t\tvar S=s.charAt(0).toUpperCase()+s.slice(1);\r\n\t\t\t\tif (prefix!==undefined) {\r\n\t\t\t\t\treturn prefix+'Shape'+S;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 'shape'+S;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[option.name+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(option.name);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"storeShape(parseInt(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(option.name)) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions[option.name+'.input'],\r\n\t\t\t\t\t\t\"var \"+varName('new')+\"=Math.floor(\"+varName('min')+\"+(\"+varName('max')+\"-\"+varName('min')+\"+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\t\t\t\"var \"+varName('new')+\"=Math.floor(\"+varName('min')+\"+(\"+varName('max')+\"-\"+varName('min')+\"+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.cond(varName('new')+\"!=\"+varName())\r\n\t\t\t\t\t.log(\"console.log('\"+option.name+\" input value:',\"+varName('new')+\");\")\r\n\t\t\t\t\t.post(\"storeShape(\"+varName('new')+\");\");\r\n\t\t\t}\r\n\t\t});\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\" // have to initialize the uniform even if default value is zero because the browser may keep prev value of slider on page reload\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions[optName+'.speed.input'],\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=new Lines;\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tif (options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=new Lines;\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\tinnerTransformsLines,\r\n\t\t\t\tshape.writeDraw()\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=new Lines;\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// wrap inner render lines in function if needed\r\n\t\tif (options.isAnimated()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function renderFrame(time) {\",\r\n\t\t\t\tinnerLines.indent()\r\n\t\t\t);\r\n\t\t\tif (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\trequestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"requestAnimationFrame(renderFrame);\"\r\n\t\t\t);\r\n\t\t} else if (options.hasInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var frameId=null;\",\r\n\t\t\t\t\"function renderFrame() {\",\r\n\t\t\t\tinnerLines.indent(),\r\n\t\t\t\t\"\tframeId=null;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"function scheduleFrame() {\",\r\n\t\t\t\t\"\tif (frameId===null) {\",\r\n\t\t\t\t\"\t\tframeId=requestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"scheduleFrame();\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\tvar scriptLines=new Lines;\r\n\tscriptLines.interleave(\r\n\t\tgenerateJsMakeProgramLines(),\r\n\t\tgenerateJsInitLines(),\r\n\t\tshape.writeInit(),\r\n\t\tgenerateJsInputHandlerLines(),\r\n\t\tgenerateJsRenderLines()\r\n\t).wrap(\r\n\t\t\"<script>\",\r\n\t\t\"</script>\"\r\n\t);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t\tgenerateHtmlStyleLines(),\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t\tgenerateVertexShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\tgenerateFragmentShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='\"+intOptionValue('canvas.width')+\"' height='\"+intOptionValue('canvas.height')+\"'></canvas>\",\r\n\t\t\"</div>\",\r\n\t\tgenerateHtmlControlMessageLines(),\r\n\t\tgenerateHtmlInputLines(),\r\n\t\tscriptLines,\r\n\t\t\"</body>\",\r\n\t\t\"</html>\"\r\n\t);\r\n\treturn lines.join(\r\n\t\toptions.indent=='tab' ? '\\t' : Array(parseInt(options.indent)+1).join(' ')\r\n\t);\r\n};\r\n",null,"/*\r\n.a = add AFTER last line\r\n.t = add TO last line\r\n*/\r\n\r\nvar Lines=function(){\r\n\tthis.data=[];\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n};\r\n\r\n// private\r\nLines.prototype.flattenArgs=function(s){\r\n\tvar r=[];\r\n\tfor (var i=0;i<s.length;i++) {\r\n\t\tif (typeof s[i] == 'string') {\r\n\t\t\tr.push(s[i]);\r\n\t\t} else if (Array.isArray(s[i])) {\r\n\t\t\tArray.prototype.push.apply(r,s[i]);\r\n\t\t} else if (s[i] instanceof Lines) {\r\n\t\t\tArray.prototype.push.apply(r,s[i].data);\r\n\t\t}\r\n\t}\r\n\treturn r;\r\n};\r\nLines.prototype.addFlattenedArgs=function(s){\r\n\tArray.prototype.push.apply(this.data,s);\r\n};\r\n\r\n// public\r\nLines.prototype.a=function(){\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n\treturn this;\r\n};\r\nLines.prototype.t=function(){\r\n\tvar lastLine=this.data.pop();\r\n\tvar s=this.flattenArgs(arguments);\r\n\ts[0]=lastLine+s[0];\r\n\tthis.addFlattenedArgs(s);\r\n\treturn this;\r\n};\r\nLines.prototype.indent=function(level){\r\n\tif (level===undefined) {\r\n\t\tlevel=1;\r\n\t}\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn Array(level+1).join('\\t')+line;\r\n\t});\r\n\treturn this;\r\n};\r\nLines.prototype.isEmpty=function(){\r\n\treturn this.data.length<=0;\r\n};\r\nLines.prototype.interleave=function(){\r\n\tvar first=true;\r\n\tfor (var i=0;i<arguments.length;i++) {\r\n\t\tvar r=this.flattenArgs([arguments[i]]);\r\n\t\tif (r.length>0) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst=false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.data.push('');\r\n\t\t\t}\r\n\t\t\tthis.addFlattenedArgs(r);\r\n\t\t}\r\n\t}\r\n\treturn this;\r\n};\r\nLines.prototype.wrap=function(begin,end){\r\n\tthis.indent();\r\n\tthis.data.unshift(begin);\r\n\tthis.data.push(end);\r\n\treturn this;\r\n};\r\nLines.prototype.wrapIfNotEmpty=function(begin,end){\r\n\tif (!this.isEmpty()) {\r\n\t\tthis.wrap(begin,end);\r\n\t}\r\n\treturn this;\r\n};\r\n/*\r\nLines.prototype.wrapEachLine=function(begin,end){\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn begin+line+end;\r\n\t});\r\n\treturn this;\r\n};\r\n*/\r\nLines.prototype.join=function(indent){\r\n\treturn this.data.map(function(line){\r\n\t\treturn line.replace(/^(\\t)+/,function(match){\r\n\t\t\treturn Array(match.length+1).join(indent);\r\n\t\t});\r\n\t}).join('\\n');\r\n};\r\n\r\nmodule.exports=Lines;\r\n","var Lines=require('./lines.js');\r\n\r\nvar Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tvar outerLines=new Lines;\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push('\\t'+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn new Lines(lines);\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines.a(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"scheduleFrame();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (!innerLines.isEmpty()) {\r\n\t\tinnerLines=new Lines(\r\n\t\t\tthis.innerPrependedLines(),\r\n\t\t\tinnerLines\r\n\t\t);\r\n\t}\r\n\tif (innerLines.data.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines.data[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.a(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\tnew Lines(\r\n\t\t\t\t\t\tbr[0]+match[1]+br[1]\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t// TODO what if no match?\r\n\t}\r\n\tif (innerLines.data.length) {\r\n\t\treturn outerLines.a(\r\n\t\t\tthis.wrapCall(\r\n\t\t\t\tinnerLines.wrap(\r\n\t\t\t\t\tbr[0]+\"function(\"+this.bracketFnArg()+\"){\",\r\n\t\t\t\t\t\"}\"+br[1]\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn lines.wrap(\r\n\t\t\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\",\r\n\t\t\"});\"\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shader.face': 'One color per face',\r\n\t\t'options.shader.light': 'Directional light',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'Cube',\r\n\t\t'options.shape.hat': 'Mexican hat function', // wp: Mexican hat wavelet\r\n\t\t'options.shape.terrain': 'Diamond-square fractal terrain', // wp: Diamond-square algorithm\r\n\t\t'options.projection': 'Projection',\r\n\t\t'options.projection.ortho': 'Orthogonal',\r\n\t\t'options.projection.perspective': 'Perspective',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.canvas.width': 'Canvas width',\r\n\t\t'options.canvas.height': 'Canvas height',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shape.gasket.lod': 'Sierpinski gasket recursion depth',\r\n\t\t'options.shape.hat.lod': 'Mexican hat detail level',\r\n\t\t'options.shape.terrain.lod': 'Fractal terrain detail level',\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShader': 'Log shader compilation errors',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'options.formatting': 'Code formatting options',\r\n\t\t'options.indent': 'Indent',\r\n\t\t'options.indent.tab': 'Tab',\r\n\t\t'options.indent.2': '2 spaces',\r\n\t\t'options.indent.4': '4 spaces',\r\n\t\t'options.indent.8': '8 spaces',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar $container=$(this);\r\n\t\tvar $options;\r\n\t\tvar $code;\r\n\t\tvar options=new Options();\r\n\t\tvar codeUpdateTimeoutId=null;\r\n\t\tvar codeUpdateDelay=200;\r\n\r\n\t\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\t\t// TODO sub-sub option support?\r\n\t\t\t$options.find(\"[data-option^='\"+optionName+\".']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tclearTimeout(codeUpdateTimeoutId);\r\n\t\t\tcodeUpdateTimeoutId=setTimeout(function(){\r\n\t\t\t\t$code.text(generateCode(options.fix(),i18n));\r\n\t\t\t\tif (window.hljs) hljs.highlightBlock($code[0]);\r\n\t\t\t},codeUpdateDelay);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option.name,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar sliderInput,numberInput;\r\n\t\t\tfunction inputListener(that) {\r\n\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\tthat.val(this.value);\r\n\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\tupdateCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tsliderInput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,numberInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tnumberInput=$(\"<input type='number' required>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,sliderInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tsliderInput.val(option.defaultValue).change();\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction makeSortable($sortableRoot,callback) {\r\n\t\t\t// have to make drag handler 'draggable', not the whole item\r\n\t\t\t// because inputs and labels don't like to be inside 'draggable'\r\n\t\t\t// http://stackoverflow.com/questions/13017177/selection-disabled-while-using-html5-drag-and-drop\r\n\t\t\tvar $dragged=null;\r\n\t\t\t$sortableRoot.children().prepend(\r\n\t\t\t\t$(\"<div draggable='true' tabindex='0' title='Drag or press up/down while in focus to reorder transforms'>\").on('dragstart',function(ev){\r\n\t\t\t\t\t$dragged=$(this).parent();\r\n\t\t\t\t\tev.originalEvent.dataTransfer.effectAllowed='move';\r\n\t\t\t\t\tev.originalEvent.dataTransfer.setData('Text',name);\r\n\t\t\t\t\tif (ev.originalEvent.dataTransfer.setDragImage) { // doesn't work in IE\r\n\t\t\t\t\t\tev.originalEvent.dataTransfer.setDragImage($dragged[0],0,0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$dragged.addClass('ghost');\r\n\t\t\t\t\t},0);\r\n\t\t\t\t})\r\n\t\t\t\t.keydown(function(ev){\r\n\t\t\t\t\tvar $handle=$(this);\r\n\t\t\t\t\tvar $sorted=$handle.parent();\r\n\t\t\t\t\tif (ev.keyCode==38) {\r\n\t\t\t\t\t\t$sorted.prev().before($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (ev.keyCode==40) {\r\n\t\t\t\t\t\t$sorted.next().after($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t).on('dragover',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.originalEvent.dataTransfer.dropEffect='move';\r\n\t\t\t\tvar $target=$(this);\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\tif ($target.nextAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.before($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t} else if ($target.prevAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.after($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).on('drop',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}).on('dragend',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\t$dragged.removeClass('ghost');\r\n\t\t\t\t\t$dragged=null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\tvar $transforms;\r\n\t\t\tvar $options=$(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\t$transforms=$(\"<div>\").append(\r\n\t\t\t\t\t\toptions.transforms.map(function(transform){\r\n\t\t\t\t\t\t\treturn $(\"<div class='transform' data-transform='\"+transform.name+\"'>\").append(\r\n\t\t\t\t\t\t\t\ttransform.options.map(writeInputOption)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.formatting')+\"</legend>\").append(\r\n\t\t\t\t\toptions.formattingOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tmakeSortable($transforms,function(){\r\n\t\t\t\toptions.transformOrder=$transforms.children().map(function(){\r\n\t\t\t\t\treturn $(this).attr('data-transform');\r\n\t\t\t\t}).get();\r\n\t\t\t\tupdateCode();\r\n\t\t\t});\r\n\t\t\treturn $options;\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option.name,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri($code.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri($code.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t$container.empty().append($options=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\t$container.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append($code=$(\"<code>\").text(generateCode(options.fix(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock($code[0]);\r\n\t\t} else {\r\n\t\t\t$container.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\t$container.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(this.name+'.') && !optionStartsWith(this.name+'.'+value+'.');\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getMinLabel=function(){\r\n\treturn this.getMin().toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(){\r\n\treturn this.getMax().toString().replace('-','−');\r\n};\r\n\r\nvar FloatInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nFloatInputOption.prototype=Object.create(InputOption.prototype);\r\nFloatInputOption.prototype.constructor=FloatInputOption;\r\nFloatInputOption.prototype.getStep=function(){\r\n\treturn 'any';\r\n};\r\nFloatInputOption.prototype.getSetupStep=function(){\r\n\tif (this.getMax()>=100) {\r\n\t\treturn '0.1';\r\n\t} else if (this.getMax()>=10) {\r\n\t\treturn '0.01';\r\n\t} else {\r\n\t\treturn '0.001';\r\n\t}\r\n};\r\n\r\nvar IntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nIntInputOption.prototype=Object.create(InputOption.prototype);\r\nIntInputOption.prototype.constructor=IntInputOption;\r\nIntInputOption.prototype.getStep=function(){\r\n\treturn 1;\r\n};\r\nIntInputOption.prototype.getSetupStep=function(){\r\n\treturn 1;\r\n};\r\n\r\nvar CanvasIntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tIntInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nCanvasIntInputOption.prototype=Object.create(IntInputOption.prototype);\r\nCanvasIntInputOption.prototype.constructor=CanvasIntInputOption;\r\nCanvasIntInputOption.prototype.availableInputTypes=['constant','slider']; // can't change canvas size by moving mouse over canvas\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar OptionsBlueprint=function(){\r\n\tthis.reset();\r\n};\r\nOptionsBlueprint.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex','face','light']),\r\n\tnew Option('shape',['square','triangle','gasket','cube','hat','terrain']),\r\n\tnew Option('projection',['ortho','perspective']),\r\n];\r\nOptionsBlueprint.prototype.inputOptions=[\r\n\tnew CanvasIntInputOption('canvas.width',[1,1024],512),\r\n\tnew CanvasIntInputOption('canvas.height',[1,1024],512),\r\n\tnew FloatInputOption('background.solid.color.r',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.g',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.b',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.r',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.g',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.b',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.a',[0,1],1),\r\n\tnew IntInputOption('shape.gasket.lod',[0,10],6),\r\n\tnew IntInputOption('shape.hat.lod',[0,7],5), // max resolution limited by number of vertices <= 2^16\r\n\tnew IntInputOption('shape.terrain.lod',[0,7],5),\r\n];\r\nOptionsBlueprint.prototype.transformOptions=[];\r\nOptionsBlueprint.prototype.transforms=[];\r\n['rotate.x','rotate.y','rotate.z'].forEach(function(name){\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tvar valueOption=new FloatInputOption(name,[-180,180],0);\r\n\tvar speedOption=new FloatInputOption(name+'.speed',[-360,360],0);\r\n\tOptionsBlueprint.prototype.transformOptions.push(valueOption);\r\n\tOptionsBlueprint.prototype.transformOptions.push(speedOption);\r\n\tOptionsBlueprint.prototype.transforms.push({\r\n\t\tname:name,\r\n\t\toptions:[valueOption,speedOption]\r\n\t});\r\n});\r\nOptionsBlueprint.prototype.debugOptions=[\r\n\tnew DebugOption('debugShader',true),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptionsBlueprint.prototype.formattingOptions=[\r\n\tnew Option('indent',['tab','2','4','8']),\r\n];\r\nOptionsBlueprint.prototype.groupNames=['generalOptions','inputOptions','transformOptions','debugOptions','formattingOptions'];\r\nOptionsBlueprint.prototype.reset=function(){\r\n\tthis.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName].forEach(function(option){\r\n\t\t\tthis[option.name]=option.defaultValue;\r\n\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\tthis[option.name+'.input']='constant';\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=this.transforms.map(function(transform){\r\n\t\treturn transform.name;\r\n\t});\r\n};\r\nOptionsBlueprint.prototype.fix=function(){\r\n\treturn new OptionsInstance(this);\r\n};\r\n\r\nvar OptionsInstance=function(blueprint){\r\n\tblueprint.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName]=[];\r\n\t\tblueprint[groupName].forEach(function(option){\r\n\t\t\tvar isHidden=blueprint.generalOptions.some(function(generalOption){\r\n\t\t\t\treturn generalOption.doesValueHideOption(blueprint[generalOption.name],option);\r\n\t\t\t});\r\n\t\t\tif (!isHidden) {\r\n\t\t\t\tthis[groupName].push(option);\r\n\t\t\t\tthis[option.name]=blueprint[option.name];\r\n\t\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\t\tthis[option.name+'.input']=blueprint[option.name+'.input'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=blueprint.transformOrder;\r\n};\r\nOptionsInstance.prototype.getInputOptionsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.getInputsFor(prefix);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptionsInstance.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasInputsFor=function(prefix){\r\n\treturn this.getInputsFor(prefix).length>0;\r\n};\r\nOptionsInstance.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.getInputOptionsFor(prefix).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptionsInstance.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nmodule.exports=OptionsBlueprint;\r\n","var Lines=require('./lines.js');\r\n\r\nvar Shape=function(shaderType){\r\n\tthis.shaderType=shaderType; // 'vertex' or 'face' for colors, 'light' for normals, anything else for no colors/normals\r\n};\r\nShape.prototype.dim=2;\r\nShape.prototype.twoSided=true; // triangles can be viewed from both sides\r\nShape.prototype.glPrimitive='TRIANGLES';\r\nShape.prototype.usesElements=function(){\r\n\treturn false;\r\n};\r\nShape.prototype.getNumbersPerPosition=function(){\r\n\treturn this.dim;\r\n};\r\nShape.prototype.getNumbersPerNormal=function(){\r\n\treturn (this.shaderType=='light' && this.dim==3) ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerColor=function(){\r\n\treturn (this.shaderType=='vertex' || this.shaderType=='face') ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerVertex=function(){\r\n\treturn this.getNumbersPerPosition()+this.getNumbersPerNormal()+this.getNumbersPerColor();\r\n};\r\nShape.prototype.writeBufferData=function(){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeArraysAndBufferData=function(c,cv){\r\n\treturn new Lines(\r\n\t\tthis.writeArrays(c,cv),\r\n\t\tthis.writeBufferData()\r\n\t);\r\n};\r\n// public fn for init\r\nShape.prototype.writeInit=function(){\r\n\tvar c=(this.shaderType=='vertex' || this.shaderType=='face');\r\n\tvar cv=this.shaderType=='vertex';\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeArraysAndBufferData(c,cv),\r\n\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\"\r\n\t);\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t);\r\n\t} else if (this.dim>2 && this.shaderType=='light') {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var normalLoc=gl.getAttribLocation(program,'normal');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tnormalLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(normalLoc);\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+this.dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n// public fn for render\r\nShape.prototype.writeDraw=function(){\r\n\tif (this.usesElements()) {\r\n\t\treturn new Lines(\"gl.drawElements(gl.\"+this.glPrimitive+\",nElements,gl.UNSIGNED_SHORT,0);\");\r\n\t} else {\r\n\t\treturn new Lines(\"gl.drawArrays(gl.\"+this.glPrimitive+\",0,nVertices);\");\r\n\t}\r\n};\r\n\r\nvar LodShape=function(shaderType,lod){\r\n\tShape.call(this,shaderType);\r\n\tthis.lod=lod;\r\n};\r\nLodShape.prototype=Object.create(Shape.prototype);\r\nLodShape.prototype.constructor=LodShape;\r\n// abstract LodShape.prototype.getDistinctVertexCount=function(lodSymbol){}; // # of vertices when usesElements()\r\n// abstract LodShape.prototype.getTotalVertexCount=function(lodSymbol){}; // # of elements when usesElements(), otherwise # of vertices\r\n// abstract LodShape.prototype.writeStoreShape=function(c,cv){};\r\nLodShape.prototype.writeArraysAndBufferData=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"var minShapeLod=\"+this.lod.min+\";\",\r\n\t\t\t\"var maxShapeLod=\"+this.lod.max+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+this.getDistinctVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nMaxElements=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new Uint16Array(nMaxElements);\",\r\n\t\t\t\t\"var shapeLod,nVertices,nElements;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+this.getDistinctVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"\tnElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var shapeLod,nVertices;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var shapeLod=\"+this.lod.value+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+this.getDistinctVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new Uint16Array(nElements);\",\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeStoreShape(c,cv).indent(),\r\n\t\tthis.writeBufferData().indent(),\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape(\"+this.lod.value+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape();\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nvar Mesh=function(shaderType,lod){\r\n\tLodShape.call(this,shaderType,lod);\r\n};\r\nMesh.prototype=Object.create(LodShape.prototype);\r\nMesh.prototype.constructor=Mesh;\r\nMesh.prototype.dim=3;\r\nMesh.prototype.usesElements=function(){\r\n\treturn this.shaderType!='face';\r\n};\r\n// abstract Mesh.prototype.writeMeshInit=function(){};\r\n// abstract Mesh.prototype.writeMeshVertex=function(c,cv){};\r\nMesh.prototype.writeStoreShape=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var res=(1<<shapeLod);\"\r\n\t);\r\n\tif (this.shaderType!='face') {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j) {\",\r\n\t\t\t\"\treturn i*(res+1)+j;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*6+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"function normalize(v) {\",\r\n\t\t\t\"\tvar l=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);\",\r\n\t\t\t\"\treturn [v[0]/l,v[1]/l,v[2]/l];\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeMeshInit()\r\n\t);\r\n\tif (this.shaderType!='face') {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<=res;i++) {\",\r\n\t\t\t\"\tvar y=i/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\tfor (j=0;j<=res;j++) {\",\r\n\t\t\t\"\t\tvar x=j/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\tvar vertexOffset=vertexElement(i,j)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(2),\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i+0,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i+1,j+1);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"for (var i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (var j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<6;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nvar Square=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nSquare.prototype=Object.create(Shape.prototype);\r\nSquare.prototype.constructor=Square;\r\nSquare.prototype.glPrimitive='TRIANGLE_FAN';\r\nSquare.prototype.writeArrays=function(c,cv){\r\n\treturn new Lines(\r\n\t\t\"var nVertices=4;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t// x    y\"+(c?   \"    r    g    b\":\"\"),\r\n\t\t\"\t-0.5,-0.5,\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,-0.5,\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,+0.5,\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-0.5,+0.5,\"+(c?cv?\" 1.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n};\r\n\r\nvar Triangle=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nTriangle.prototype=Object.create(Shape.prototype);\r\nTriangle.prototype.constructor=Triangle;\r\nTriangle.prototype.writeArrays=function(c,cv){\r\n\treturn new Lines(\r\n\t\t\"var nVertices=3;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n};\r\n\r\nvar Gasket=function(shaderType,lod){\r\n\tLodShape.call(this,shaderType,lod);\r\n};\r\nGasket.prototype=Object.create(LodShape.prototype);\r\nGasket.prototype.constructor=Gasket;\r\nGasket.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.writeStoreShape=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var iv=0;\"\r\n\t);\r\n\tif (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"var ic=0;\",\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t}\r\n\tif (this.shaderType=='vertex') {\r\n\t\tlines.a(\r\n\t\t\t\"function pushVertex(v,r,g,b) {\",\r\n\t\t\t\"\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\tvertices[iv++]=r; vertices[iv++]=g; vertices[iv++]=b;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"function pushVertex(v,c) {\",\r\n\t\t\t\"\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\tvertices[iv++]=c[0]; vertices[iv++]=c[1]; vertices[iv++]=c[2];\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"function pushVertex(v) {\",\r\n\t\t\t\"\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\t\"function mix(a,b,m) {\",\r\n\t\t\"\treturn [\",\r\n\t\t\"\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\"\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\"\t];\",\r\n\t\t\"}\",\r\n\t\t\"function triangle(depth,a,b,c) {\",\r\n\t\t\"\tif (depth<=0) {\"\r\n\t);\r\n\tif (this.shaderType=='vertex') {\r\n\t\tlines.a(\r\n\t\t\t\"\t\tpushVertex(a,1.0,0.0,0.0);\",\r\n\t\t\t\"\t\tpushVertex(b,0.0,1.0,0.0);\",\r\n\t\t\t\"\t\tpushVertex(c,0.0,0.0,1.0);\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"\t\tpushVertex(a,colors[ic]);\",\r\n\t\t\t\"\t\tpushVertex(b,colors[ic]);\",\r\n\t\t\t\"\t\tpushVertex(c,colors[ic]);\",\r\n\t\t\t\"\t\tic=(ic+1)%colors.length;\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"\t\tpushVertex(a);\",\r\n\t\t\t\"\t\tpushVertex(b);\",\r\n\t\t\t\"\t\tpushVertex(c);\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\t\"\t} else {\",\r\n\t\t\"\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\"\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\"\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\"\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\"\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\"\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\"\t}\",\r\n\t\t\"}\",\r\n\t\t\"triangle(\",\r\n\t\t\"\tshapeLod,\",\r\n\t\t\"\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\"\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\"\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\");\"\r\n\t);\r\n\treturn lines;\r\n};\r\n\r\nvar Cube=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nCube.prototype=Object.create(Shape.prototype);\r\nCube.prototype.constructor=Cube;\r\nCube.prototype.dim=3;\r\nCube.prototype.twoSided=false;\r\nCube.prototype.usesElements=function(){\r\n\treturn true;\r\n};\r\nCube.prototype.writeArrays=function(c,cv){\r\n\tif (this.shaderType=='face' || this.shaderType=='light') {\r\n\t\tvar n=this.shaderType=='light';\r\n\t\treturn new Lines(\r\n\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\"\t// x    y    z \"+(n?\" n.x  n.y  n.z \":\"   r    g    b\"),\r\n\t\t\t\"\t-0.5,-0.5,-0.5,\"+(n?\"-1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\")+\" // left face\",\r\n\t\t\t\"\t-0.5,-0.5,+0.5,\"+(n?\"-1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\"),\r\n\t\t\t\"\t-0.5,+0.5,-0.5,\"+(n?\"-1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\"),\r\n\t\t\t\"\t-0.5,+0.5,+0.5,\"+(n?\"-1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\"),\r\n\t\t\t\"\t+0.5,-0.5,-0.5,\"+(n?\"+1.0, 0.0, 0.0,\":\" 0.0, 1.0, 0.0,\")+\" // right face\",\r\n\t\t\t\"\t+0.5,+0.5,-0.5,\"+(n?\"+1.0, 0.0, 0.0,\":\" 0.0, 1.0, 0.0,\"),\r\n\t\t\t\"\t+0.5,-0.5,+0.5,\"+(n?\"+1.0, 0.0, 0.0,\":\" 0.0, 1.0, 0.0,\"),\r\n\t\t\t\"\t+0.5,+0.5,+0.5,\"+(n?\"+1.0, 0.0, 0.0,\":\" 0.0, 1.0, 0.0,\"),\r\n\t\t\t\"\t-0.5,-0.5,-0.5,\"+(n?\" 0.0,-1.0, 0.0,\":\" 1.0, 1.0, 0.0,\")+\" // bottom face\",\r\n\t\t\t\"\t+0.5,-0.5,-0.5,\"+(n?\" 0.0,-1.0, 0.0,\":\" 1.0, 1.0, 0.0,\"),\r\n\t\t\t\"\t-0.5,-0.5,+0.5,\"+(n?\" 0.0,-1.0, 0.0,\":\" 1.0, 1.0, 0.0,\"),\r\n\t\t\t\"\t+0.5,-0.5,+0.5,\"+(n?\" 0.0,-1.0, 0.0,\":\" 1.0, 1.0, 0.0,\"),\r\n\t\t\t\"\t-0.5,+0.5,-0.5,\"+(n?\" 0.0,+1.0, 0.0,\":\" 0.0, 0.0, 1.0,\")+\" // top face\",\r\n\t\t\t\"\t-0.5,+0.5,+0.5,\"+(n?\" 0.0,+1.0, 0.0,\":\" 0.0, 0.0, 1.0,\"),\r\n\t\t\t\"\t+0.5,+0.5,-0.5,\"+(n?\" 0.0,+1.0, 0.0,\":\" 0.0, 0.0, 1.0,\"),\r\n\t\t\t\"\t+0.5,+0.5,+0.5,\"+(n?\" 0.0,+1.0, 0.0,\":\" 0.0, 0.0, 1.0,\"),\r\n\t\t\t\"\t-0.5,-0.5,-0.5,\"+(n?\" 0.0, 0.0,-1.0,\":\" 1.0, 0.0, 1.0,\")+\" // back face\",\r\n\t\t\t\"\t-0.5,+0.5,-0.5,\"+(n?\" 0.0, 0.0,-1.0,\":\" 1.0, 0.0, 1.0,\"),\r\n\t\t\t\"\t+0.5,-0.5,-0.5,\"+(n?\" 0.0, 0.0,-1.0,\":\" 1.0, 0.0, 1.0,\"),\r\n\t\t\t\"\t+0.5,+0.5,-0.5,\"+(n?\" 0.0, 0.0,-1.0,\":\" 1.0, 0.0, 1.0,\"),\r\n\t\t\t\"\t-0.5,-0.5,+0.5,\"+(n?\" 0.0, 0.0,+1.0,\":\" 0.0, 1.0, 1.0,\")+\" // front face\",\r\n\t\t\t\"\t+0.5,-0.5,+0.5,\"+(n?\" 0.0, 0.0,+1.0,\":\" 0.0, 1.0, 1.0,\"),\r\n\t\t\t\"\t-0.5,+0.5,+0.5,\"+(n?\" 0.0, 0.0,+1.0,\":\" 0.0, 1.0, 1.0,\"),\r\n\t\t\t\"\t+0.5,+0.5,+0.5,\"+(n?\" 0.0, 0.0,+1.0,\":\" 0.0, 1.0, 1.0,\"),\r\n\t\t\t\"]);\",\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new Uint16Array([\",\r\n\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\"]);\"\r\n\t\t);\r\n\t} else {\r\n\t\treturn new Lines(\r\n\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\"\t// x    y    z\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\"\t-0.5,-0.5,-0.5,\"+(c?\" 0.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\"\t+0.5,-0.5,-0.5,\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\"\t-0.5,+0.5,-0.5,\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\"\t+0.5,+0.5,-0.5,\"+(c?\" 1.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\"\t-0.5,-0.5,+0.5,\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\"\t+0.5,-0.5,+0.5,\"+(c?\" 1.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\"\t-0.5,+0.5,+0.5,\"+(c?\" 0.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\"\t+0.5,+0.5,+0.5,\"+(c?\" 1.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\"]);\",\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new Uint16Array([\",\r\n\t\t\t\"\t4, 6, 0, 0, 6, 2, // left face\",\r\n\t\t\t\"\t1, 3, 5, 5, 3, 7, // right face\",\r\n\t\t\t\"\t0, 1, 4, 4, 1, 5, // bottom face\",\r\n\t\t\t\"\t2, 6, 3, 3, 6, 7, // top face\",\r\n\t\t\t\"\t0, 2, 1, 1, 2, 3, // back face\",\r\n\t\t\t\"\t5, 7, 4, 4, 7, 6, // front face\",\r\n\t\t\t\"]);\"\r\n\t\t);\r\n\t}\r\n};\r\n\r\nvar Hat=function(shaderType,lod){\r\n\tMesh.call(this,shaderType,lod);\r\n};\r\nHat.prototype=Object.create(Mesh.prototype);\r\nHat.prototype.constructor=Hat;\r\nHat.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\")+1,2)\";\r\n};\r\nHat.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*6\";\r\n};\r\nHat.prototype.writeMeshInit=function(){\r\n\treturn new Lines(\r\n\t\t\"var xyRange=4;\",\r\n\t\t\"var xyScale=1/(4*Math.sqrt(2));\"\r\n\t);\r\n};\r\nHat.prototype.writeMeshVertex=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var r2=(x*x+y*y)/2;\",\r\n\t\t\"var A=Math.exp(-r2)/Math.PI;\",\r\n\t\t\"var z=A*(1-r2);\",\r\n\t\t\"vertices[vertexOffset+0]=x*xyScale;\",\r\n\t\t\"vertices[vertexOffset+1]=y*xyScale;\",\r\n\t\t\"vertices[vertexOffset+2]=z;\"\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var normal=normalize([(z+A)*x/xyScale,(z+A)*y/xyScale,1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t\"var ic=(i&1)*2+(j&1);\",\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nvar Terrain=function(shaderType,lod){\r\n\tMesh.call(this,shaderType,lod);\r\n};\r\nTerrain.prototype=Object.create(Mesh.prototype);\r\nTerrain.prototype.constructor=Terrain;\r\nTerrain.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\")+1,2)\";\r\n};\r\nTerrain.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*6\";\r\n};\r\nTerrain.prototype.writeMeshInit=function(){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var xyRange=1/Math.sqrt(2);\",\r\n\t\t\"var zRange=xyRange;\",\r\n\t\t\"var mask=res-1;\",\r\n\t\t\"function zOffset(i,j) {\",\r\n\t\t\"\treturn vertexElement(i,j\"+(this.shaderType!='face'?\"\":\",0\")+\")*\"+this.getNumbersPerVertex()+\"+2;\",\r\n\t\t\"}\",\r\n\t\t\"function noise(depth) {\",\r\n\t\t\"\tvar r=zRange/Math.pow(2,shapeLod-depth-1);\",\r\n\t\t\"\treturn Math.random()*2*r-r;\",\r\n\t\t\"}\",\r\n\t\t\"vertices[2]=0.0;\",\r\n\t\t\"var i0,i1,i2,i3;\",\r\n\t\t\"var j0,j1,j2,j3;\",\r\n\t\t\"for (var depth=shapeLod-1;depth>=0;depth--) {\",\r\n\t\t\"\tvar d=1<<depth;\",\r\n\t\t\"\t// diamond step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti1=i2-d;\",\r\n\t\t\"\t\t\tj1=j2-d;\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i1,j1)]+vertices[zOffset(i1,j3)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i3,j1)]+vertices[zOffset(i3,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"\t// square step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti0=(i2-2*d)&mask;\",\r\n\t\t\"\t\t\tj0=(j2-2*d)&mask;\",\r\n\t\t\"\t\t\ti1=(i2-d);\",\r\n\t\t\"\t\t\tj1=(j2-d);\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j1)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j0)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i3,j1)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t\tvertices[zOffset(i1,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i0,j2)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i1,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.shaderType!='face') {\r\n\t\tlines.a(\r\n\t\t\t\"for (i0=0;i0<res;i0++) vertices[zOffset(i0,res)]=vertices[zOffset(i0,0)];\",\r\n\t\t\t\"for (j0=0;j0<res;j0++) vertices[zOffset(res,j0)]=vertices[zOffset(0,j0)];\",\r\n\t\t\t\"vertices[zOffset(res,res)]=vertices[zOffset(0,0)];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nTerrain.prototype.writeMeshVertex=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"vertices[vertexOffset+0]=x;\",\r\n\t\t\"vertices[vertexOffset+1]=y;\",\r\n\t\t(this.shaderType!='face'\r\n\t\t\t?\"// vertices[vertexOffset+2] already written\"\r\n\t\t\t:\"vertices[vertexOffset+2]=vertices[zOffset((i+di)&mask,(j+dj)&mask)];\"\r\n\t\t)\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var d=4*xyRange/res;\",\r\n\t\t\t\"var normal=normalize([\",\r\n\t\t\t(this.shaderType!='face'\r\n\t\t\t\t?\"\t(vertices[zOffset(i,(j-1)&mask)]-vertices[zOffset(i,(j+1)&mask)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di)&mask,(j+dj-1)&mask)]-vertices[zOffset((i+di)&mask,(j+dj+1)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t(this.shaderType!='face'\r\n\t\t\t\t?\"\t(vertices[zOffset((i-1)&mask,j)]-vertices[zOffset((i+1)&mask,j)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di-1)&mask,(j+dj)&mask)]-vertices[zOffset((i+di+1)&mask,(j+dj)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t\"1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t\"var ic=(i&1)*2+(j&1);\",\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nexports.Square=Square;\r\nexports.Triangle=Triangle;\r\nexports.Gasket=Gasket;\r\nexports.Cube=Cube;\r\nexports.Hat=Hat;\r\nexports.Terrain=Terrain;\r\n"],"sourceRoot":"."}