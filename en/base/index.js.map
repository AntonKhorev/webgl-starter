{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/listeners.js","src/main.js","src/options.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","listeners","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","isMousemoveInput","indexOf","indentLines","level","lines","map","line","Array","join","generateVertexShaderLines","needsUniform","push","needsTransform","shader","generateFragmentShaderLines","hasInputsFor","generateControlMessageLines","writeOptionGroup","group","filter","option","forEach","inputOptions","transformOptions","concat","generateInputLines","getMinLabel","getStep","getMin","getMax","getMaxLabel","generateMakeProgramLines","debugShader","generateShapeLines","square","c","triangle","gasket","shape","generateBufferLines","generateInputHandlerLines","writeListener","listener","write","isAnimated","debugInputs","colorStates","optionPrefix","updateFnName","stateVarPrefix","toUpperCase","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","SliderListener","enter","log","post","colorMultipleListeners","varName","canvasMousemoveListener","prexy","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","CanvasMousemoveListener","cond","entry","state","generateRenderLines","renderInner","background","needUpdateCanvasFunction","hasInputs","hasSliderInputs","./listeners.js",2,"Listener","this","entries","prototype","makePushArgs","where","arguments","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","indent","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","innerLines","match","exec","id","Object","create","constructor","query","xLine","yLine",3,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.input","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shape.gasket.depth","options.animation.rotation.speed","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.transform","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShader","options.debugInputs","controls.type.mousemovex","controls.type.mousemovey","controls.to","$","each","showHideSuboptionInputs","optionName","optionValue","optionsNode","find","show","not","hide","updateCode","codeNode","text","cloneWithoutHidden","window","hljs","highlightBlock","writeGeneralOption","append","availableValues","availableValue","val","change","value","writeInputOption","input","inputId","attr","parseFloat","click","defaultValue","availableInputTypes","availableInputType","writeDebugOption","prop","writeOptions","generalOptions","debugOptions","hideSuboptionInputs","writeButtons","open","containerNode","empty","./code.js","./options.js",4,"Option","undefined","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","replace","DebugOption","reset","some","matchedOptions","endsWith","suffix","newOptions","section","generalOption"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var listeners=require('./listeners.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\tfunction indentLines(level,lines) {\r\n\t\treturn lines.map(function(line){\r\n\t\t\treturn Array(level+1).join(\"\t\")+line;\r\n\t\t});\r\n\t}\r\n\tfunction appendLinesToLastLine(lines,addedLines) {\r\n\t\tvar lastLine=lines.pop();\r\n\t\tvar indent=/^\\s*/.exec(lastLine)[0];\r\n\t\taddedLines.forEach(function(line,i){\r\n\t\t\tif (i==0) {\r\n\t\t\t\tlines.push(lastLine+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(indent+line);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction generateVertexShaderLines() {\r\n\t\tlines=[];\r\n\t\tif (options.needsUniform('rotate.z')) {\r\n\t\t\tlines.push(\"uniform float rotateZ;\");\r\n\t\t}\r\n\t\tif (options.needsTransform('rotate.z')) {\r\n\t\t\tlines.push(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.push(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"void main() {\"\r\n\t\t);\r\n\t\tif (options.needsTransform('rotate.z')) {\r\n\t\t\tif (options.needsUniform('rotate.z')) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfloat c=cos(radians(rotateZ));\",\r\n\t\t\t\t\t\"\tfloat s=sin(radians(rotateZ));\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfloat c=cos(radians(\"+floatOptionValue('rotate.z')+\"));\",\r\n\t\t\t\t\t\"\tfloat s=sin(radians(\"+floatOptionValue('rotate.z')+\"));\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tgl_Position=vec4(mat2(\",\r\n\t\t\t\t\"\t\t c, s,\",\r\n\t\t\t\t\"\t\t-s, c\",\r\n\t\t\t\t\"\t)*position,0,1);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tgl_Position=position;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tinterpolatedColor=color;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\treturn [\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else if (options.hasInputsFor('shader.single.color')) {\r\n\t\t\treturn [\r\n\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\"+colorValue('shader.single.color')+\");\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\tfunction generateControlMessageLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\tif (lines.length) {\r\n\t\t\treturn [\"<ul>\"].concat(lines,[\"</ul>\"]);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\tfunction generateInputLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"+\r\n\t\t\t\t\t\t(option.getStep()==1\r\n\t\t\t\t\t\t\t? \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t\t: \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t)+\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\",\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateMakeProgramLines() {\r\n\t\tlines=[\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"\tvar vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(vertexShader);\",\r\n\t\t];\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar program=gl.createProgram();\",\r\n\t\t\t\"\tgl.attachShader(program,vertexShader);\",\r\n\t\t\t\"\tgl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"\tgl.linkProgram(program);\",\r\n\t\t\t\"\treturn program;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateShapeLines() {\r\n\t\tvar c=options.shader=='vertex';\r\n\t\tfunction square() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=4;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t// x    y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-0.5,-0.5,\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,-0.5,\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,+0.5,\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\"\t-0.5,+0.5,\"+(c?\" 1.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction triangle() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=3;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction gasket() {\r\n\t\t\tlines=[];\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketMaxDepth=10;\",\r\n\t\t\t\t\t\"var nMaxVertices=Math.pow(3,gasketMaxDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"var gasketDepth,nVertices;\",\r\n\t\t\t\t\t\"function storeGasketVertices(newGasketDepth) {\",\r\n\t\t\t\t\t\"\tgasketDepth=newGasketDepth\",\r\n\t\t\t\t\t\"\tnVertices=Math.pow(3,gasketDepth)*3;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketDepth=\"+intOptionValue('shape.gasket.depth')+\";\",\r\n\t\t\t\t\t\"var nVertices=Math.pow(3,gasketDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"function storeGasketVertices() {\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tvar iv=0;\"\r\n\t\t\t);\r\n\t\t\tif (c) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v,r,g,b) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=r; vertices[iv++]=g; vertices[iv++]=b;\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfunction mix(a,b,m) {\",\r\n\t\t\t\t\"\t\treturn [\",\r\n\t\t\t\t\"\t\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\t\t\"\t\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\t\t\"\t\t];\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\tfunction triangle(depth,a,b,c) {\",\r\n\t\t\t\t\"\t\tif (depth<=0) {\"\r\n\t\t\t);\r\n\t\t\tif (c) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a,1.0,0.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b,0.0,1.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c,0.0,0.0,1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\t\t} else {\",\r\n\t\t\t\t\"\t\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\t\t\"\t\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\t\t\"\t\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\t\t\"\t\t}\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\ttriangle(\",\r\n\t\t\t\t\"\t\tgasketDepth,\",\r\n\t\t\t\t\"\t\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\t\t\"\t);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices(\"+intOptionValue('shape.gasket.depth')+\");\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tif (options.shape=='square') {\r\n\t\t\treturn square();\r\n\t\t} else if (options.shape=='triangle') {\r\n\t\t\treturn triangle();\r\n\t\t} else if (options.shape=='gasket') {\r\n\t\t\treturn gasket();\r\n\t\t}\r\n\t}\r\n\tfunction generateBufferLines() {\r\n\t\tvar lines=[\r\n\t\t\t\"var buffer=gl.createBuffer();\",\r\n\t\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,buffer);\",\r\n\t\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\",\r\n\t\t\t\"\",\r\n\t\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\",\r\n\t\t];\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tpositionLoc,2,gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*5,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*5,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*2\",\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(positionLoc,2,gl.FLOAT,false,0,0);\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateInputHandlerLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tlistener.write(!options.isAnimated(),options.debugInputs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[name+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\t\tvarName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options['shape.gasket.depth.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('shape.gasket.depth');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t.post(\"storeGasketVertices(parseInt(this.value));\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('shape.gasket.depth')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.prexy(\r\n\t\t\t\t\toptions['shape.gasket.depth.input'],\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t)\r\n\t\t\t\t.cond(\"newGasketDepth!=gasketDepth\")\r\n\t\t\t\t.log(\"console.log('shape.gasket.depth input value:',newGasketDepth);\")\r\n\t\t\t\t.post(\"storeGasketVertices(newGasketDepth);\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t}\r\n\t\tif (options['rotate.z.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('rotate.z');\r\n\t\t\tvar entry=listener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\tif (options['rotate.z.speed']==0 && options['rotate.z.speed.input']=='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var rotateZLoc=gl.getUniformLocation(program,'rotateZ');\",\r\n\t\t\t\t\t\"function updateRotateZ() {\",\r\n\t\t\t\t\t\"\tgl.uniform1f(rotateZLoc,parseFloat(document.getElementById('rotate.z').value));\",\r\n\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\"updateRotateZ();\"\r\n\t\t\t\t);\r\n\t\t\t\tentry.post(\"updateRotateZ();\");\r\n\t\t\t}\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('rotate.z')) {\r\n\t\t\tif (options['rotate.z.speed']==0 && options['rotate.z.speed.input']=='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var rotateZLoc=gl.getUniformLocation(program,'rotateZ');\",\r\n\t\t\t\t\t\"gl.uniform1f(rotateZLoc,\"+floatOptionValue('rotate.z')+\");\"\r\n\t\t\t\t);\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions['rotate.z.input'],\r\n\t\t\t\t\t\t\"var rotateZ=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\"var rotateZ=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('rotate.z input value:',rotateZ);\")\r\n\t\t\t\t\t.post(\"gl.uniform1f(rotateZLoc,rotateZ);\");\r\n\t\t\t} else {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var rotateZ=\"+floatOptionValue('rotate.z')+\";\")\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions['rotate.z.input'],\r\n\t\t\t\t\t\t\"rotateZ=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\"rotateZ=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('rotate.z input value:',rotateZ);\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options['rotate.z.speed.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('rotate.z.speed');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('rotate.z.speed')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.state(\"var rotateZSpeed=\"+floatOptionValue('rotate.z.speed')+\";\")\r\n\t\t\t\t.prexy(\r\n\t\t\t\t\toptions['rotate.z.speed.input'],\r\n\t\t\t\t\t\"rotateZSpeed=360*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\"rotateZSpeed=360*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t)\r\n\t\t\t\t.log(\"console.log('rotate.z.speed input value:',rotateZSpeed);\");\r\n\t\t}\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\tif (lines.length) lines.push(\"\t\");\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateRenderLines() {\r\n\t\tfunction renderInner() {\r\n\t\t\tvar lines=[];\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options['rotate.z.speed']!=0 || options['rotate.z.speed.input']!='constant') {\r\n\t\t\t\tif (options['rotate.z.input']=='slider') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"function wrap(x,maxAbsX) {\",\r\n\t\t\t\t\t\t\"\tx%=maxAbsX*2;\",\r\n\t\t\t\t\t\t\"\tif (Math.abs(x)<=maxAbsX) return x;\",\r\n\t\t\t\t\t\t\"\treturn x-(x>0?1:-1)*maxAbsX*2;\",\r\n\t\t\t\t\t\t\"}\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options['rotate.z.speed.input']=='constant' && options['rotate.z.input']=='constant') {\r\n\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var rotateZ=\"+(options['rotate.z']\r\n\t\t\t\t\t\t\t? floatOptionValue('rotate.z')+\"+\"\r\n\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t)+floatOptionValue('rotate.z.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\tif (options['rotate.z.input']=='slider') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"var rotateZInput=document.getElementById('rotate.z');\",\r\n\t\t\t\t\t\t\t\"var rotateZ=parseFloat(rotateZInput.value);\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (options['rotate.z.speed.input']=='slider') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"var rotateZSpeedInput=document.getElementById('rotate.z.speed');\",\r\n\t\t\t\t\t\t\t\"var rotateZSpeed=parseFloat(rotateZSpeedInput.value);\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"rotateZ+=\"+(options['rotate.z.speed.input']=='constant'\r\n\t\t\t\t\t\t\t? floatOptionValue('rotate.z.speed')\r\n\t\t\t\t\t\t\t: \"rotateZSpeed\"\r\n\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (options['rotate.z.input']=='slider') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"rotateZ=wrap(rotateZ,180);\",\r\n\t\t\t\t\t\t\t\"rotateZInput.value=rotateZ;\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.uniform1f(rotateZLoc,rotateZ);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.shape=='square') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLE_FAN,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLES,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=[];\r\n\t\tif (options.isAnimated()) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var rotateZLoc=gl.getUniformLocation(program,'rotateZ');\"\r\n\t\t\t);\r\n\t\t\tif (options['rotate.z.speed.input']=='constant' && options['rotate.z.input']=='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options['rotate.z.speed.input']!='constant' && options['rotate.z.input']=='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var rotateZ=\"+floatOptionValue('rotate.z')+\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar needUpdateCanvasFunction=options.isAnimated()||options.hasInputs();\r\n\t\tif (needUpdateCanvasFunction) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateCanvas(time) {\"\r\n\t\t\t);\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tindentLines(1,renderInner())\r\n\t\t\t);\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tif (options['rotate.z.speed.input']!='constant' || options['rotate.z.input']!='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trequestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"requestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"updateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\trenderInner()\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\treturn [].concat([\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t],options.hasSliderInputs()?[\r\n\t\t\"<style>\",\r\n\t\t\"\tlabel {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 15em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.min {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.max {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: left;\",\r\n\t\t\"\t}\",\r\n\t\t\"</style>\",\r\n\t]:[],[\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t],indentLines(1,generateVertexShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\t\"\tprecision mediump float;\",\r\n\t],indentLines(1,generateFragmentShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='512' height='512'></canvas>\",\r\n\t\t\"</div>\",\r\n\t],generateControlMessageLines(),generateInputLines(),[\r\n\t\t\"<script>\",\r\n\t],indentLines(1,generateMakeProgramLines()),[\r\n\t\t\"\t\",\r\n\t\t\"\tvar canvas=document.getElementById('myCanvas');\",\r\n\t\t\"\tvar gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\",\r\n\t],(options.background=='solid' && !options.hasInputsFor('background.solid.color'))?[\r\n\t\t\"\tgl.clearColor(\"+colorValue('background.solid.color')+\");\",\r\n\t]:[],[\r\n\t\t\"\tvar program=makeProgram(\",\r\n\t\t\"\t\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\"\t\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\"\t);\",\r\n\t\t\"\tgl.useProgram(program);\",\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateShapeLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateBufferLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateInputHandlerLines()),indentLines(1,generateRenderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</body>\",\r\n\t\t\"</html>\",\r\n\t]).join(\"\\n\");\r\n};\r\n",null,"var Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tfunction indent(line) {\r\n\t\treturn \"\\t\"+line;\r\n\t}\r\n\tvar outerLines=[];\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push(indent(line));\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines=outerLines.concat(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"updateCanvas();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (innerLines.length) {\r\n\t\tinnerLines=this.innerPrependedLines().concat(innerLines);\r\n\t}\r\n\tif (innerLines.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.concat(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\t[br[0]+match[1]+br[1]]\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tif (innerLines.length) {\r\n\t\treturn outerLines.concat(\r\n\t\t\tthis.wrapCall([].concat(\r\n\t\t\t\t[br[0]+\"function(\"+this.bracketFnArg()+\"){\"],\r\n\t\t\t\tinnerLines.map(indent),\r\n\t\t\t\t[\"}\"+br[1]]\r\n\t\t\t))\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn [].concat(\r\n\t\t[\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\"],\r\n\t\tlines.map(function(line){\r\n\t\t\treturn \"\\t\"+line;\r\n\t\t}),\r\n\t\t[\"});\"]\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'options.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShader': 'Log shader compilation errors',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar containerNode=$(this);\r\n\t\tvar optionsNode;\r\n\t\tvar codeNode;\r\n\t\tvar options=new Options();\r\n\r\n\t\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\t\t// TODO sub-sub option support?\r\n\t\t\toptionsNode.find(\"[data-option^='\"+optionName+\".']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tcodeNode.text(generateCode(options.cloneWithoutHidden(),i18n));\r\n\t\t\tif (window.hljs) hljs.highlightBlock(codeNode[0]);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option.name,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar input;\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tinput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tinput.val(option.defaultValue).change();\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\toptions.transformOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option.name,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri(codeNode.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri(codeNode.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tcontainerNode.empty().append(optionsNode=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\tcontainerNode.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append(codeNode=$(\"<code>\").text(generateCode(options.cloneWithoutHidden(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock(codeNode[0]);\r\n\t\t} else {\r\n\t\t\tcontainerNode.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\tcontainerNode.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(this.name+'.') && !optionStartsWith(this.name+'.'+value+'.');\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getStep=function(){\r\n\tif (this.availableValues.length>=3) {\r\n\t\treturn this.availableValues[2];\r\n\t} else {\r\n\t\treturn 'any';\r\n\t}\r\n};\r\nInputOption.prototype.getMinLabel=function(){\r\n\treturn this.getMin().toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(){\r\n\treturn this.getMax().toString().replace('-','−');\r\n};\r\n\r\n/*\r\nvar TransformOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nTransformOption.prototype=Object.create(InputOption.prototype);\r\nTransformOption.prototype.constructor=TransformOption;\r\nTransformOption.prototype.availableInputTypes=InputOption.prototype.availableInputTypes.concat(['animated']);\r\n*/\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar Options=function(){\r\n\tthis.reset();\r\n};\r\nOptions.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex']),\r\n\tnew Option('shape',['square','triangle','gasket']),\r\n\t//new Option('animation',['none','rotation']),\r\n];\r\nOptions.prototype.inputOptions=[\r\n\tnew InputOption('background.solid.color.r',[0,1],1),\r\n\tnew InputOption('background.solid.color.g',[0,1],1),\r\n\tnew InputOption('background.solid.color.b',[0,1],1),\r\n\tnew InputOption('background.solid.color.a',[0,1],1),\r\n\tnew InputOption('shader.single.color.r',[0,1],1),\r\n\tnew InputOption('shader.single.color.g',[0,1]),\r\n\tnew InputOption('shader.single.color.b',[0,1]),\r\n\tnew InputOption('shader.single.color.a',[0,1],1),\r\n\tnew InputOption('shape.gasket.depth',[0,10,1],6),\r\n];\r\nOptions.prototype.transformOptions=[\r\n\tnew InputOption('rotate.z',[-180,180],0),\r\n\tnew InputOption('rotate.z.speed',[-360,360],0), // TODO make it default to 0.2*360 when able to add/delete transforms\r\n];\r\nOptions.prototype.debugOptions=[\r\n\tnew DebugOption('debugShader',true),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptions.prototype.reset=function(){\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.transformOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n};\r\n\r\n// TODO check what .has*() fns are in use\r\nOptions.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptions.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptions.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptions.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nOptions.prototype.cloneWithoutHidden=function(){\r\n\t// clone and set .input=constant for hidden sections\r\n\tvar newOptions=new Options();\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\t[this.inputOptions,this.transformOptions].forEach(function(section){\r\n\t\tsection.forEach(function(option){\r\n\t\t\tnewOptions[option.name]=this[option.name];\r\n\t\t\tif (\r\n\t\t\t\tthis.generalOptions.some(function(generalOption){\r\n\t\t\t\t\treturn generalOption.doesValueHideOption(this[generalOption.name],option);\r\n\t\t\t\t},this)\r\n\t\t\t) {\r\n\t\t\t\tnewOptions[option.name+'.input']='constant';\r\n\t\t\t} else {\r\n\t\t\t\tnewOptions[option.name+'.input']=this[option.name+'.input'];\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\treturn newOptions;\r\n};\r\n\r\nmodule.exports=Options;\r\n"],"sourceRoot":"."}