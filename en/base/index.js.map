{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/i18n.js","src/lines.js","src/listeners.js","src/main.js","src/options.js","src/shapes.js","src/shapes/cube.js","src/shapes/gasket.js","src/shapes/hat.js","src/shapes/lodshape.js","src/shapes/mesh.js","src/shapes/shape.js","src/shapes/square.js","src/shapes/terrain.js","src/shapes/triangle.js","src/uniform.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Lines","listeners","shapes","Uniform","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","glslColorValue","g","b","isMousemoveInput","indexOf","makeShape","className","shape","charAt","toUpperCase","slice","shapeParams","getInputOptionsFor","map","option","value","changes","min","max","getMin","getMax","shapeCtorArgs","elements","shader","concat","Function","prototype","bind","apply","generateHtmlStyleLines","lines","hasSliderInputs","wrapIfNotEmpty","generateVertexShaderLines","generateMain","forEach","d","D","optName","varName","needsTransform","needsUniform","needAspectConstant","projection","needTransformedPosition","use2dTransform","transformOrder","transformName","rotate.x","rotate.y","rotate.z","needAspectUniform","dim","hasInputsFor","indent","generateFragmentShaderLines","lightDirectionUniform","getGlslDeclarationLines","twoSided","getGlslValue","generateHtmlControlMessageLines","writeOptionGroup","group","filter","inputOptions","transformOptions","generateHtmlInputLines","getMinLabel","getStep","getMaxLabel","lod","generateJsMakeProgramLines","debugShaders","wrap","generateJsInitLines","background","generateJsInputHandlerLines","writeListener","listener","write","writeListenerArgs","canvasUpdater","canvasListener","wh","SliderListener","enter","log","post","colorStates","optionPrefix","updateFnName","stateVarPrefix","c","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","join","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","colorMultipleListeners","canvasMousemoveListener","prexy","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","isAnimated","debugInputs","CanvasMousemoveListener","getJsInterfaceLines","getInputsFor","lastIndexOf","substring","S","undefined","cond","updateName","entry","state","generateJsRenderLines","renderInner","renderInnerTransforms","needStartTime","needPrevTime","needWrap","innerTransformsLines","writeDraw","innerLines","hasInputs","scriptLines","interleave","writeInit","debugArrays","Array","./lines.js","./listeners.js","./shapes.js","./uniform.js",2,"id","message.hljs","message.elements","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shader.face","options.shader.light","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.shape.hat","options.shape.terrain","options.elements","options.elements.0","options.elements.8","options.elements.16","options.elements.32","options.projection","options.projection.ortho","options.projection.perspective","options.input","options.canvas.width","options.canvas.height","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shader.light.direction.x","options.shader.light.direction.y","options.shader.light.direction.z","options.shape.lodShape.lod","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShaders","options.debugArrays","options.debugInputs","options.formatting","options.indent","options.indent.tab","options.indent.2","options.indent.4","options.indent.8","controls.type.mousemovex","controls.type.mousemovey","controls.to",3,"this","data","addFlattenedArgs","flattenArgs","arguments","push","isArray","lastLine","pop","level","line","isEmpty","first","begin","end","unshift","replace","match",4,"Listener","entries","makePushArgs","where","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","exec","Object","create","constructor","query","xLine","yLine",5,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","$","each","showHideSuboptionInputs","optionValue","$options","find","getSuboptionScopePrefix","show","not","getSuboptionHitPrefix","hide","updateCode","clearTimeout","codeUpdateTimeoutId","setTimeout","$code","text","fix","window","hljs","highlightBlock","codeUpdateDelay","writeGeneralOption","$option","append","availableValues","availableValue","val","change","writeInputOption","inputListener","that","checkValidity","parseFloat","sliderInput","numberInput","inputId","attr","getSetupStep","on","click","defaultValue","availableInputTypes","availableInputType","writeDebugOption","prop","makeSortable","$sortableRoot","callback","$dragged","children","prepend","ev","parent","originalEvent","dataTransfer","effectAllowed","setData","setDragImage","addClass","keydown","$handle","$sorted","keyCode","prev","before","focus","next","after","preventDefault","dropEffect","$target","nextAll","is","prevAll","removeClass","writeOptions","$transforms","generalOptions","transforms","transform","debugOptions","formattingOptions","get","hideSuboptionInputs","writeButtons","open","$container","empty","./code.js","./i18n.js","./options.js",6,"Option","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","FloatInputOption","IntInputOption","CanvasIntInputOption","DebugOption","OptionsBlueprint","reset","valueOption","speedOption","groupNames","groupName","OptionsInstance","blueprint","isHidden","some","generalOption","matchedOptions","endsWith","suffix",7,"Square","Triangle","Gasket","Cube","Hat","Terrain","./shapes/cube.js","./shapes/gasket.js","./shapes/hat.js","./shapes/square.js","./shapes/terrain.js","./shapes/triangle.js",8,"Shape","elementIndexBits","shaderType","writeArrays","cv","appendVertex","iFace","iVertex","firstInFace","vertexLines","cubeVertexPositions","cubeFaceNormals","cubeVertexColors","cubeFaceColors","cubeFaceNames","nCubeVertices","nCubeFaces","cubeFaceVertices","quadToTriangleMap","usesElements","j","k","getElementIndexJsArray","elementLines","../lines.js","./shape.js",9,"LodShape","getDistinctVertexCount","lodSymbol","getFaceVertexCount","getTotalVertexCount","writeStoreShape","writePushVertex","writeTriangle","writeInitialTriangleCall","./lodshape.js",10,"Mesh","writeMeshInit","writeMeshVertex","getNumbersPerNormal","./mesh.js",11,"maxLod","getMaxPossibleLod","nVerticesFn","indexLimit","m","eval","writeArraysAndBufferData","getNumbersPerVertex","writeDebug","writeBufferData",12,13,"glPrimitive","getNumbersPerPosition","getNumbersPerColor","getElementIndexGlType",14,15,"noFaces",16,17,"components","split","values","inputs","modeConstant","modeFloats","modeVectorDim","isVar","formatSignedValue","varNameC","varComponentMap","vecType","vs","equalValues","v","capitalize","writeManyListenersLines","writeOneListenerLines","componentValue","manyListenersLines","oneListenerLines","updateFnLines"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCAA,GAAAK,GAAAX,EAAA,cACAY,EAAAZ,EAAA,kBACAa,EAAAb,EAAA,eACAc,EAAAd,EAAA,eAEAU,GAAAJ,QAAA,SAAAS,EAAAC,GACA,QAAAC,GAAAC,GACA,MAAAC,UAAAJ,EAAAG,IAEA,QAAAE,GAAAF,GACA,MAAAH,GAAAG,GAAAG,QAAA,GAEA,QAAAC,GAAAC,GACA,MAAAH,GAAAG,EAAA,MAAA,IACAH,EAAAG,EAAA,MAAA,IACAH,EAAAG,EAAA,MAAA,IACAH,EAAAG,EAAA,MAEA,QAAAC,GAAAD,GACA,GAAA5B,GAAAyB,EAAAG,EAAA,MACAE,EAAAL,EAAAG,EAAA,MACAG,EAAAN,EAAAG,EAAA,MACAxB,EAAAqB,EAAAG,EAAA,KACA,OAAA5B,IAAAI,GAAA0B,GAAA1B,GAAA2B,GAAA3B,EACAA,EAEAJ,EAAA,IAAA8B,EAAA,IAAAC,EAAA,IAAA3B,EAGA,QAAA4B,GAAAT,GACA,OAAA,aAAA,cAAAU,QAAAb,EAAAG,EAAA,YAAA,EAGA,QAAAW,KACA,GAAAC,GAAAf,EAAAgB,MAAAC,OAAA,GAAAC,cAAAlB,EAAAgB,MAAAG,MAAA,GACAC,EAAApB,EAAAqB,mBAAA,SAAAC,IAAA,SAAAC,GACA,MAAA,YAAAvB,EAAAuB,EAAApB,KAAA,WAEAqB,MAAAtB,EAAAqB,EAAApB,MACAsB,SAAA,EACAC,IAAAxB,EAAAqB,EAAApB,MACAwB,IAAAzB,EAAAqB,EAAApB,QAIAqB,MAAAtB,EAAAqB,EAAApB,MACAsB,SAAA,EACAC,IAAAH,EAAAK,SACAD,IAAAJ,EAAAM,YAIAC,GAAA,KAAA1B,SAAAJ,EAAA+B,UAAA/B,EAAAgC,QAAAC,OAAAb,EACA,OAAA,KAAAc,SAAAC,UAAAC,KAAAC,MAAAvC,EAAAiB,GAAAe,IAOA,QAAAQ,KACA,GAAAC,GAAA,GAAA3C,EAoBA,OAnBAI,GAAAwC,mBACAD,EAAAvD,EACA,UACA,0BACA,gBACA,sBACA,IACA,SACA,0BACA,eACA,sBACA,IACA,SACA,0BACA,eACA,qBACA,KAGAuD,EAAAE,eACA,UACA,YAGA,QAAAC,KAWA,QAAAC,KACA,GAAAJ,GAAA,GAAA3C,EA2LA,QA1LA,IAAA,IAAA,KAAAgD,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA3B,cACA6B,EAAA,UAAAF,EACAG,EAAA,SAAAF,CACA9C,GAAAiD,eAAAF,KACA/C,EAAAkD,aAAA,UAAAL,GACAN,EAAAvD,EACA,UAAA6D,EAAA,gBAAAG,EAAA,MACA,UAAAH,EAAA,gBAAAG,EAAA,OAGAT,EAAAvD,EACA,UAAA6D,EAAA,gBAAAxC,EAAA0C,GAAA,MACA,UAAAF,EAAA,gBAAAxC,EAAA0C,GAAA,UAKAI,GACAZ,EAAAvD,EACA,gBAAAkB,EAAA,gBAAA,MAAAA,EAAA,iBAAA,OAGA,eAAAF,EAAAoD,YACAb,EAAAvD,EACA,mBACA,yCACA,uBAGAqE,EACAd,EAAAvD,EACA,6BAGAuD,EAAAvD,EACA,gBAGAsE,EACAf,EAAA7D,EACA,sBACA,YACA,WACA,WAGA6D,EAAA7D,EACA,YAEAsB,EAAAuD,eAAAX,QAAA,SAAAY,GACAxD,EAAAiD,eAAAO,IAGAjB,EAAA7D,GACA+E,YACA,SACA,uBACA,uBACA,uBACA,sBACA,KAEAC,YACA,SACA,uBACA,uBACA,uBACA,sBACA,KAEAC,YACA,SACA,uBACA,uBACA,uBACA,sBACA,MAEAH,MAEA,eAAAxD,EAAAoD,YACAb,EAAA7D,EACA,8CACA,uBACA,uBACA,mCACA,sBACA,MAIA2E,IACAd,EAAA7D,EACA,KAEA6D,EAAAvD,EACA,oCAGA,SAAAgB,EAAAoD,WACAQ,GAAAT,EACAZ,EAAA7D,EACA,kCAEAsC,EAAA6C,IAAA,GACAtB,EAAA7D,EACA,2BAGA,eAAAsB,EAAAoD,aACAQ,GAAAT,EACAZ,EAAA7D,EACA,SACA,kDACA,kDACA,sEACA,iDACA,KAGA6D,EAAA7D,EACA,SACA,2CACA,2CACA,+DACA,0CACA,MAIA6D,EAAA7D,EACA,KAEA,SAAAsB,EAAAgC,SACA,eAAAhC,EAAAoD,YACAb,EAAAvD,EACA,gDAGAgC,EAAA6C,IAAA,EACAtB,EAAAvD,EACA,6BAGAuD,EAAAvD,EACA,wCAGAgB,EAAAuD,eAAAX,QAAA,SAAAY,GACAxD,EAAAiD,eAAAO,IAGAjB,EAAA7D,GACA+E,YACA,SACA,kBACA,kBACA,iBACA,KAEAC,YACA,SACA,kBACA,kBACA,iBACA,KAEAC,YACA,SACA,kBACA,kBACA,iBACA,MAEAH,MAEAjB,EAAA7D,EACA,OAGA,UAAAsB,EAAAgC,QAAA,QAAAhC,EAAAgC,SACAO,EAAAvD,EACA,4BAGAuD,EAtMA,GAAAe,GACA,GAAAtC,EAAA6C,MACA7D,EAAAiD,eAAA,cACAjD,EAAAiD,eAAA,aACAjD,EAAAiD,eAAA,YAEAW,EAAA5D,EAAA8D,aAAA,UACAX,GAAAS,GAAA5D,EAAA,iBAAAA,EAAA,iBACAqD,EAAA,SAAArD,EAAAgC,QAAA,eAAAhC,EAAAoD,WAiMAb,EAAA,GAAA3C,EAqCA,OApCAgE,IACArB,EAAAvD,EAAA,0BAEA,IAAA,IAAA,KAAA4D,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA3B,cACA6B,EAAA,UAAAF,EACAG,EAAA,SAAAF,CACA9C,GAAAkD,aAAAH,IACAR,EAAAvD,EAAA,iBAAAgE,EAAA,OAGAM,EACAf,EAAAvD,EAAA,4BAEAuD,EAAAvD,EAAA,4BAEA,SAAAgB,EAAAgC,SACA,eAAAhC,EAAAoD,YACAb,EAAAvD,EAAA,kCAEAgC,EAAA6C,IAAA,GACAtB,EAAAvD,EAAA,0BAEAuD,EAAAvD,EAAA,sCAEA,UAAAgB,EAAAgC,QAAA,QAAAhC,EAAAgC,SACAO,EAAAvD,EACA,wBACA,mCAGAuD,EAAAvD,EACA,gBACA2D,IAAAoB,SACA,KAEAxB,EAEA,QAAAyB,KACA,GAAAzB,GAAA,GAAA3C,EAuEA,OAtEA2C,GAAAvD,EACA,4BAEA,UAAAgB,EAAAgC,OACAhC,EAAA8D,aAAA,uBACAvB,EAAAvD,EACA,sBACA,gBACA,uBACA,KAGAuD,EAAAvD,EACA,gBACA,sBAAAyB,EAAA,uBAAA,KACA,KAGA,UAAAT,EAAAgC,QAAA,QAAAhC,EAAAgC,OACAO,EAAAvD,EACA,kCACA,gBACA,mCACA,KAEA,SAAAgB,EAAAgC,SACAO,EAAAvD,EACAiF,EAAAC,2BAEA,eAAAlE,EAAAoD,YACAb,EAAAvD,EACA,kCAGAuD,EAAAvD,EACA,mCACA,gBACA,wCACA,wCACA,yCACA,2BAEA,SAAAgB,EAAAoD,WACAb,EAAAvD,EACA,iCAEA,eAAAgB,EAAAoD,YACAb,EAAAvD,EACA,wCAGAuD,EAAAvD,EACA,0CAEAgC,EAAAmD,UACA5B,EAAAvD,EACA,+BAGAuD,EAAAvD,EACA,qBAAAiF,EAAAG,eAAA,KACA,0BACA,sBACA,iBACA,oCACA,oDACA,UACA,MAGA7B,EAEA,QAAA8B,KAEA,QAAAC,GAAAC,GACAA,EAAAC,OAAA,SAAAjD,GACA,MAAAX,GAAAW,EAAApB,QACAyC,QAAA,SAAArB,GACAgB,EAAAvD,EACA,OAAAiB,EAAA,iBAAAD,EAAAuB,EAAApB,KAAA,WAAA,IAAAF,EAAA,eAAA,YAAAA,EAAA,WAAAsB,EAAApB,MAAA,oBANA,GAAAoC,GAAA,GAAA3C,EAYA,OAFA0E,GAAAtE,EAAAyE,cACAH,EAAAtE,EAAA0E,kBACAnC,EAAAE,eACA,OACA,SAGA,QAAAkC,KAEA,QAAAL,GAAAC,GACAA,EAAAC,OAAA,SAAAjD,GACA,MAAA,UAAAvB,EAAAuB,EAAApB,KAAA,YACAyC,QAAA,SAAArB,GACAgB,EAAAvD,EACA,QACA,gBAAAuC,EAAApB,KAAA,KAAAF,EAAA,WAAAsB,EAAApB,MAAA,aAEA,sBAAAoB,EAAApB,MACAoC,EAAAvD,EACA,sBAAAuC,EAAAqD,cAAA,YAEA,GAAArD,EAAAsD,UACAtC,EAAA7D,EACA,2BAAA6C,EAAApB,KAAA,UAAAoB,EAAAK,SAAA,UAAAL,EAAAM,SAAA,YAAA3B,EAAAqB,EAAApB,MAAA,QAGAoC,EAAA7D,EACA,2BAAA6C,EAAApB,KAAA,UAAAoB,EAAAK,SAAA,UAAAL,EAAAM,SAAA,WAAAN,EAAAsD,UAAA,YAAAxE,EAAAkB,EAAApB,MAAA,QAGAoC,EAAA7D,EACA,sBAAA6C,EAAAuD,cAAA,aAGAvC,EAAAvD,EACA,sBAAAuC,EAAAqD,YAAA5D,EAAA+D,IAAArD,KAAA,YAEAa,EAAA7D,EACA,2BAAA6C,EAAApB,KAAA,UAAAa,EAAA+D,IAAArD,IAAA,UAAAV,EAAA+D,IAAApD,IAAA,YAAAX,EAAA+D,IAAAvD,MAAA,QAEAe,EAAA7D,EACA,sBAAA6C,EAAAuD,YAAA9D,EAAA+D,IAAApD,KAAA,YAGAY,EAAA7D,EACA,YArCA,GAAA6D,GAAA,GAAA3C,EA2CA,OAFA0E,GAAAtE,EAAAyE,cACAH,EAAAtE,EAAA0E,kBACAnC,EAEA,QAAAyC,KACA,GAAAzC,GAAA,GAAA3C,EA4BA,OA3BA2C,GAAAvD,EACA,sDACA,iDACA,mCAEAgB,EAAAiF,cACA1C,EAAAvD,EACA,+GAGAuD,EAAAvD,EACA,0DACA,qDACA,qCAEAgB,EAAAiF,cACA1C,EAAAvD,EACA,mHAGAuD,EAAAvD,EACA,kCACA,yCACA,2CACA,2BACA,mBAEAuD,EAAA2C,KACA,4DACA,KAGA,QAAAC,KACA,GAAA5C,GAAA,GAAA3C,EAiCA,OAhCA2C,GAAAvD,EACA,kDACA,+EAEA,MAAAgB,EAAA,UACAuC,EAAAvD,EACA,8CAGA,SAAAgB,EAAAoF,YAAApF,EAAA8D,aAAA,2BAEA,GAAA9D,EAAA,6BACA,GAAAA,EAAA,6BACA,GAAAA,EAAA,6BACA,GAAAA,EAAA,6BAEAuC,EAAAvD,EACA,iBAAAuB,EAAA,0BAAA,MAGAS,EAAA6C,IAAA,GACAtB,EAAAvD,EACA,6BAGAuD,EAAAvD,EACA,2BACA,mDACA,oDACA,KACA,2BAEAuD,EAEA,QAAA8C,KAGA,QAAAC,GAAAC,GACAhD,EAAAvD,EACAuG,EAAAC,MAAAnD,MAAAkD,EAAAE,IAIA,QAAAC,KACAnD,EAAAvD,EACA,4BACA,gDACA,uDACA,IACA,mBAGA,QAAA2G,GAAAC,GACA,GAAA7C,GAAA,UAAA6C,CACA,IAAA,UAAA5F,EAAA+C,EAAA,UAAA,CACA,GAAAwC,GAAA,GAAA1F,GAAAgG,eAAA9C,EACAwC,GAAAO,QACAC,IAAA,6DACAC,KAAA,UAAAJ,EAAA,0BACAI,KAAA,mBACAV,EAAAC,IAGA,QAAAU,GAAAC,EAAAC,EAAAC,IACA,IAAA,IAAA,IAAA,KAAAxD,QAAA,SAAAyD,GACA,GAAAlG,GAAA+F,EAAA,IAAAG,CACAzF,GAAAT,IACAoC,EAAAvD,EACA,OAAAoH,EAAAC,EAAAnF,cAAA,IAAAb,EAAAF,GAAA,OAKA,QAAAmG,GAAAJ,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,GACAnE,EAAAvD,EACA,YAAAmH,EAAA,QAEAnG,EAAA2G,sBAAAT,GACA3D,EAAAvD,EACA,IAAAuH,EAAA,qCACA,gDAAAL,EAAA,gBACA,MAAAM,GAIAjE,EAAAvD,EACA,IAAAyH,GAAA,IAAA,IAAA,IAAA,KAAAnF,IAAA,SAAA+E,GACA,GAAAlG,GAAA+F,EAAA,IAAAG,CACA,OAAA,UAAArG,EAAAG,EAAA,UACA,uCAAAA,EAAA,YACAS,EAAAT,GACAiG,EAAAC,EAAAnF,cAEAb,EAAAF,KAEAyG,OAAAF,GAGAnE,EAAAvD,EACA,IACAmH,EAAA,OAGA,QAAAU,GAAAX,EAAAC,EAAAC,GACA,GACAb,GADAuB,EAAA9G,EAAA+G,gBAAAb,EAGAX,GADA,OAAAuB,EACA,GAAAjH,GAAAmH,uBAAA,SAAAd,EAAA,OAEA,GAAArG,GAAAgG,eAAAiB,EAAA3G,MAEAoF,EAAAO,QACAC,IAAA,+DACAC,KAAAG,EAAA,OACAb,EAAAC,GAEA,QAAA0B,GAAAf,EAAAC,EAAAC,IACA,IAAA,IAAA,IAAA,KAAAxD,QAAA,SAAAyD,GACA,GAAAlG,GAAA+F,EAAA,IAAAG,EACArD,EAAAoD,EAAAC,EAAAnF,aACA,IAAA,UAAAlB,EAAAG,EAAA,UAAA,CACA,GAAAoF,GAAA,GAAA1F,GAAAgG,eAAA1F,EACAoF,GAAAO,QACAC,IAAA,+DACAC,KAAAG,EAAA,OACAb,EAAAC,OACA3E,GAAAT,IACA+G,EAAApB,QACAqB,MACAnH,EAAAG,EAAA,UACA6C,EAAA,0CACAA,EAAA,gDAEA+C,IAAA,gBAAA5F,EAAA,kBAAA6C,EAAA,MACAgD,KAAAG,EAAA,SAIA,QAAAiB,GAAAlB,EAAAC,EAAAC,GACA,GAAAiB,IAAA,IAAA,IAAA,IAAA,KAAAC,MAAA,SAAAjB,GACA,GAAAkB,GAAAvH,EAAAkG,EAAA,IAAAG,EAAA,SACA,OAAA,YAAAkB,GAAA,UAAAA,GAEAF,GACAR,EAAAX,EAAAC,EAAAC,GAEAa,EAAAf,EAAAC,EAAAC,GAGA,QAAAoB,GACAtB,EAAAC,EAAAC,EACAG,EAAAC,EACAC,EAAAC,GAEAT,EAAAC,EAAAC,EAAAC,GACAE,EAAAJ,EAAAC,EAAAC,EAAAG,EAAAC,EAAAC,EAAAC,GACAU,EAAAlB,EAAAC,EAAAC,GAzHA,GAAAX,KAAAzF,EAAAyH,aAAAzH,EAAA0H,aACAnF,EAAA,GAAA3C,GAMAsH,EAAA,GAAArH,GAAA8H,uBA6OA,OAzHA3H,GAAA8D,aAAA,YACAvB,EAAAvD,EACA,0DAEA0G,IACAC,EAAA,SACAA,EAAA,WAEA3F,EAAA8D,aAAA,2BACA0D,EACA,yBAAA,mBAAA,aACA,0BAAA,KACA,iBAAA,MAGAxH,EAAA8D,aAAA,yBACAvB,EAAAvD,EACA,wDAEAwI,EACA,sBAAA,cAAA,QACA,0BAAA,KACA,2BAAA,QAGA,SAAAxH,EAAAgC,QACAO,EAAAvD,EACAiF,EAAA2D,oBAAAnC,EAAAyB,IAGAlH,EAAA6H,aAAA,SAAAjF,QAAA,SAAArB,GACA,QAAAyB,GAAAxC,GACA,GAAAtB,GAAAqC,EAAApB,KAAA2H,YAAA,KACAjJ,EAAA0C,EAAApB,KAAA4H,UAAA7I,EAAA,GACA8I,EAAAnJ,EAAAoC,OAAA,GAAAC,cAAArC,EAAAsC,MAAA,EACA,OAAA8G,UAAAzH,EACAA,EAAA,QAAAwH,EAEA,QAAAA,EAGA,GAAA,UAAAhI,EAAAuB,EAAApB,KAAA,UAAA,CACA,GAAAoF,GAAA,GAAA1F,GAAAgG,eAAAtE,EAAApB,KACAoF,GAAAO,QACAC,IAAA,6DACAC,KAAA,qCACAV,EAAAC,OACA3E,GAAAW,EAAApB,OACA+G,EAAApB,QACAqB,MACAnH,EAAAuB,EAAApB,KAAA,UACA,OAAA6C,EAAA,OAAA,eAAAA,EAAA,OAAA,KAAAA,EAAA,OAAA,IAAAA,EAAA,OAAA,0CACA,OAAAA,EAAA,OAAA,eAAAA,EAAA,OAAA,KAAAA,EAAA,OAAA,IAAAA,EAAA,OAAA,gDAEAkF,KAAAlF,EAAA,OAAA,KAAAA,KACA+C,IAAA,gBAAAxE,EAAApB,KAAA,kBAAA6C,EAAA,OAAA,MACAgD,KAAA,cAAAhD,EAAA,OAAA,SAGA,IAAA,IAAA,KAAAJ,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA3B,cACA6B,EAAA,UAAAF,EACAG,EAAA,SAAAF,EACAqF,EAAA,eAAArF,CACA,IAAA,UAAA9C,EAAA+C,EAAA,UAAA,CACA,GAAAwC,GAAA,GAAA1F,GAAAgG,eAAA9C,GACAqF,EAAA7C,EAAAO,QACAC,IAAA,8DACA,IAAA/F,EAAA+C,EAAA,WAAA,YAAA/C,EAAA+C,EAAA,kBACAR,EAAAvD,EACA,OAAAgE,EAAA,sCAAAA,EAAA,MACA,YAAAmF,EAAA,OACA,iBAAAnF,EAAA,2CAAAD,EAAA,cACA,KACAoF,EAAA,OAEAC,EAAApC,KAAAmC,EAAA,QAEA7C,EAAAC,OACA3E,GAAAmC,KACA,GAAA/C,EAAA+C,EAAA,WAAA,YAAA/C,EAAA+C,EAAA,iBACAR,EAAAvD,EACA,OAAAgE,EAAA,sCAAAA,EAAA,MACA,gBAAAA,EAAA,OAAA3C,EAAA0C,GAAA,MAEAmE,EAAApB,QACAqB,MACAnH,EAAA+C,EAAA,UACA,OAAAC,EAAA,qDACA,OAAAA,EAAA,2DAEA+C,IAAA,gBAAAhD,EAAA,kBAAAC,EAAA,MACAgD,KAAA,gBAAAhD,EAAA,OAAAA,EAAA,OAEAkE,EAAApB,QACAuC,MAAA,OAAArF,EAAA,IAAA3C,EAAA0C,GAAA,KACAoE,MACAnH,EAAA+C,EAAA,UACAC,EAAA,qDACAA,EAAA,2DAEA+C,IAAA,gBAAAhD,EAAA,kBAAAC,EAAA,MAGA,IAAA,UAAAhD,EAAA+C,EAAA,gBAAA,CACA,GAAAwC,GAAA,GAAA1F,GAAAgG,eAAA9C,EAAA,SACAwC,GAAAO,QACAC,IAAA,+DACAT,EAAAC,OACA3E,GAAAmC,EAAA,WACAmE,EAAApB,QACAuC,MAAA,OAAArF,EAAA,SAAA3C,EAAA0C,EAAA,UAAA,KACAoE,MACAnH,EAAA+C,EAAA,gBACAC,EAAA,0DACAA,EAAA,gEAEA+C,IAAA,gBAAAhD,EAAA,wBAAAC,EAAA,aAGAsC,EAAA4B,GACA3E,EAEA,QAAA+F,KAGA,QAAAC,KAEA,QAAAC,KACA,GAAAjG,GAAA,GAAA3C,EAiDA,QAhDA,IAAA,IAAA,KAAAgD,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA3B,cACA6B,EAAA,UAAAF,EACAG,EAAA,SAAAF,GACA,GAAA9C,EAAA+C,EAAA,WAAA,YAAA/C,EAAA+C,EAAA,mBACA,YAAA/C,EAAA+C,EAAA,iBAAA,YAAA/C,EAAA+C,EAAA,WAEA0F,GAAA,EACAlG,EAAAvD,EACA,OAAAgE,EAAA,KAAAhD,EAAA+C,GACA1C,EAAA0C,GAAA,IACA,IACA1C,EAAA0C,EAAA,UAAA,6BAIA2F,GAAA,EACA,UAAA1I,EAAA+C,EAAA,WACAR,EAAAvD,EACA,OAAAgE,EAAA,kCAAAD,EAAA,MACA,OAAAC,EAAA,eAAAA,EAAA,iBAGA,UAAAhD,EAAA+C,EAAA,iBACAR,EAAAvD,EACA,OAAAgE,EAAA,uCAAAD,EAAA,YACA,OAAAC,EAAA,oBAAAA,EAAA,sBAGAT,EAAAvD,EACAgE,EAAA,MAAA,YAAAhD,EAAA+C,EAAA,gBACA1C,EAAA0C,EAAA,UACAC,EAAA,SACA,0BAEA,UAAAhD,EAAA+C,EAAA,YACA4F,GAAA,EACApG,EAAAvD,EACAgE,EAAA,SAAAA,EAAA,SACAA,EAAA,eAAAA,EAAA,OAIAT,EAAAvD,EACA,gBAAAgE,EAAA,OAAAA,EAAA,SAIAT,EAnDA,GAAAoG,IAAA,EAqDAC,EAAAJ,IACAjG,EAAA,GAAA3C,EAmBA,OAlBA+I,IACApG,EAAAvD,EACA,6BACA,iBACA,uCACA,kCACA,KAGA,SAAAgB,EAAAoF,YACA7C,EAAAvD,EACA,kCAGAuD,EAAAvD,EACA4J,EACA5H,EAAA6H,aAEAtG,EA5EA,GAAAkG,IAAA,EACAC,GAAA,EA6EAnG,EAAA,GAAA3C,GACAkJ,EAAAP,GAuEA,OAtEAvI,GAAAyH,gBACA,IAAA,IAAA,KAAA7E,QAAA,SAAAC,GACA,GAAAC,GAAAD,EAAA3B,cACA6B,EAAA,UAAAF,EACAG,EAAA,SAAAF,CAEA9C,GAAAkD,aAAAH,KAEA,UAAA/C,EAAA+C,EAAA,YAAAnC,EAAAmC,IACA,GAAA/C,EAAA+C,EAAA,WAAA,YAAA/C,EAAA+C,EAAA,kBAGAR,EAAAvD,EACA,OAAAgE,EAAA,sCAAAA,EAAA,OAGA,YAAAhD,EAAA+C,EAAA,iBAAA,YAAA/C,EAAA+C,EAAA,WACAR,EAAAvD,EACA,OAAAgE,EAAA,IAAA3C,EAAA0C,GAAA,OAIA0F,GAAAC,EACAnG,EAAAvD,EACA,mCACA,2BAEAyJ,EACAlG,EAAAvD,EACA,oCAEA0J,GACAnG,EAAAvD,EACA,oCAKAgB,EAAAyH,cACAlF,EAAAvD,EACA,+BACA8J,EAAA/E,UAEA2E,GACAnG,EAAAvD,EACA,mBAGAuD,EAAAvD,EACA,uCACA,IACA,wCAEAgB,EAAA+I,YACAxG,EAAAvD,EACA,oBACA,2BACA8J,EAAA/E,SACA,iBACA,IACA,6BACA,yBACA,gDACA,KACA,IACA,oBAGAxB,EAAAvD,EAAA8J,GAEAvG,EA92BA,GAAAvB,GAAAF,GACA,IAAA,SAAAd,EAAAgC,OACA,GAAAiC,GAAA,GAAAlE,GAAA,iBAAA,yBAAA,MAAAC,EA+2BA,IAAAgJ,GAAA,GAAApJ,EACAoJ,GAAAC,WACAjE,IACAG,IACAnE,EAAAkI,UAAAlJ,EAAAmJ,aACA9D,IACAiD,KACApD,KACA,WACA,YAEA,IAAA3C,GAAA,GAAA3C,EAyBA,OAxBA2C,GAAAvD,EACA,kBACA,mBACA,SACA,2BACA,gCACAsD,IACA,wDACAI,IAAAqB,SACA,YACA,4DACAC,IAAAD,SACA,YACA,UACA,SACA,QACA,iCAAA7D,EAAA,gBAAA,aAAAA,EAAA,iBAAA,cACA,SACAmE,IACAM,IACAqE,EACA,UACA,WAEAzG,EAAAqE,KACA,OAAA5G,EAAA+D,OAAA,IAAAqF,MAAAhJ,SAAAJ,EAAA+D,QAAA,GAAA6C,KAAA,SCKGyC,aAAa,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,eAAe,KAAKC,GAAG,SAASxK,EAAQU,EAAOJ,GCl9BpGI,EAAAJ,QAAA,SAAAmK,GACA,OACAC,eAAA,uIACAC,mBAAA,sEAEAC,kBAAA,kBACAC,qBAAA,aACAC,0BAAA,qBACAC,2BAAA,cACAC,iBAAA,SACAC,wBAAA,eACAC,wBAAA,uBACAC,sBAAA,qBACAC,uBAAA,oBACAC,gBAAA,gBACAC,uBAAA,SACAC,yBAAA,WACAC,uBAAA,oBACAC,qBAAA,OACAC,oBAAA,uBACAC,wBAAA,iCACAC,mBAAA,gBACAC,qBAAA,WACAC,qBAAA,mBACAC,sBAAA,oBACAC,sBAAA,oBACAC,qBAAA,aACAC,2BAAA,aACAC,iCAAA,cAEAC,gBAAA,gBACAC,uBAAA,eACAC,wBAAA,gBACAC,mCAAA,iCACAC,mCAAA,mCACAC,mCAAA,kCACAC,mCAAA,mCACAC,gCAAA,+BACAC,gCAAA,iCACAC,gCAAA,gCACAC,gCAAA,iCACAC,mCAAA,8BACAC,mCAAA,8BACAC,mCAAA,8BACAC,6BAAA,qBACAC,kBAAA,gBACAC,2BAAA,gBACAC,yBAAA,wBACAC,6BAAA,2CACAC,6BAAA,yCACAC,2BAAA,WAEAC,oBAAA,aACAC,mBAAA,kCACAC,yBAAA,kCACAC,mBAAA,kCACAC,yBAAA,kCACAC,mBAAA,kCACAC,yBAAA,kCAEAC,gBAAA,gBACAC,uBAAA,gCACAC,sBAAA,4BACAC,sBAAA,mBAEAC,qBAAA,0BACAC,iBAAA,SACAC,qBAAA,MACAC,mBAAA,WACAC,mBAAA,WACAC,mBAAA,WAEAC,2BAAA,sDACAC,2BAAA,oDACAC,cAAA,aAcAnE,SDs9BMoE,GAAG,SAAS7O,EAAQU,EAAOJ,GEziCjC,GAAAK,GAAA,WACAmO,KAAAC,QACAD,KAAAE,iBACAF,KAAAG,YAAAC,YAKAvO,GAAAuC,UAAA+L,YAAA,SAAArP,GAEA,IAAA,GADAD,MACAM,EAAA,EAAAA,EAAAL,EAAAY,OAAAP,IACA,gBAAAL,GAAAK,GACAN,EAAAwP,KAAAvP,EAAAK,IACAkK,MAAAiF,QAAAxP,EAAAK,IACAkK,MAAAjH,UAAAiM,KAAA/L,MAAAzD,EAAAC,EAAAK,IACAL,EAAAK,YAAAU,IACAwJ,MAAAjH,UAAAiM,KAAA/L,MAAAzD,EAAAC,EAAAK,GAAA8O,KAGA,OAAApP,IAEAgB,EAAAuC,UAAA8L,iBAAA,SAAApP,GACAuK,MAAAjH,UAAAiM,KAAA/L,MAAA0L,KAAAC,KAAAnP,IAIAe,EAAAuC,UAAAnD,EAAA,WAIA,MAHA+O,MAAAE,iBACAF,KAAAG,YAAAC,YAEAJ,MAEAnO,EAAAuC,UAAAzD,EAAA,WACA,GAAA4P,GAAAP,KAAAC,KAAAO,MACA1P,EAAAkP,KAAAG,YAAAC,UAGA,OAFAtP,GAAA,GAAAyP,EAAAzP,EAAA,GACAkP,KAAAE,iBAAApP,GACAkP,MAEAnO,EAAAuC,UAAA4B,OAAA,SAAAyK,GAOA,MANAvG,UAAAuG,IACAA,EAAA,GAEAT,KAAAC,KAAAD,KAAAC,KAAA1M,IAAA,SAAAmN,GACA,MAAArF,OAAAoF,EAAA,GAAA5H,KAAA,KAAA6H,IAEAV,MAEAnO,EAAAuC,UAAAuM,QAAA,WACA,MAAAX,MAAAC,KAAAvO,QAAA,GAEAG,EAAAuC,UAAA8G,WAAA,WAEA,IAAA,GADA0F,IAAA,EACAzP,EAAA,EAAAA,EAAAiP,UAAA1O,OAAAP,IAAA,CACA,GAAAN,GAAAmP,KAAAG,aAAAC,UAAAjP,IACAN,GAAAa,OAAA,IACAkP,EACAA,GAAA,EAEAZ,KAAAC,KAAAI,KAAA,IAEAL,KAAAE,iBAAArP,IAGA,MAAAmP,OAEAnO,EAAAuC,UAAA+C,KAAA,SAAA0J,EAAAC,GAIA,MAHAd,MAAAhK,SACAgK,KAAAC,KAAAc,QAAAF,GACAb,KAAAC,KAAAI,KAAAS,GACAd,MAEAnO,EAAAuC,UAAAM,eAAA,SAAAmM,EAAAC,GAIA,MAHAd,MAAAW,WACAX,KAAA7I,KAAA0J,EAAAC,GAEAd,MAUAnO,EAAAuC,UAAAyE,KAAA,SAAA7C,GACA,MAAAgK,MAAAC,KAAA1M,IAAA,SAAAmN,GACA,MAAAA,GAAAM,QAAA,SAAA,SAAAC,GACA,MAAA5F,OAAA4F,EAAAvP,OAAA,GAAAmH,KAAA7C,OAEA6C,KAAA,OAGAjH,EAAAJ,QAAAK,OFijCMqP,GAAG,SAAShQ,EAAQU,EAAOJ,GGppCjC,GAAAK,GAAAX,EAAA,cAEAiQ,EAAA,WACAnB,KAAAoB,WAEAD,GAAA/M,UAAA2D,MAAA,WASA,QAAAsJ,GAAAC,GACA,MAAA,YACA,IAAA,GAAAnQ,GAAA,EAAAA,EAAAiP,UAAA1O,OAAAP,IACAmQ,EAAAjB,KAAAD,UAAAjP,GAEA,OAAAoQ,IAbA,GAAAlH,IACAC,SACAkH,OACArH,KAAA,KACAnC,OACAC,QAEA+H,MAAAoB,QAAAf,KAAAhG,EASA,IAAAkH,IACAjH,MAAA+G,EAAAhH,EAAAC,OACAkH,IAAAH,EAAAhH,EAAAmH,KACArH,KAAA,SAAAA,GAEA,MADAE,GAAAF,KAAAA,EACAoH,GAEAvJ,IAAAqJ,EAAAhH,EAAArC,KACAC,KAAAoJ,EAAAhH,EAAApC,MAEA,OAAAsJ,IAEAJ,EAAA/M,UAAAqN,oBAAA,WACA,UAEAN,EAAA/M,UAAAsN,aAAA,WACA,MAAA,IAEAP,EAAA/M,UAAAuN,SAAA,SAAAjB,GACA,MAAAA,IAEAS,EAAA/M,UAAAqD,MAAA,SAAAmK,EAAAC,GAQA,QAAAC,GAAApB,EAAAvG,GACA,GAAA4H,EAEAA,GADArB,IAAAsB,GACAA,EAAAtB,GAEAsB,EAAAtB,IACAuB,SACAC,SACAC,KAAAC,GAGA,OAAAL,EAAAG,QACA,OAAA/H,EACA4H,EAAAG,MAAA,KAEAH,EAAAG,MAAA7B,KAAAlG,IAGA,OAAAkI,GACAN,EAAAE,MAAA5B,KAAAgC,GAEAA,EAAA3B,EAEA,QAAA4B,KACA,OAAAD,GACAE,EAAAlC,KAAAgC,GAEAA,EAAA,KAEA,QAAAG,KAGA,QAAAC,GAAA/B,EAAAqB,GACA,GAAAW,GAAA,IACA,QAAAX,EAAAG,QACAQ,EAAAX,EAAAG,MAAArJ,KAAA,SAEA6J,GAAAC,IACA,OAAAA,GACAnO,EAAA6L,KAAA,KAEAsC,EAAAD,EACA,OAAAC,GACAnO,EAAA6L,KAAA,OAAAsC,EAAA,QAGA,OAAAA,EACAnO,EAAA6L,KAAA,IAAAK,GAEAlM,EAAA6L,KAAAK,GAGA,QAAAkC,GAAAlC,EAAAqB,GACAA,EAAAI,KAAAU,EACAC,EAAAf,EAAAE,OACAF,EAAAI,KAAAY,EACAN,EAAA/B,EAAAqB,GAEA,QAAAe,GAAAb,GACAA,EAAApN,QAAA,SAAA6L,GACAsB,EAAAtB,GAAAyB,MAAAC,GACAQ,EAAAlC,EAAAsB,EAAAtB,MA/BA,GAAAlM,MACAmO,EAAA,IAsCA,OAJAG,GAAAP,GACA,OAAAI,GACAnO,EAAA6L,KAAA,KAEA,GAAAxO,GAAA2C,GA5EA,GAAAwO,GAAA,GAAAnR,GACAmQ,KACAO,KACAF,EAAA,KACAD,EAAA,EACAS,EAAA,EACAE,EAAA,CAwEA/C,MAAAoB,QAAAvM,QAAA,SAAAwF,GACA2I,EAAA/R,EAAAoJ,EAAAC,OACAD,EAAAmH,IAAA3M,QAAA,SAAA6L,GACAoB,EAAApB,EAAA,QAEAmB,GACAxH,EAAArC,IAAAnD,QAAA,SAAA6L,GACAoB,EAAApB,EAAArG,EAAAF,QAGAE,EAAApC,KAAApD,QAAA,SAAA6L,GACAoB,EAAApB,EAAArG,EAAAF,QAEAyH,GACAE,EAAA,mBAAAzH,EAAAF,MAEAmI,KAEA,IAAAW,GAAAjD,KAAAkD,kBACAnI,EAAAyH,GAOA,IANAzH,EAAA4F,YACA5F,EAAA,GAAAlJ,GACAmO,KAAAyB,sBACA1G,IAGA,GAAAA,EAAAkF,KAAAvO,OAAA,CACA,GAAAuP,GAAA,eAAAkC,KAAApI,EAAAkF,KAAA,GACA,IAAAgB,EACA,MAAA+B,GAAA/R,EACA+O,KAAA2B,SACA,GAAA9P,GACAoR,EAAA,GAAAhC,EAAA,GAAAgC,EAAA,MAOA,MAAAlI,GAAAkF,KAAAvO,OACAsR,EAAA/R,EACA+O,KAAA2B,SACA5G,EAAA5D,KACA8L,EAAA,GAAA,YAAAjD,KAAA0B,eAAA,KACA,IAAAuB,EAAA,MAKAD,EAIA,IAAAlL,GAAA,SAAA6D,GACAwF,EAAA1P,KAAAuO,MACAA,KAAArE,GAAAA,EAEA7D,GAAA1D,UAAAgP,OAAAC,OAAAlC,EAAA/M,WACA0D,EAAA1D,UAAAkP,YAAAxL,EACAA,EAAA1D,UAAA8O,gBAAA,WACA,OAAA,4BAAAlD,KAAArE,GAAA,gCAAA,MAGA,IAAA1C,GAAA,SAAAsK,GACApC,EAAA1P,KAAAuO,MACAA,KAAAuD,MAAAA,EAEAtK,GAAA7E,UAAAgP,OAAAC,OAAAlC,EAAA/M,WACA6E,EAAA7E,UAAAkP,YAAArK,EACAA,EAAA7E,UAAAuN,SAAA,SAAAnN,GACA,MAAAA,GAAA2C,KACA,8CAAA6I,KAAAuD,MAAA,mBACA,QAGAtK,EAAA7E,UAAA8O,gBAAA,WACA,OAAA,gCAAA,MAGA,IAAAtJ,GAAA,WACAuH,EAAA1P,KAAAuO,MAEApG,GAAAxF,UAAAgP,OAAAC,OAAAlC,EAAA/M,WACAwF,EAAAxF,UAAAkP,YAAA1J,EACAA,EAAAxF,UAAA2D,MAAA,WACA,GAAAwJ,GAAAJ,EAAA/M,UAAA2D,MAAAtG,KAAAuO,KASA,OARAuB,GAAAnI,MAAA,SAAAI,EAAAgK,EAAAC,GACA,MAAA,cAAAjK,EACA+H,EAAAC,IAAAgC,GACA,cAAAhK,EACA+H,EAAAC,IAAAiC,GAEAlC,GAEAA,GAEA3H,EAAAxF,UAAA8O,gBAAA,WACA,OAAA,uCAAA,OAEAtJ,EAAAxF,UAAAsN,aAAA,WACA,MAAA,MAEA9H,EAAAxF,UAAAqN,oBAAA,WACA,OACA,2CAIAjQ,EAAAsG,eAAAA,EACAtG,EAAAyH,uBAAAA,EACAzH,EAAAoI,wBAAAA,IHupCG0B,aAAa,IAAIoI,GAAG,SAASxS,EAAQU,EAAOJ,GI93C/C,QAAAmS,KACA,MAAA,oBAAAC,IAOA,QAAAC,GAAAC,GAIA,MAAA,gCAAAC,mBAAAD,GAbA,GAAAF,GAAA,EAKA1R,EAAAhB,EAAA,aACA8S,EAAA9S,EAAA,gBACA+S,EAAA/S,EAAA,YASAgT,GAAA,WACAA,EAAA,kBAAAC,KAAA,WAQA,QAAAC,GAAA5Q,EAAA6Q,GACAC,EAAAC,KAAA,kBAAA/Q,EAAAgR,0BAAA,MAAAC,OACAC,IAAA,kBAAAlR,EAAAmR,sBAAAN,GAAA,MAAAO,OAEA,QAAAC,KACAC,aAAAC,GACAA,EAAAC,WAAA,WACAC,EAAAC,KAAAjB,EAAAhS,EAAAkT,MAAAjT,IACAkT,OAAAC,MAAAA,KAAAC,eAAAL,EAAA,KACAM,GAEA,QAAAC,GAAAhS,GACA,GAAAmI,GAAAgI,IACA8B,EAAAvB,EAAA,SACAwB,OAAA,eAAA/J,EAAA,KAAAzJ,EAAA,WAAAsB,EAAApB,MAAA,aACAsT,OAAA,KACAA,OACAxB,EAAA,eAAAvI,EAAA,MAAA+J,OACAlS,EAAAmS,gBAAApS,IAAA,SAAAqS,GACA,MAAA1B,GAAA,YAAA2B,IAAAD,GAAA9B,KAAA5R,EAAA,WAAAsB,EAAApB,KAAA,IAAAwT,OAEAC,IAAA5T,EAAAuB,EAAApB,OAAA0T,OAAA,WACA7T,EAAAuB,EAAApB,MAAA4N,KAAAvM,MACA2Q,EAAA5Q,EAAAwM,KAAAvM,OACAoR,MAMA,OAHA,YAAArR,EAAApB,MACAqT,EAAAC,OAAA,IAAAxT,EAAA,qBAEAuT,EAEA,QAAAM,GAAAvS,GAIA,QAAAwS,GAAAC,GACAjG,KAAAkG,kBACAD,EAAAJ,IAAA7F,KAAAvM,OACAxB,EAAAuB,EAAApB,MAAA+T,WAAAnG,KAAAvM,OACAoR,KAPA,GAEAuB,GAAAC,EAFA1K,EAAAgI,IACA2C,EAAA3C,GASA,OAAAO,GAAA,qBAAA1Q,EAAApB,KAAA,MACAsT,OAAA,eAAA/J,EAAA,KAAAzJ,EAAA,WAAAsB,EAAApB,MAAA,aACAsT,OAAA,sBAAAlS,EAAAqD,cAAA,YACA6O,OACAU,EAAAlC,EAAA,2BAAAvI,EAAA,MACA4K,KAAA,MAAA/S,EAAAK,UACA0S,KAAA,MAAA/S,EAAAM,UACAyS,KAAA,OAAA/S,EAAAgT,gBACAX,IAAA5T,EAAAuB,EAAApB,OACAqU,GAAA,eAAA,WACAT,EAAAvU,KAAAuO,KAAAqG,MAGAX,OAAA,sBAAAlS,EAAAuD,cAAA,YACA2O,OACAW,EAAAnC,EAAA,kCACAqC,KAAA,MAAA/S,EAAAK,UACA0S,KAAA,MAAA/S,EAAAM,UACAyS,KAAA,OAAA/S,EAAAgT,gBACAX,IAAA5T,EAAAuB,EAAApB,OACAqU,GAAA,eAAA,WACAT,EAAAvU,KAAAuO,KAAAoG,MAGAV,OAAA,KACAA,OACAxB,EAAA,wCAAAwC,MAAA,WACAN,EAAAP,IAAArS,EAAAmT,cAAAb,YAGAJ,OAAA,KACAA,OAAA,eAAAY,EAAA,KAAApU,EAAA,mBAAA,aACAwT,OACAxB,EAAA,eAAAoC,EAAA,MAAAZ,OACAlS,EAAAoT,oBAAArT,IAAA,SAAAsT,GACA,MAAA3C,GAAA,YAAA2B,IAAAgB,GAAA/C,KAAA5R,EAAA,mBAAA2U,OAEAhB,IAAA5T,EAAAuB,EAAApB,KAAA,WAAA0T,OAAA,WACA7T,EAAAuB,EAAApB,KAAA,UAAA4N,KAAAvM,MACAoR,OAIA,QAAAiC,GAAAtT,GACA,GAAAmI,GAAAgI,GACA,OAAAO,GAAA,SACAwB,OACAxB,EAAA,8BAAAvI,EAAA,MACAoL,KAAA,UAAA9U,EAAAuB,EAAApB,OACA0T,OAAA,WACA7T,EAAAuB,EAAApB,MAAA8R,EAAAlE,MAAA+G,KAAA,WACAlC,OAGAa,OAAA,gBAAA/J,EAAA,KAAAzJ,EAAA,WAAAsB,EAAApB,MAAA,YAEA,QAAA4U,GAAAC,EAAAC,GAIA,GAAAC,GAAA,IACAF,GAAAG,WAAAC,QACAnD,EAAA,0GAAAuC,GAAA,YAAA,SAAAa,GACAH,EAAAjD,EAAAlE,MAAAuH,SACAD,EAAAE,cAAAC,aAAAC,cAAA,OACAJ,EAAAE,cAAAC,aAAAE,QAAA,OAAAvV,MACAkV,EAAAE,cAAAC,aAAAG,cACAN,EAAAE,cAAAC,aAAAG,aAAAT,EAAA,GAAA,EAAA,GAEAnC,WAAA,WACAmC,EAAAU,SAAA,UACA,KAEAC,QAAA,SAAAR,GACA,GAAAS,GAAA7D,EAAAlE,MACAgI,EAAAD,EAAAR,QACA,OAAA,KAAAD,EAAAW,SACAD,EAAAE,OAAAC,OAAAH,GACAD,EAAAK,QACAlB,KACA,GACA,IAAAI,EAAAW,SACAD,EAAAK,OAAAC,MAAAN,GACAD,EAAAK,QACAlB,KACA,GAJA,UAOAT,GAAA,WAAA,SAAAa,GACAA,EAAAiB,iBACAjB,EAAAE,cAAAC,aAAAe,WAAA,MACA,IAAAC,GAAAvE,EAAAlE,KACAmH,KACAsB,EAAAC,UAAAC,GAAAxB,IACAsB,EAAAN,OAAAhB,GACAD,KACAuB,EAAAG,UAAAD,GAAAxB,KACAsB,EAAAH,MAAAnB,GACAD,QAGAT,GAAA,OAAA,SAAAa,GACAA,EAAAiB,mBACA9B,GAAA,UAAA,SAAAa,GACAA,EAAAiB,iBACApB,IACAA,EAAA0B,YAAA,SACA1B,EAAA,QAIA,QAAA2B,KACA,GAAAC,GACAzE,EAAAJ,EAAA,SAAAwB,OACAxB,EAAA,cAAAwB,OAAA,WAAAxT,EAAA,mBAAA,aAAAwT,OACAzT,EAAA+W,eAAAzV,IAAAiS,KAEAE,OACAxB,EAAA,cAAAwB,OAAA,WAAAxT,EAAA,iBAAA,aAAAwT,OACAzT,EAAAyE,aAAAnD,IAAAwS,KAEAL,OACAxB,EAAA,cAAAwB,OAAA,WAAAxT,EAAA,qBAAA,aAAAwT,OACAqD,EAAA7E,EAAA,SAAAwB,OACAzT,EAAAgX,WAAA1V,IAAA,SAAA2V,GACA,MAAAhF,GAAA,0CAAAgF,EAAA9W,KAAA,MAAAsT,OACAwD,EAAAjX,QAAAsB,IAAAwS,SAKAL,OACAxB,EAAA,cAAAwB,OAAA,WAAAxT,EAAA,iBAAA,aAAAwT,OACAzT,EAAAkX,aAAA5V,IAAAuT,KAEApB,OACAxB,EAAA,cAAAwB,OAAA,WAAAxT,EAAA,sBAAA,aAAAwT,OACAzT,EAAAmX,kBAAA7V,IAAAiS,IASA,OANAwB,GAAA+B,EAAA,WACA9W,EAAAuD,eAAAuT,EAAA3B,WAAA7T,IAAA,WACA,MAAA2Q,GAAAlE,MAAAuG,KAAA,oBACA8C,MACAxE,MAEAP,EAEA,QAAAgF,KACArX,EAAA+W,eAAAnU,QAAA,SAAArB,GACA4Q,EAAA5Q,EAAAvB,EAAAuB,EAAApB,SAGA,QAAAmX,KACA,MAAArF,GAAA,SAAAwB,OACAxB,EAAA,iFAAAwC,MAAA,WAEAxC,EAAAlE,MAAAuG,KAAA,OAAA1C,EAAAoB,EAAAC,YAEAQ,OACA,KACAA,OACAxB,EAAA,oDAAAwC,MAAA,WACAtB,OAAAoE,KAAA3F,EAAAoB,EAAAC,QAAA,oBAEAQ,OACA,gFAxNA,GACApB,GACAW,EAFAwE,EAAAvF,EAAAlE,MAGA/N,EAAA,GAAA+R,GACAe,EAAA,KACAQ,EAAA,GAuNAkE,GAAAC,QAAAhE,OAAApB,EAAAwE,KACAQ,IACAG,EAAA/D,OAAA6D,KAAA7D,OACAxB,EAAA,SAAAwB,OAAAT,EAAAf,EAAA,UAAAgB,KAAAjB,EAAAhS,EAAAkT,MAAAjT,MAEAkT,OAAAC,KACAA,KAAAC,eAAAL,EAAA,IAEAwE,EAAA/D,OAAA,MAAAxT,EAAA,gBAAA,QAEAuX,EAAA/D,OAAA6D,WJo4CGI,YAAY,EAAEC,YAAY,EAAEC,eAAe,IAAIC,GAAG,SAAS5Y,EAAQU,EAAOJ,GK5nD7E,GAAAuY,GAAA,SAAA3X,EAAAuT,EAAAgB,GACA3G,KAAA5N,KAAAA,EACA4N,KAAA2F,gBAAAA,EACAzL,SAAAyM,EACA3G,KAAA2G,aAAAhB,EAAA,GAEA3F,KAAA2G,aAAAA,EAGAoD,GAAA3V,UAAAoQ,wBAAA,WACA,MAAAxE,MAAA5N,KAAA,KAEA2X,EAAA3V,UAAAuQ,sBAAA,SAAAlR,GAIA,MAHA,SAAAuM,KAAA5N,OAAA,SAAA,MAAA,WAAAU,QAAAW,IAAA,IACAA,EAAA,YAEAuM,KAAAwE,0BAAA/Q,EAAA,KAEAsW,EAAA3V,UAAA4V,oBAAA,SAAAvW,EAAAD,GACA,QAAAyW,GAAAxX,GACA,MAAA,KAAAe,EAAApB,KAAAU,QAAAL,GAEA,MAAAwX,GACAjK,KAAAwE,6BACAyF,EACAjK,KAAA2E,sBAAAlR,IAIA,IAAAyW,GAAA,SAAA9X,EAAA+X,EAAAxD,GACAoD,EAAAtY,KAAAuO,KAAA5N,EAAA+X,EAAAxD,GAEAuD,GAAA9V,UAAAgP,OAAAC,OAAA0G,EAAA3V,WACA8V,EAAA9V,UAAAkP,YAAA4G,EACAA,EAAA9V,UAAAwS,qBAAA,WAAA,SAAA,aAAA,cACAsD,EAAA9V,UAAAP,OAAA,WACA,MAAAmM,MAAA2F,gBAAA,IAEAuE,EAAA9V,UAAAN,OAAA,WACA,MAAAkM,MAAA2F,gBAAA,IAEAuE,EAAA9V,UAAAyC,YAAA,SAAApD,GAEA,MADAyG,UAAAzG,IAAAA,EAAAuM,KAAAnM,UACAJ,EAAA2W,WAAApJ,QAAA,IAAA,MAEAkJ,EAAA9V,UAAA2C,YAAA,SAAAtD,GAEA,MADAyG,UAAAzG,IAAAA,EAAAuM,KAAAlM,UACAL,EAAA2W,WAAApJ,QAAA,IAAA,KAGA,IAAAqJ,GAAA,SAAAjY,EAAA+X,EAAAxD,GACAuD,EAAAzY,KAAAuO,KAAA5N,EAAA+X,EAAAxD,GAEA0D,GAAAjW,UAAAgP,OAAAC,OAAA6G,EAAA9V,WACAiW,EAAAjW,UAAAkP,YAAA+G,EACAA,EAAAjW,UAAA0C,QAAA,WACA,MAAA,OAEAuT,EAAAjW,UAAAoS,aAAA,WACA,MAAAxG,MAAAlM,UAAA,IACA,MACAkM,KAAAlM,UAAA,GACA,OAEA,QAIA,IAAAwW,GAAA,SAAAlY,EAAA+X,EAAAxD,GACAuD,EAAAzY,KAAAuO,KAAA5N,EAAA+X,EAAAxD,GAEA2D,GAAAlW,UAAAgP,OAAAC,OAAA6G,EAAA9V,WACAkW,EAAAlW,UAAAkP,YAAAgH,EACAA,EAAAlW,UAAA0C,QAAA,WACA,MAAA,IAEAwT,EAAAlW,UAAAoS,aAAA,WACA,MAAA,GAGA,IAAA+D,GAAA,SAAAnY,EAAA+X,EAAAxD,GACA2D,EAAA7Y,KAAAuO,KAAA5N,EAAA+X,EAAAxD,GAEA4D,GAAAnW,UAAAgP,OAAAC,OAAAiH,EAAAlW,WACAmW,EAAAnW,UAAAkP,YAAAiH,EACAA,EAAAnW,UAAAwS,qBAAA,WAAA,SAEA,IAAA4D,GAAA,SAAApY,EAAAuU,GACAoD,EAAAtY,KAAAuO,KAAA5N,IAAA,GAAA,GAAAuU,GAEA6D,GAAApW,UAAAgP,OAAAC,OAAA0G,EAAA3V,WACAoW,EAAApW,UAAAkP,YAAAkH,CAEA,IAAAC,GAAA,WACAzK,KAAA0K,QAEAD,GAAArW,UAAA4U,gBACA,GAAAe,GAAA,cAAA,OAAA,UACA,GAAAA,GAAA,UAAA,SAAA,SAAA,OAAA,UACA,GAAAA,GAAA,SAAA,SAAA,WAAA,SAAA,OAAA,MAAA,YACA,GAAAA,GAAA,YAAA,IAAA,IAAA,KAAA,OACA,GAAAA,GAAA,cAAA,QAAA,iBAEAU,EAAArW,UAAAsC,cACA,GAAA6T,GAAA,gBAAA,EAAA,MAAA,KACA,GAAAA,GAAA,iBAAA,EAAA,MAAA,KACA,GAAAF,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,EAAA,GAAA,GACA,GAAAA,GAAA,yBAAA,EAAA,GAAA,GACA,GAAAA,GAAA,yBAAA,EAAA,IACA,GAAAA,GAAA,yBAAA,EAAA,IACA,GAAAA,GAAA,yBAAA,EAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,GAAA,GAAA,IACA,GAAAA,GAAA,4BAAA,GAAA,GAAA,GACA,GAAAA,GAAA,4BAAA,GAAA,GAAA,GACA,GAAAC,GAAA,sBAAA,EAAA,IAAA,IAEAG,EAAArW,UAAAuC,oBACA8T,EAAArW,UAAA6U,eACA,WAAA,WAAA,YAAApU,QAAA,SAAAzC,GAEA,GAAAuY,GAAA,GAAAN,GAAAjY,GAAA,KAAA,KAAA,GACAwY,EAAA,GAAAP,GAAAjY,EAAA,UAAA,KAAA,KAAA,EACAqY,GAAArW,UAAAuC,iBAAA0J,KAAAsK,GACAF,EAAArW,UAAAuC,iBAAA0J,KAAAuK,GACAH,EAAArW,UAAA6U,WAAA5I,MACAjO,KAAAA,EACAH,SAAA0Y,EAAAC,OAGAH,EAAArW,UAAA+U,cACA,GAAAqB,GAAA,gBAAA,GACA,GAAAA,GAAA,eACA,GAAAA,GAAA,gBAEAC,EAAArW,UAAAgV,mBACA,GAAAW,GAAA,UAAA,MAAA,IAAA,IAAA,OAEAU,EAAArW,UAAAyW,YAAA,iBAAA,eAAA,mBAAA,eAAA,qBACAJ,EAAArW,UAAAsW,MAAA,WACA1K,KAAA6K,WAAAhW,QAAA,SAAAiW,GACA9K,KAAA8K,GAAAjW,QAAA,SAAArB,GACAwM,KAAAxM,EAAApB,MAAAoB,EAAAmT,cACA,gBAAAmE,GAAA,oBAAAA,KACA9K,KAAAxM,EAAApB,KAAA,UAAA;EAEA4N,OACAA,MACAA,KAAAxK,eAAAwK,KAAAiJ,WAAA1V,IAAA,SAAA2V,GACA,MAAAA,GAAA9W,QAGAqY,EAAArW,UAAA+Q,IAAA,WACA,MAAA,IAAA4F,GAAA/K,MAGA,IAAA+K,GAAA,SAAAC,GACAA,EAAAH,WAAAhW,QAAA,SAAAiW,GACA9K,KAAA8K,MACAE,EAAAF,GAAAjW,QAAA,SAAArB,GACA,GAAAyX,GAAAD,EAAAhC,eAAAkC,KAAA,SAAAC,GACA,MAAAA,GAAAnB,oBAAAgB,EAAAG,EAAA/Y,MAAAoB,IAEAyX,KACAjL,KAAA8K,GAAAzK,KAAA7M,GACAwM,KAAAxM,EAAApB,MAAA4Y,EAAAxX,EAAApB,OACA,gBAAA0Y,GAAA,oBAAAA,KACA9K,KAAAxM,EAAApB,KAAA,UAAA4Y,EAAAxX,EAAApB,KAAA,aAGA4N,OACAA,MACAA,KAAAxK,eAAAwV,EAAAxV,eAEAuV,GAAA3W,UAAAd,mBAAA,SAAAb,GACA,MAAAuN,MAAAtJ,aAAAD,OAAA,SAAAjD,GACA,MAAA,KAAAA,EAAApB,KAAAU,QAAAL,EAAA,MACAuN,OAEA+K,EAAA3W,UAAA0F,aAAA,SAAArH,GACA,MAAAuN,MAAAtJ,aAAAD,OAAA,SAAAjD,GACA,MAAA,KAAAA,EAAApB,KAAAU,QAAAL,EAAA,MAAA,YAAAuN,KAAAxM,EAAApB,KAAA,WACA4N,OAEA+K,EAAA3W,UAAA4E,gBAAA,SAAAvG,GACA,GAAA2Y,GAAApL,KAAAlG,aAAArH,EACA,OAAA,IAAA2Y,EAAA1Z,OACA0Z,EAAA,GAEA,MAGAL,EAAA3W,UAAA4G,UAAA,WACA,MAAAgF,MAAAtJ,aAAAwU,KAAA,SAAA1X,GACA,MAAA,YAAAwM,KAAAxM,EAAApB,KAAA,WACA4N,OAAAA,KAAArJ,iBAAAuU,KAAA,SAAA1X,GACA,MAAA,YAAAwM,KAAAxM,EAAApB,KAAA,WACA4N,OAEA+K,EAAA3W,UAAAK,gBAAA,WACA,MAAAuL,MAAAtJ,aAAAwU,KAAA,SAAA1X,GACA,MAAA,UAAAwM,KAAAxM,EAAApB,KAAA,WACA4N,OAAAA,KAAArJ,iBAAAuU,KAAA,SAAA1X,GACA,MAAA,UAAAwM,KAAAxM,EAAApB,KAAA,WACA4N,OAEA+K,EAAA3W,UAAA2B,aAAA,SAAAtD,GACA,MAAAuN,MAAAlG,aAAArH,GAAAf,OAAA,GAEAqZ,EAAA3W,UAAAwE,sBAAA,SAAAnG,GACA,MAAAuN,MAAA1M,mBAAAb,GAAA8G,MAAA,SAAA/F,GACA,MAAA,UAAAwM,KAAAxM,EAAApB,KAAA,WACA4N,OAEA+K,EAAA3W,UAAAsF,WAAA,WACA,QAAA2R,GAAAjZ,EAAAkZ,GACA,MAAA,KAAAlZ,EAAAU,QAAAwY,EAAAlZ,EAAAV,OAAA4Z,EAAA5Z,QAEA,MAAAsO,MAAArJ,iBAAAuU,KAAA,SAAA1X,GACA,MAAA6X,GAAA7X,EAAApB,KAAA,YAAA,GAAA4N,KAAAxM,EAAApB,OAAA,YAAA4N,KAAAxM,EAAApB,KAAA,YACA4N,OAEA+K,EAAA3W,UAAAe,aAAA,SAAA1C,GACA,MACA,YAAAuN,KAAAvN,EAAA,WACA,GAAAuN,KAAAvN,EAAA,WAAA,YAAAuN,KAAAvN,EAAA,iBAGAsY,EAAA3W,UAAAc,eAAA,SAAAzC,GACA,MAAAuN,MAAA7K,aAAA1C,IAAA,GAAAuN,KAAAvN,IAGAb,EAAAJ,QAAAiZ,OL+nDMc,GAAG,SAASra,EAAQU,EAAOJ,GMz2DjCA,EAAAga,OAAAta,EAAA,sBACAM,EAAAia,SAAAva,EAAA,wBACAM,EAAAka,OAAAxa,EAAA,sBACAM,EAAAma,KAAAza,EAAA,oBACAM,EAAAoa,IAAA1a,EAAA,mBACAM,EAAAqa,QAAA3a,EAAA,yBN42DG4a,mBAAmB,EAAEC,qBAAqB,EAAEC,kBAAkB,GAAGC,qBAAqB,GAAGC,sBAAsB,GAAGC,uBAAuB,KAAKC,GAAG,SAASlb,EAAQU,EAAOJ,GOj3D5K,GAAAK,GAAAX,EAAA,eACAmb,EAAAnb,EAAA,cAEAya,EAAA,SAAAW,EAAAC,GACAF,EAAA5a,KAAAuO,KAAAsM,EAAAC,GAEAZ,GAAAvX,UAAAgP,OAAAC,OAAAgJ,EAAAjY,WACAuX,EAAAvX,UAAAkP,YAAAqI,EACAA,EAAAvX,UAAA0B,IAAA,EACA6V,EAAAvX,UAAAgC,UAAA,EACAuV,EAAAvX,UAAAoY,YAAA,SAAAlU,EAAAmU,GAgEA,QAAAC,GAAAC,EAAAC,EAAAC,GACAC,EAAA7b,EAAA8b,EAAAH,IACA,SAAA5M,KAAAuM,YACAO,EAAAnc,EAAAqc,EAAAL,IAEA,UAAA3M,KAAAuM,YACAO,EAAAnc,EAAAsc,EAAAL,IAEA,QAAA5M,KAAAuM,YACAO,EAAAnc,EAAAuc,EAAAP,IAEAE,GACAC,EAAAnc,EAAA,OAAAwc,EAAAR,GAAA,SA3EA,GAAAS,GAAA,EACAL,GACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBAEAE,GACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBAEAI,EAAA,EACAF,GACA,OACA,QACA,SACA,MACA,OACA,SAEAH,GACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBAEAE,GACA,kBACA,kBACA,kBACA,kBACA,kBACA,mBAEAI,IACA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,IACA,EAAA,EAAA,EAAA,IAEAC,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACAT,EAAA,GAAAjb,EAuBA,IAtBAib,EAAA7b,EAAA,kBACA,SAAA+O,KAAAuM,YACAO,EAAAnc,EAAA,mBAEA2H,GACAwU,EAAAnc,EAAA,mBAiBAqP,KAAAwN,eAaA,CAAA,GAAA,QAAAxN,KAAAuM,YAAA,SAAAvM,KAAAuM,WAAA,CAEA,IAAA,GAAApb,GAAA,EAAAkc,EAAAlc,EAAAA,IACAmc,EAAAnc,GAAA0D,QAAA,SAAA4Y,EAAAC,GACAhB,EAAAjb,KAAAuO,KAAA7O,EAAAsc,EAAA,GAAAC,IACA1N,KAEA,OAAA,IAAAnO,GACAib,EAAA3V,KACA,kCACA,OAEA,oBACA,oBAAA6I,KAAA2N,yBAAA,KACA,wCACA,yCACA,0CACA,uCACA,wCACA,yCACA,OAIA,IAAA,GAAAxc,GAAA,EAAAic,EAAAjc,EAAAA,IACA2b,EAAA7b,EAAA8b,EAAA5b,IACAmH,GACAwU,EAAAnc,EAAAsc,EAAA9b,GAIA,KAAA,GADAyc,GAAA,GAAA/b,GACAV,EAAA,EAAAkc,EAAAlc,EAAAA,IACAyc,EAAA3c,EAAA,IACAsc,EAAA1Y,QAAA,SAAA4Y,GACAG,EAAAjd,EAAA2c,EAAAnc,GAAAsc,GAAA,QAEAG,EAAAjd,EAAA,MAAAwc,EAAAhc,GAAA,QAEA,OAAA,IAAAU,GACAib,EAAA3V,KACA,kCACA,OAEA,oBACAyW,EAAAzW,KACA,oBAAA6I,KAAA2N,yBAAA,KACA,QA1DA,IAAA,GAAAxc,GAAA,EAAAkc,EAAAlc,EAAAA,IACAoc,EAAA1Y,QAAA,SAAA4Y,EAAAC,GACAhB,EAAAjb,KAAAuO,KAAA7O,EAAAmc,EAAAnc,GAAAsc,GAAA,GAAAC,IACA1N,KAEA,OAAA,IAAAnO,GACA,oBACAib,EAAA3V,KACA,kCACA,SAuDAvF,EAAAJ,QAAAma,IPo3DGkC,cAAc,EAAEC,aAAa,KAAKC,GAAG,SAAS7c,EAAQU,EAAOJ,GQ9gEhE,GAAAK,GAAAX,EAAA,eACA8c,EAAA9c,EAAA,iBAEAwa,EAAA,SAAAY,EAAAC,EAAAvV,GACAgX,EAAAvc,KAAAuO,KAAAsM,EAAAC,EAAAvV,GAEA0U,GAAAtX,UAAAgP,OAAAC,OAAA2K,EAAA5Z,WACAsX,EAAAtX,UAAAkP,YAAAoI,EACAA,EAAAtX,UAAA6Z,uBAAA,SAAAC,GACA,MAAA,eAAAA,EAAA,YAEAxC,EAAAtX,UAAA+Z,mBAAA,SAAAD,GACA,MAAA,cAAAA,EAAA,OAEAxC,EAAAtX,UAAAga,oBAAA,SAAAF,GACA,MAAA,cAAAA,EAAA,OAEAxC,EAAAtX,UAAAia,gBAAA,SAAA/V,EAAAmU,GACA,QAAA6B,KACA,GAAA9Z,GAAA,GAAA3C,EA8BA,OA7BA2C,GAAAvD,EACA,0CACA,2CAEAqH,IACA0H,KAAAwN,gBAAA,QAAAxN,KAAAuM,WAKA/X,EAAAvD,EACA,4CALAuD,EAAAvD,EACA,sCAOAuD,EAAAvD,EACA,0CACA,0CACA,4CAGA+O,KAAAwN,eACAhZ,EAAAvD,EACA,yBAEA,UAAA+O,KAAAuM,YACA/X,EAAAvD,EACA,8DAGAuD,EAAA2C,KACA,2BACA,KAGA,QAAAoX,KACA,GAAA/Z,GAAA,GAAA3C,EAoEA,OAnEA2C,GAAAvD,EACA,mBAEA+O,KAAAwN,eAgBA,QAAAxN,KAAAuM,WACA/X,EAAAvD,EACA,gCACA,gCACA,gCACA,+DAGAuD,EAAAvD,EACA,2CACA,2CACA,2CACA,uBACA,uBACA,uBACA,eA9BA,QAAA+O,KAAAuM,WACA/X,EAAAvD,EACA,mBACA,mBACA,mBACA,+DAGAuD,EAAAvD,EACA,mBACA,mBACA,oBAuBAuD,EAAAvD,EACA,WACA,uBACA,uBACA,wBAEA+O,KAAAwN,eAMA,QAAAxN,KAAAuM,WACA/X,EAAAvD,EACA,yCACA,yCACA,0CAGAuD,EAAAvD,EACA,2DACA,6DACA,+DACA,mCAhBAuD,EAAAvD,EACA,iCACA,iCACA,kCAgBAuD,EAAAvD,EACA,KAEA+O,KAAAwN,gBAAA,QAAAxN,KAAAuM,WAMA/X,EAAA2C,KACA,yCACA,KAPA3C,EAAA2C,KACA,sCACA,KASA,QAAAqX,KACA,GAAAha,GAAA,GAAA3C,EAYA,OAXA2C,GAAAvD,EACA,YACA,kDACA,kDACA,kDAEA+O,KAAAwN,gBAAA,QAAAxN,KAAAuM,YACA/X,EAAA7D,EACA,IAAA,oBAGA6D,EAAA2C,KACA,YACA,MAGA,GAAA3C,GAAA,GAAA3C,EAkDA,OAjDA2C,GAAAvD,EACA,gCAEA+O,KAAAwN,gBACAhZ,EAAAvD,EACA,+BACA,sBAGAqH,GACA9D,EAAAvD,EACA,yDACA,eACA,oBACA,oBACA,oBACA,oBACA,MAEA+O,KAAAwN,gBAAA,QAAAxN,KAAAuM,YACA/X,EAAAvD,EACA,+BAIAuD,EAAAvD,EACA,+CAGAuD,EAAAvD,EACAqd,EAAA7c,KAAAuO,OAEAA,KAAAwN,gBACAhZ,EAAAvD,EACA,4BACA,wCACA,KAGAuD,EAAAvD,EACA,wBACA,YACA,qBACA,qBACA,MACA,IACAsd,EAAA9c,KAAAuO,MACAwO,EAAA/c,KAAAuO,OAEAxL,GAGA5C,EAAAJ,QAAAka,IRihEGmC,cAAc,EAAEY,gBAAgB,KAAKC,IAAI,SAASxd,EAAQU,EAAOJ,GS/tEpE,GAAAK,GAAAX,EAAA,eACAyd,EAAAzd,EAAA,aAEA0a,EAAA,SAAAU,EAAAC,EAAAvV,GACA2X,EAAAld,KAAAuO,KAAAsM,EAAAC,EAAAvV,GAEA4U,GAAAxX,UAAAgP,OAAAC,OAAAsL,EAAAva,WACAwX,EAAAxX,UAAAkP,YAAAsI,EACAA,EAAAxX,UAAAwa,cAAA,WACA,MAAA,IAAA/c,GACA,iBACA,oCAGA+Z,EAAAxX,UAAAya,gBAAA,SAAAvW,EAAAmU,GACA,GAAAjY,GAAA,GAAA3C,EA2BA,OA1BA2C,GAAAvD,EACA,sBACA,+BACA,kBACA,sCACA,sCACA,+BAEA+O,KAAA8O,sBACAta,EAAAvD,EACA,6DACA,sCACA,sCACA,uCAEAqH,GACA9D,EAAAvD,EACA+O,KAAAwN,gBAAA,QAAAxN,KAAAuM,WAEA,wBADA,kCAGA,0CACA,0CACA,2CAGA/X,GAGA5C,EAAAJ,QAAAoa,ITkuEGiC,cAAc,EAAEkB,YAAY,KAAKC,IAAI,SAAS9d,QAAQU,OAAOJ,SU/wEhE,GAAAK,OAAAX,QAAA,eACAmb,MAAAnb,QAAA,cAEA8c,SAAA,SAAA1B,EAAAC,EAAAvV,GACAqV,MAAA5a,KAAAuO,KAAAsM,EAAAC,GACAvM,KAAAhJ,IAAAA,CACA,IAAAiY,GAAAjP,KAAAkP,mBACAlP,MAAAhJ,IAAAvD,MAAAwb,IAAAjP,KAAAhJ,IAAAvD,MAAAwb,GACAjP,KAAAhJ,IAAApD,IAAAqb,IAAAjP,KAAAhJ,IAAApD,IAAAqb,GAEAjB,UAAA5Z,UAAAgP,OAAAC,OAAAgJ,MAAAjY,WACA4Z,SAAA5Z,UAAAkP,YAAA0K,SACAA,SAAA5Z,UAAA8a,kBAAA,WACA,IAAAlP,KAAAwN,gBAAAxN,KAAAsM,kBAAA,GACA,MAAAtM,MAAAhJ,IAAApD,GAMA,KAAA,GAJAub,aAAA,QAAAnP,KAAAuM,WACAvM,KAAAmO,mBACAnO,KAAAiO,uBACAmB,WAAA,GAAApP,KAAAsM,iBACA+C,EAAArP,KAAAhJ,IAAApD,IAAAyb,GAAA,EAAAA,IAAA,CACA,GAAAze,GAAA0e,KAAAH,YAAAE,GACA,IAAAD,YAAAxe,EACA,MAAAye,KASArB,SAAA5Z,UAAAmb,yBAAA,SAAAnU,EAAA9C,EAAAmU,GACA,GAAA0C,GAAA,QAAAnP,KAAAuM,WACAvM,KAAAmO,mBACAnO,KAAAiO,uBACAzZ,EAAA,GAAA3C,MAkEA,OAjEAmO,MAAAhJ,IAAAtD,SACAc,EAAAvD,EACA,mBAAA+O,KAAAhJ,IAAArD,IAAA,IACA,mBAAAqM,KAAAhJ,IAAApD,IAAA,KAEAoM,KAAAwN,eACAhZ,EAAAvD,EACA,oBAAAke,EAAA,eAAA,IACA,8CAAAnP,KAAAwP,sBAAA,KACA,oBAAAxP,KAAAoO,oBAAA,eAAA,IACA,oBAAApO,KAAA2N,yBAAA,kBACA3N,KAAAyP,WAAArU,GACA,oCACA,qCACA,yBACA,cAAA+T,EAAA,YAAA,IACA,cAAAnP,KAAAoO,oBAAA,YAAA,KAGA5Z,EAAAvD,EACA,oBAAA+O,KAAAoO,oBAAA,eAAA,IACA,8CAAApO,KAAAwP,sBAAA,KACAxP,KAAAyP,WAAArU,GACA,0BACA,qCACA,yBACA,cAAA4E,KAAAoO,oBAAA,YAAA,OAIA5Z,EAAAvD,EACA,gBAAA+O,KAAAhJ,IAAAvD,MAAA,KAEAuM,KAAAwN,eACAhZ,EAAAvD,EACA,iBAAAke,EAAA,YAAA,IACA,2CAAAnP,KAAAwP,sBAAA,KACA,iBAAAxP,KAAAoO,oBAAA,YAAA,IACA,oBAAApO,KAAA2N,yBAAA,eACA3N,KAAAyP,WAAArU,GACA,2BAGA5G,EAAAvD,EACA,iBAAA+O,KAAAoO,oBAAA,YAAA,IACA,2CAAApO,KAAAwP,sBAAA,KACAxP,KAAAyP,WAAArU,GACA,4BAIA5G,EAAAvD,EACA+O,KAAAqO,gBAAA/V,EAAAmU,GAAAzW,SACAgK,KAAA0P,kBAAA1Z,SACA,KAEAgK,KAAAhJ,IAAAtD,QACAc,EAAAvD,EACA,cAAA+O,KAAAhJ,IAAAvD,MAAA,MAGAe,EAAAvD,EACA,iBAGAuD,GAGA5C,OAAAJ,QAAAwc,WVkxEGH,cAAc,EAAEC,aAAa,KAAK6B,IAAI,SAASze,EAAQU,EAAOJ,GW33EjE,GAAAK,GAAAX,EAAA,eACA8c,EAAA9c,EAAA,iBAEAyd,EAAA,SAAArC,EAAAC,EAAAvV,GACAgX,EAAAvc,KAAAuO,KAAAsM,EAAAC,EAAAvV,GAEA2X,GAAAva,UAAAgP,OAAAC,OAAA2K,EAAA5Z,WACAua,EAAAva,UAAAkP,YAAAqL,EACAA,EAAAva,UAAA0B,IAAA,EACA6Y,EAAAva,UAAA6Z,uBAAA,SAAAC,GACA,MAAA,gBAAAA,EAAA,UAEAS,EAAAva,UAAA+Z,mBAAA,SAAAD,GACA,MAAA,gBAAAA,EAAA,UAEAS,EAAAva,UAAAga,oBAAA,SAAAF,GACA,MAAA,gBAAAA,EAAA,UAIAS,EAAAva,UAAAia,gBAAA,SAAA/V,EAAAmU,GACA,GAAAjY,GAAA,GAAA3C,EA8GA,OA7GA2C,GAAAvD,EACA,0BAEA+O,KAAAwN,eAMA,QAAAxN,KAAAuM,WACA/X,EAAAvD,EACA,kCACA,yBACA,KAGAuD,EAAAvD,EACA,gCACA,uBACA,KAfAuD,EAAAvD,EACA,kCACA,yBACA,KAeA+O,KAAA8O,uBACAta,EAAAvD,EACA,0BACA,mDACA,kCACA,KAGAqH,GACA9D,EAAAvD,EACA,eACA,oBACA,oBACA,oBACA,oBACA,MAGAuD,EAAAvD,EACA+O,KAAA4O,iBAEA5O,KAAAwN,eAeA,QAAAxN,KAAAuM,WACA/X,EAAAvD,EACA,WACA,wBACA,yBACA,4BACA,0BACA,0BACA,yCACA,yCACA,4CAAA+O,KAAAwP,sBAAA,IACAxP,KAAA6O,gBAAAvW,EAAAmU,GAAAzW,OAAA,GACA,MACA,KACA,IACA,wBACA,yBACA,mCACA,oDACA,oDACA,oDACA,oDACA,oDACA,oDACA,KACA,KAGAxB,EAAAvD,EACA,WACA,yBACA,kCACA,0BACA,mCACA,yCAAA+O,KAAAwP,sBAAA,IACAxP,KAAA6O,gBAAAvW,EAAAmU,GAAAzW,OAAA,GACA,KACA,IACA,wBACA,yBACA,mCACA,sDACA,sDACA,sDACA,sDACA,sDACA,sDACA,KACA,KA9DAxB,EAAAvD,EACA,4BACA,6BACA,4BACA,8BACA,8BACA,yCACA,yCACA,4CAAA+O,KAAAwP,sBAAA,IACAxP,KAAA6O,gBAAAvW,EAAAmU,GAAAzW,OAAA,GACA,MACA,KACA,KAqDAxB,GAGA5C,EAAAJ,QAAAmd,IX83EGd,cAAc,EAAEY,gBAAgB,KAAKmB,IAAI,SAAS1e,EAAQU,EAAOJ,GYpgFpE,GAAAK,GAAAX,EAAA,eAEAmb,EAAA,SAAAC,EAAAC,GACAvM,KAAAsM,iBAAAA,EACAtM,KAAAuM,WAAAA,EAEAF,GAAAjY,UAAA0B,IAAA,EACAuW,EAAAjY,UAAAgC,UAAA,EACAiW,EAAAjY,UAAAyb,YAAA,YACAxD,EAAAjY,UAAAoZ,aAAA,WACA,MAAAxN,MAAAsM,iBAAA,GAEAD,EAAAjY,UAAA0b,sBAAA,WACA,MAAA9P,MAAAlK,KAEAuW,EAAAjY,UAAA0a,oBAAA,WACA,MAAA,SAAA9O,KAAAuM,YAAA,GAAAvM,KAAAlK,IAAA,EAAA,GAEAuW,EAAAjY,UAAA2b,mBAAA,WACA,MAAA,UAAA/P,KAAAuM,YAAA,QAAAvM,KAAAuM,WAAA,EAAA,GAEAF,EAAAjY,UAAAob,oBAAA,WACA,MAAAxP,MAAA8P,wBAAA9P,KAAA8O,sBAAA9O,KAAA+P,sBAEA1D,EAAAjY,UAAAuZ,uBAAA,WACA,MAAA,OAAA3N,KAAAsM,iBAAA,SAEAD,EAAAjY,UAAA4b,sBAAA,WACA,MAAA,IAAAhQ,KAAAsM,iBACA,mBACA,IAAAtM,KAAAsM,iBACA,oBACA,IAAAtM,KAAAsM,iBACA,kBADA,QAIAD,EAAAjY,UAAAqb,WAAA,SAAArU,GACA,GAAA5G,GAAA,GAAA3C,EAQA,OAPAuJ,KACA5G,EAAAvD,EAAA,iEACA+O,KAAAwN,iBACAhZ,EAAAvD,EAAA,kEACAuD,EAAAvD,EAAA,+FAGAuD,GAEA6X,EAAAjY,UAAAsb,gBAAA,WACA,GAAAlb,GAAA,GAAA3C,EASA,OARA2C,GAAAvD,EACA,2DAEA+O,KAAAwN,gBACAhZ,EAAAvD,EACA,mEAGAuD,GAEA6X,EAAAjY,UAAAmb,yBAAA,SAAAnU,EAAA9C,EAAAmU,GACA,MAAA,IAAA5a,GACAmO,KAAAwM,YAAAlU,EAAAmU,GACAzM,KAAAyP,WAAArU,GACA4E,KAAA0P,oBAIArD,EAAAjY,UAAA+G,UAAA,SAAAC,GACA,GAAA9C,GAAA,UAAA0H,KAAAuM,YAAA,QAAAvM,KAAAuM,WACAE,EAAA,UAAAzM,KAAAuM,WACA/X,EAAA,GAAA3C,EAmDA,OAlDA2C,GAAAvD,EACA,qDAEA+O,KAAAwN,gBACAhZ,EAAAvD,EACA,6DAGAuD,EAAAvD,EACA+O,KAAAuP,yBAAAnU,EAAA9C,EAAAmU,GACA,6DAEAnU,EACA9D,EAAAvD,EACA,0BACA,gBAAA+O,KAAAlK,IAAA,mBACA,oCAAAkK,KAAAlK,IAAA,GAAA,IACA,oCACA,KACA,2CACA,sDACA,0BACA,8BACA,oCAAAkK,KAAAlK,IAAA,GAAA,IACA,mCAAAkK,KAAAlK,IACA,KACA,yCAEAkK,KAAAlK,IAAA,GAAA,SAAAkK,KAAAuM,WACA/X,EAAAvD,EACA,0BACA,gBAAA+O,KAAAlK,IAAA,mBACA,oCAAAkK,KAAAlK,IAAA,GAAA,IACA,oCACA,KACA,2CACA,wDACA,0BACA,+BACA,oCAAAkK,KAAAlK,IAAA,GAAA,IACA,mCAAAkK,KAAAlK,IACA,KACA,0CAGAtB,EAAAvD,EACA,sCAAA+O,KAAAlK,IAAA,wBACA,4CAGAtB,GAGA6X,EAAAjY,UAAA0G,UAAA,WACA,MACA,IAAAjJ,GADAmO,KAAAwN,eACA,sBAAAxN,KAAA6P,YAAA,cAAA7P,KAAAgQ,wBAAA,OAEA,oBAAAhQ,KAAA6P,YAAA,mBAIAje,EAAAJ,QAAA6a,IZugFGwB,cAAc,IAAIoC,IAAI,SAAS/e,EAAQU,EAAOJ,Ga3oFjD,GAAAK,GAAAX,EAAA,eACAmb,EAAAnb,EAAA,cAEAsa,EAAA,SAAAc,EAAAC,GACAF,EAAA5a,KAAAuO,KAAAsM,EAAAC,GAEAf,GAAApX,UAAAgP,OAAAC,OAAAgJ,EAAAjY,WACAoX,EAAApX,UAAAkP,YAAAkI,EACAA,EAAApX,UAAAyb,YAAA,eACArE,EAAApX,UAAAoY,YAAA,SAAAlU,EAAAmU,GACA,GAAAjY,GAAA,GAAA3C,GACA,mBACA,kCACA,cAAAyG,EAAA,kBAAA,IACA,eAAAA,EAAAmU,kBAAA,IACA,eAAAnU,EAAAmU,EAAA,kBAAA,kBAAA,IACA,eAAAnU,EAAAmU,EAAA,kBAAA,kBAAA,IACA,eAAAnU,EAAAmU,EAAA,kBAAA,kBAAA,IACA,MAQA,OANAzM,MAAAwN,gBACAhZ,EAAAvD,EACA,mBACA,oBAAA+O,KAAA2N,yBAAA,gBAGAnZ,GAGA5C,EAAAJ,QAAAga,Ib8oFGqC,cAAc,EAAEC,aAAa,KAAKoC,IAAI,SAAShf,EAAQU,EAAOJ,Gc3qFjE,GAAAK,GAAAX,EAAA,eACAyd,EAAAzd,EAAA,aAEA2a,EAAA,SAAAS,EAAAC,EAAAvV,GACA2X,EAAAld,KAAAuO,KAAAsM,EAAAC,EAAAvV,GAEA6U,GAAAzX,UAAAgP,OAAAC,OAAAsL,EAAAva,WACAyX,EAAAzX,UAAAkP,YAAAuI,EACAA,EAAAzX,UAAAwa,cAAA,WACA,GAAAuB,GAAAnQ,KAAAwN,gBAAA,QAAAxN,KAAAuM,WACA/X,EAAA,GAAA3C,EA0DA,OAzDA2C,GAAAvD,EACA,8BACA,sBACA,kBACA,0BACA,6BAAAkf,EAAA,GAAA,MAAA,KAAAnQ,KAAAwP,sBAAA,MACA,IACA,0BACA,8CACA,+BACA,IACA,mBACA,mBACA,mBACA,gDACA,mBACA,mBACA,+BACA,gCACA,cACA,cACA,qBACA,qBACA,gCACA,yDACA,wDACA,uBACA,MACA,KACA,kBACA,+BACA,gCACA,uBACA,uBACA,gBACA,gBACA,qBACA,qBACA,gCACA,yDACA,wDACA,uBACA,gCACA,yDACA,wDACA,uBACA,MACA,KACA,KAEAW,GACA3b,EAAAvD,EACA,4EACA,4EACA,sDAGAuD,GAEAqX,EAAAzX,UAAAya,gBAAA,SAAAvW,EAAAmU,GACA,GAAA0D,GAAAnQ,KAAAwN,gBAAA,QAAAxN,KAAAuM,WACA/X,EAAA,GAAA3C,EAqCA,OApCA2C,GAAAvD,EACA,8BACA,8BACAkf,EACA,8CACA,wEAGAnQ,KAAA8O,sBACAta,EAAAvD,EACA,uBACA,yBACAkf,EACA,wEACA,kGAEAA,EACA,wEACA,kGAEA,OACA,sCACA,sCACA,uCAEA7X,GACA9D,EAAAvD,EACA+O,KAAAwN,gBAAA,QAAAxN,KAAAuM,WAEA,wBADA,kCAGA,0CACA,0CACA,2CAGA/X,GAGA5C,EAAAJ,QAAAqa,Id8qFGgC,cAAc,EAAEkB,YAAY,KAAKqB,IAAI,SAASlf,EAAQU,EAAOJ,Ge9xFhE,GAAAK,GAAAX,EAAA,eACAmb,EAAAnb,EAAA,cAEAua,EAAA,SAAAa,EAAAC,GACAF,EAAA5a,KAAAuO,KAAAsM,EAAAC,GAEAd,GAAArX,UAAAgP,OAAAC,OAAAgJ,EAAAjY,WACAqX,EAAArX,UAAAkP,YAAAmI,EACAA,EAAArX,UAAAoY,YAAA,SAAAlU,EAAAmU,GACA,GAAAjY,GAAA,GAAA3C,GACA,mBACA,kCACA,kDAAAyG,EAAA,kBAAA,IACA,mDAAAA,EAAAmU,kBAAA,IACA,mDAAAnU,EAAAmU,EAAA,kBAAA,kBAAA,IACA,mDAAAnU,EAAAmU,EAAA,kBAAA,kBAAA,IACA,MAQA,OANAzM,MAAAwN,gBACAhZ,EAAAvD,EACA,mBACA,oBAAA+O,KAAA2N,yBAAA,cAGAnZ,GAGA5C,EAAAJ,QAAAia,IfiyFGoC,cAAc,EAAEC,aAAa,KAAKuC,IAAI,SAASnf,EAAQU,EAAOJ,GgB5zFjE,GAAAK,GAAAX,EAAA,cACAY,EAAAZ,EAAA,kBAEAc,EAAA,SAAAiD,EAAAD,EAAAsb,EAAAre,GACA+N,KAAA/K,QAAAA,EACA+K,KAAAhL,QAAAA,EACAgL,KAAAsQ,WAAAA,EAAAC,MAAA,IACAvQ,KAAAwQ,OAAAxQ,KAAAsQ,WAAA/c,IAAA,SAAA+E,GACA,MAAArG,GAAA+C,EAAA,IAAAsD,KAEA0H,KAAAyQ,OAAAzQ,KAAAsQ,WAAA/c,IAAA,SAAA+E,GACA,MAAArG,GAAA+C,EAAA,IAAAsD,EAAA,YAEA0H,KAAA0Q,cAAA,EACA1Q,KAAA2Q,YAAA,EACA3Q,KAAA4Q,cAAA,EACA5Q,KAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,GACA,GAAA0f,GAAA,YAAA5e,EAAA+C,EAAA,IAAAsD,EAAA,SACAuY,KACA7Q,KAAA0Q,cAAA,EACA1Q,KAAA4Q,eAAAzf,EACA6O,KAAA4Q,iBAEA5Q,KAAA4Q,cAAA,EACA5Q,KAAA2Q,YAAA,KAGA3Q,MACA,GAAAA,KAAA4Q,gBACA5Q,KAAA2Q,YAAA,EACA3Q,KAAA4Q,cAAA,GAGA5e,GAAAoC,UAAA0c,kBAAA,SAAArd,GACA,OAAA,GAAAA,EAAA,EAAAA,EAAA,GAAA,IAAA,KAAAA,EAAAlB,QAAA,IAEAP,EAAAoC,UAAA2c,SAAA,SAAAzY,GACA,MAAA0H,MAAA/K,QAAAqD,EAAAnF,eAGAnB,EAAAoC,UAAA+B,wBAAA,WACA,GAAA6J,KAAA0Q,aACA,MAAA,IAAA7e,EACA,IAAAmO,KAAA2Q,WAAA,CACA,GAAAnc,GAAA,GAAA3C,EAOA,OANAmO,MAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,GACA,YAAA6O,KAAAyQ,OAAAtf,IACAqD,EAAAvD,EACA,iBAAA+O,KAAA+Q,SAAAzY,GAAA,MAEA0H,MACAxL,EAEA,MAAA,IAAA3C,GACA,cAAAmO,KAAA4Q,cAAA,IAAA5Q,KAAA/K,QAAA,MAIAjD,EAAAoC,UAAAiC,aAAA,WAEA,QAAA2a,GAAA1Y,EAAAnH,GACA,MAAA,YAAA6O,KAAAyQ,OAAAtf,GACA6O,KAAA8Q,kBAAA9Q,KAAAwQ,OAAArf,IAEA6O,KAAA+Q,SAAAzY,GALA,GAAA2Y,GAAA,MAAAjR,KAAAwQ,OAAA9e,OAQAwf,EAAAlR,KAAAsQ,WAAA/c,IAAAyd,EAAAhR,KACA,IAAAA,KAAA0Q,aAAA,CACA,GAAAS,GAAAD,EAAA3X,MAAA,SAAA6X,GACA,MAAAA,IAAAF,EAAA,IAEA,OAAAC,GACAF,EAAA,IAAAC,EAAA,GAAA,IAEAD,EAAA,IAAAC,EAAArY,KAAA,KAAA,IAEA,IAAAmH,KAAA2Q,WAAA,CAEA,GADAO,EAAAA,EAAA9d,MAAA4M,KAAA4Q,eACA,GAAAM,EAAAxf,OACA,MAAAsO,MAAA/K,OAEAic,GAAAnQ,QAAAf,KAAA/K,SAEA,MAAAgc,GAAA,IAAAC,EAAArY,KAAA,KAAA,KAEA7G,EAAAoC,UAAAyF,oBAAA,SAAAnC,EAAAyB,GACA,QAAAkY,GAAAvgB,GACA,MAAAA,GAAAoC,OAAA,GAAAC,cAAArC,EAAAsC,MAAA,GAGA,QAAAke,KACA,GAAA9c,GAAA,GAAA3C,EAWA,OAVAmO,MAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,GACA,GAAA,UAAA6O,KAAAyQ,OAAAtf,GAAA,CACA,GAAAqG,GAAA,GAAA1F,GAAAgG,eAAAkI,KAAAhL,QAAA,IAAAsD,EACAd,GAAAO,QACAC,IAAA,+DACAC,KAAAG,EAAA,OACA5D,EAAAvD,EACAuG,EAAAC,MAAAnD,MAAAkD,EAAAE,MAEAsI,MACAxL,EAEA,QAAA+c,KACA,GAAA/Z,GAAA,GAAA1F,GAAAmH,uBAAA,SAAA+G,KAAAhL,QAAA,MAIA,OAHAwC,GAAAO,QACAC,IAAA,+DACAC,KAAAG,EAAA,OACA,GAAAvG,GACA2F,EAAAC,MAAAnD,MAAAkD,EAAAE,IA6BA,QAAA8Z,GAAAlZ,EAAAnH,GACA,MAAA,UAAA6O,KAAAyQ,OAAAtf,GACA,uCAAA6O,KAAAhL,QAAA,IAAAsD,EAAA,YACA,cAAA0H,KAAAyQ,OAAAtf,IAAA,cAAA6O,KAAAyQ,OAAAtf,GACA6O,KAAA+Q,SAAAzY,GADA,OArDA,GAAAF,GAAA,SAAAiZ,EAAArR,KAAA/K,QAwBA,IAAA+K,KAAA0Q,aACA,MAAA,IAAA7e,EAEA,IAAA2C,GAAA,GAAA3C,GACA4f,EAAAH,EAAA7f,KAAAuO,MACA0R,EAAAH,EAAA9f,KAAAuO,KACAA,MAAA2Q,WACA3Q,KAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,GACA,YAAA6O,KAAAyQ,OAAAtf,IACAqD,EAAAvD,EACA,OAAA+O,KAAA+Q,SAAAzY,GAAA,sCAAA0H,KAAA+Q,SAAAzY,GAAA,QAEA0H,MAEAxL,EAAAvD,EACA,OAAA+O,KAAA/K,QAAA,sCAAA+K,KAAA/K,QAAA,OAGA+K,KAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,IACA,cAAA6O,KAAAyQ,OAAAtf,IAAA,cAAA6O,KAAAyQ,OAAAtf,KACAqD,EAAAvD,EACA,OAAA+O,KAAA+Q,SAAAzY,GAAA,IAAA0H,KAAA8Q,kBAAA9Q,KAAAwQ,OAAArf,IAAA,MAGA6O,KACA,IAAA2R,GAAA,GAAA9f,EAqDA,OA7CAmO,MAAA2Q,WACA3Q,KAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,GACA,YAAA6O,KAAAyQ,OAAAtf,IACAwgB,EAAA1gB,EACA,gBAAA+O,KAAA+Q,SAAAzY,GAAA,OAAAkZ,EAAA/f,KAAAuO,KAAA1H,EAAAnH,GAAA,OAEA6O,OAEA2R,EAAA1gB,EACA,aAAA+O,KAAA4Q,cAAA,KAAA5Q,KAAA/K,QAAA,OAEA+K,KAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,GACA,YAAA6O,KAAAyQ,OAAAtf,IACAwgB,EAAAhhB,EACA,IACA,IAAA6gB,EAAA/f,KAAAuO,KAAA1H,EAAAnH,KAEA6O,MACA2R,EAAA1gB,EACA,OAGAuD,EAAAvD,EACA0gB,EAAAxa,KACA,YAAAiB,EAAA,OACA,KAEAA,EAAA,MACAqZ,EAAAxR,KAAAvO,QAAAggB,EAAAzR,KAAAvO,OAAA+f,EAAAC,GAEAvY,GACA6G,KAAAsQ,WAAAzb,QAAA,SAAAyD,EAAAnH,IACA,cAAA6O,KAAAyQ,OAAAtf,IAAA,cAAA6O,KAAAyQ,OAAAtf,KACAgI,EAAApB,QACAqB,MACA4G,KAAAyQ,OAAAtf,GAEA6O,KAAA+Q,SAAAzY,GAAA,mDACA0H,KAAA+Q,SAAAzY,GAAA,yDAEAN,IAAA,gBAAAgI,KAAAhL,QAAA,IAAAsD,EAAA,kBAAA0H,KAAA+Q,SAAAzY,GAAA,MACAL,KAAAG,EAAA,QAEA4H,MAEAxL,GAGA5C,EAAAJ,QAAAQ,IhB+zFGsJ,aAAa,EAAEC,iBAAiB,SAAS","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\nvar shapes=require('./shapes.js');\r\nvar Uniform=require('./uniform.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction glslColorValue(prefix) {\r\n\t\tvar r=floatOptionValue(prefix+'.r');\r\n\t\tvar g=floatOptionValue(prefix+'.g');\r\n\t\tvar b=floatOptionValue(prefix+'.b');\r\n\t\tvar a=floatOptionValue(prefix+'.a');\r\n\t\tif (r==a && g==a && b==a) {\r\n\t\t\treturn a; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn r+\",\"+g+\",\"+b+\",\"+a;\r\n\t\t}\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\r\n\tfunction makeShape() {\r\n\t\tvar className=options.shape.charAt(0).toUpperCase()+options.shape.slice(1);\r\n\t\tvar shapeParams=options.getInputOptionsFor('shape').map(function(option){\r\n\t\t\tif (options[option.name+'.input']=='constant') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: intOptionValue(option.name),\r\n\t\t\t\t\tchanges: false,\r\n\t\t\t\t\tmin: intOptionValue(option.name),\r\n\t\t\t\t\tmax: intOptionValue(option.name)\r\n\t\t\t\t};\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: intOptionValue(option.name),\r\n\t\t\t\t\tchanges: true,\r\n\t\t\t\t\tmin: option.getMin(),\r\n\t\t\t\t\tmax: option.getMax()\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t});\r\n\t\tvar shapeCtorArgs=[null,parseInt(options.elements),options.shader].concat(shapeParams);\r\n\t\treturn new (Function.prototype.bind.apply(shapes[className],shapeCtorArgs));\r\n\t}\r\n\tvar shape=makeShape();\r\n\tif (options.shader=='light') {\r\n\t\tvar lightDirectionUniform=new Uniform('lightDirection','shader.light.direction','xyz',options);\r\n\t}\r\n\r\n\tfunction generateHtmlStyleLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tif (options.hasSliderInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"label {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 15em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".min {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".max {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: left;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<style>\",\r\n\t\t\t\"</style>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\tshape.dim==2 &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar needAspectUniform=options.hasInputsFor('canvas');\r\n\t\tvar needAspectConstant=!needAspectUniform && options['canvas.width']!=options['canvas.height'];\r\n\t\tvar needTransformedPosition=options.shader=='light' && options.projection=='perspective';\r\n\r\n\t\tfunction generateMain() {\r\n\t\t\tvar lines=new Lines();\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needAspectConstant) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float aspect=\"+intOptionValue('canvas.width')+\".0/\"+intOptionValue('canvas.height')+\".0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float fovy=45.0;\",\r\n\t\t\t\t\t\"float near=1.0/tan(radians(fovy)/2.0);\",\r\n\t\t\t\t\t\"float far=near+2.0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"vec4 transformedPosition=\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (use2dTransform) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"vec4(position*mat2(\",\r\n\t\t\t\t\t\"\tcz, -sz,\",\r\n\t\t\t\t\t\"\tsz,  cz\",\r\n\t\t\t\t\t\"),0,1)\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"position\"\r\n\t\t\t\t);\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4( // move center of coords inside view\",\r\n\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, -(near+far)/2.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=transformedPosition\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0/aspect,1.0,-1.0,1.0)\" // correct aspect ratio and make coords right-handed\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (shape.dim>2) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0,1.0,-1.0,1.0)\" // make coords right-handed for 3d shapes\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear/aspect, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlines.t(\r\n\t\t\t\t\";\"\r\n\t\t\t);\r\n\t\t\tif (options.shader=='light') {\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedView=-vec3(transformedPosition);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (shape.dim>2) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=normal\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=vec3(0.0,0.0,1.0)\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"interpolatedColor=color;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\r\n\t\tvar lines=new Lines();\r\n\t\tif (needAspectUniform) {\r\n\t\t\tlines.a(\"uniform float aspect;\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.a(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.a(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.a(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='light') {\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\"varying vec3 interpolatedView;\");\r\n\t\t\t}\r\n\t\t\tif (shape.dim>2) {\r\n\t\t\t\tlines.a(\"attribute vec3 normal;\");\r\n\t\t\t}\r\n\t\t\tlines.a(\"varying vec3 interpolatedNormal;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"void main() {\",\r\n\t\t\tgenerateMain().indent(),\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"precision mediump float;\"\r\n\t\t);\r\n\t\tif (options.shader=='single') {\r\n\t\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\t\"void main() {\",\r\n\t\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"void main() {\",\r\n\t\t\t\t\t\"\tgl_FragColor=vec4(\"+glslColorValue('shader.single.color')+\");\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else if (options.shader=='light') {\r\n\t\t\tlines.a(\r\n\t\t\t\tlightDirectionUniform.getGlslDeclarationLines()\r\n\t\t\t);\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"varying vec3 interpolatedView;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec3 interpolatedNormal;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tvec3 ambientColor=vec3(0.2,0.2,0.2);\",\r\n\t\t\t\t\"\tvec3 diffuseColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tvec3 specularColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tfloat shininess=100.0;\"\r\n\t\t\t);\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=vec3( 0.0, 0.0,+1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=normalize(interpolatedView);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 N=normalize(interpolatedNormal);\"\r\n\t\t\t);\r\n\t\t\tif (shape.twoSided) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (!gl_FrontFacing) N=-N;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 L=normalize(\"+lightDirectionUniform.getGlslValue()+\");\",\r\n\t\t\t\t\"\tvec3 H=normalize(L+V);\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\",\r\n\t\t\t\t\"\t\tambientColor\",\r\n\t\t\t\t\"\t\t+diffuseColor*max(0.0,dot(L,N))\",\r\n\t\t\t\t\"\t\t+specularColor*pow(max(0.0,dot(H,N)),shininess)\",\r\n\t\t\t\t\"\t,1.0);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateHtmlControlMessageLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<ul>\",\r\n\t\t\t\"</ul>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateHtmlInputLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\"\r\n\t\t\t\t);\r\n\t\t\t\tif (option.name!='shape.lodShape.lod') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (option.getStep()==1) {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel(shape.lod.min)+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+shape.lod.min+\"' max='\"+shape.lod.max+\"' value='\"+shape.lod.value+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel(shape.lod.max)+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsMakeProgramLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"gl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"gl.compileShader(vertexShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"gl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"gl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=gl.createProgram();\",\r\n\t\t\t\"gl.attachShader(program,vertexShader);\",\r\n\t\t\t\"gl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"gl.linkProgram(program);\",\r\n\t\t\t\"return program;\"\r\n\t\t);\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction generateJsInitLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var canvas=document.getElementById('myCanvas');\",\r\n\t\t\t\"var gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\"\r\n\t\t);\r\n\t\tif (options['elements']=='32') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.getExtension('OES_element_index_uint');\" // TODO check if null is returned and don't allow more elements\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.background=='solid' && !options.hasInputsFor('background.solid.color') && !(\r\n\t\t\t// default clear color in OpenGL\r\n\t\t\toptions['background.solid.color.r']==0 &&\r\n\t\t\toptions['background.solid.color.g']==0 &&\r\n\t\t\toptions['background.solid.color.b']==0 &&\r\n\t\t\toptions['background.solid.color.a']==0\r\n\t\t)) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.clearColor(\"+colorValue('background.solid.color')+\");\"\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (shape.dim>2) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.enable(gl.DEPTH_TEST);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=makeProgram(\",\r\n\t\t\t\"\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\t\"\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.useProgram(program);\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsInputHandlerLines() {\r\n\t\tvar writeListenerArgs=[!options.isAnimated(),options.debugInputs];\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction canvasUpdater() {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function updateAspect() {\",\r\n\t\t\t\t\"\tgl.viewport(0,0,canvas.width,canvas.height);\",\r\n\t\t\t\t\"\tgl.uniform1f(aspectLoc,canvas.width/canvas.height);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateAspect();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction canvasListener(wh) {\r\n\t\t\tvar optName='canvas.'+wh;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"canvas.\"+wh+\"=parseInt(this.value);\")\r\n\t\t\t\t\t.post(\"updateAspect();\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[name+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\t\tvarName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('canvas')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var aspectLoc=gl.getUniformLocation(program,'aspect');\"\r\n\t\t\t);\r\n\t\t\tcanvasUpdater();\r\n\t\t\tcanvasListener('width');\r\n\t\t\tcanvasListener('height');\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='light') {\r\n\t\t\tlines.a(\r\n\t\t\t\tlightDirectionUniform.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener)\r\n\t\t\t);\r\n\t\t}\r\n\t\toptions.getInputsFor('shape').forEach(function(option){\r\n\t\t\tfunction varName(prefix) {\r\n\t\t\t\tvar i=option.name.lastIndexOf('.');\r\n\t\t\t\tvar s=option.name.substring(i+1);\r\n\t\t\t\tvar S=s.charAt(0).toUpperCase()+s.slice(1);\r\n\t\t\t\tif (prefix!==undefined) {\r\n\t\t\t\t\treturn prefix+'Shape'+S;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 'shape'+S;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[option.name+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(option.name);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"storeShape(parseInt(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(option.name)) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions[option.name+'.input'],\r\n\t\t\t\t\t\t\"var \"+varName('new')+\"=Math.floor(\"+varName('min')+\"+(\"+varName('max')+\"-\"+varName('min')+\"+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\t\t\t\"var \"+varName('new')+\"=Math.floor(\"+varName('min')+\"+(\"+varName('max')+\"-\"+varName('min')+\"+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.cond(varName('new')+\"!=\"+varName())\r\n\t\t\t\t\t.log(\"console.log('\"+option.name+\" input value:',\"+varName('new')+\");\")\r\n\t\t\t\t\t.post(\"storeShape(\"+varName('new')+\");\");\r\n\t\t\t}\r\n\t\t});\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\" // have to initialize the uniform even if default value is zero because the browser may keep prev value of slider on page reload\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions[optName+'.speed.input'],\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=new Lines;\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tif (options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=new Lines;\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\tinnerTransformsLines,\r\n\t\t\t\tshape.writeDraw()\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=new Lines;\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// wrap inner render lines in function if needed\r\n\t\tif (options.isAnimated()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function renderFrame(time) {\",\r\n\t\t\t\tinnerLines.indent()\r\n\t\t\t);\r\n\t\t\tif (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\trequestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"requestAnimationFrame(renderFrame);\"\r\n\t\t\t);\r\n\t\t} else if (options.hasInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var frameId=null;\",\r\n\t\t\t\t\"function renderFrame() {\",\r\n\t\t\t\tinnerLines.indent(),\r\n\t\t\t\t\"\tframeId=null;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"function scheduleFrame() {\",\r\n\t\t\t\t\"\tif (frameId===null) {\",\r\n\t\t\t\t\"\t\tframeId=requestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"scheduleFrame();\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\tvar scriptLines=new Lines;\r\n\tscriptLines.interleave(\r\n\t\tgenerateJsMakeProgramLines(),\r\n\t\tgenerateJsInitLines(),\r\n\t\tshape.writeInit(options.debugArrays),\r\n\t\tgenerateJsInputHandlerLines(),\r\n\t\tgenerateJsRenderLines()\r\n\t).wrap(\r\n\t\t\"<script>\",\r\n\t\t\"</script>\"\r\n\t);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t\tgenerateHtmlStyleLines(),\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t\tgenerateVertexShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\tgenerateFragmentShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='\"+intOptionValue('canvas.width')+\"' height='\"+intOptionValue('canvas.height')+\"'></canvas>\",\r\n\t\t\"</div>\",\r\n\t\tgenerateHtmlControlMessageLines(),\r\n\t\tgenerateHtmlInputLines(),\r\n\t\tscriptLines,\r\n\t\t\"</body>\",\r\n\t\t\"</html>\"\r\n\t);\r\n\treturn lines.join(\r\n\t\toptions.indent=='tab' ? '\\t' : Array(parseInt(options.indent)+1).join(' ')\r\n\t);\r\n};\r\n",null,"module.exports=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\t\t'message.elements': \"choosing 8- or 16-bit index may limit available shape detail levels\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shader.face': 'One color per face',\r\n\t\t'options.shader.light': 'Directional light',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'Cube',\r\n\t\t'options.shape.hat': 'Mexican hat function', // wp: Mexican hat wavelet\r\n\t\t'options.shape.terrain': 'Diamond-square fractal terrain', // wp: Diamond-square algorithm\r\n\t\t'options.elements': 'Element array',\r\n\t\t'options.elements.0': 'not used',\r\n\t\t'options.elements.8': 'with 8-bit index',\r\n\t\t'options.elements.16': 'with 16-bit index',\r\n\t\t'options.elements.32': 'with 32-bit index',\r\n\t\t'options.projection': 'Projection',\r\n\t\t'options.projection.ortho': 'Orthogonal',\r\n\t\t'options.projection.perspective': 'Perspective',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.canvas.width': 'Canvas width',\r\n\t\t'options.canvas.height': 'Canvas height',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shader.light.direction.x': 'Light direction x component',\r\n\t\t'options.shader.light.direction.y': 'Light direction y component',\r\n\t\t'options.shader.light.direction.z': 'Light direction z component',\r\n\t\t'options.shape.lodShape.lod': 'Shape detail level', // recursion depth for fractal shapes\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShaders': 'Log shader compilation errors',\r\n\t\t'options.debugArrays': 'Log allocated array sizes',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'options.formatting': 'Code formatting options',\r\n\t\t'options.indent': 'Indent',\r\n\t\t'options.indent.tab': 'Tab',\r\n\t\t'options.indent.2': '2 spaces',\r\n\t\t'options.indent.4': '4 spaces',\r\n\t\t'options.indent.8': '8 spaces',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n","/*\r\n.a = add AFTER last line\r\n.t = add TO last line\r\n*/\r\n\r\nvar Lines=function(){\r\n\tthis.data=[];\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n};\r\n\r\n// private\r\nLines.prototype.flattenArgs=function(s){\r\n\tvar r=[];\r\n\tfor (var i=0;i<s.length;i++) {\r\n\t\tif (typeof s[i] == 'string') {\r\n\t\t\tr.push(s[i]);\r\n\t\t} else if (Array.isArray(s[i])) {\r\n\t\t\tArray.prototype.push.apply(r,s[i]);\r\n\t\t} else if (s[i] instanceof Lines) {\r\n\t\t\tArray.prototype.push.apply(r,s[i].data);\r\n\t\t}\r\n\t}\r\n\treturn r;\r\n};\r\nLines.prototype.addFlattenedArgs=function(s){\r\n\tArray.prototype.push.apply(this.data,s);\r\n};\r\n\r\n// public\r\nLines.prototype.a=function(){\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n\treturn this;\r\n};\r\nLines.prototype.t=function(){\r\n\tvar lastLine=this.data.pop();\r\n\tvar s=this.flattenArgs(arguments);\r\n\ts[0]=lastLine+s[0];\r\n\tthis.addFlattenedArgs(s);\r\n\treturn this;\r\n};\r\nLines.prototype.indent=function(level){\r\n\tif (level===undefined) {\r\n\t\tlevel=1;\r\n\t}\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn Array(level+1).join('\\t')+line;\r\n\t});\r\n\treturn this;\r\n};\r\nLines.prototype.isEmpty=function(){\r\n\treturn this.data.length<=0;\r\n};\r\nLines.prototype.interleave=function(){\r\n\tvar first=true;\r\n\tfor (var i=0;i<arguments.length;i++) {\r\n\t\tvar r=this.flattenArgs([arguments[i]]);\r\n\t\tif (r.length>0) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst=false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.data.push('');\r\n\t\t\t}\r\n\t\t\tthis.addFlattenedArgs(r);\r\n\t\t}\r\n\t}\r\n\treturn this;\r\n};\r\nLines.prototype.wrap=function(begin,end){\r\n\tthis.indent();\r\n\tthis.data.unshift(begin);\r\n\tthis.data.push(end);\r\n\treturn this;\r\n};\r\nLines.prototype.wrapIfNotEmpty=function(begin,end){\r\n\tif (!this.isEmpty()) {\r\n\t\tthis.wrap(begin,end);\r\n\t}\r\n\treturn this;\r\n};\r\n/*\r\nLines.prototype.wrapEachLine=function(begin,end){\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn begin+line+end;\r\n\t});\r\n\treturn this;\r\n};\r\n*/\r\nLines.prototype.join=function(indent){\r\n\treturn this.data.map(function(line){\r\n\t\treturn line.replace(/^(\\t)+/,function(match){\r\n\t\t\treturn Array(match.length+1).join(indent);\r\n\t\t});\r\n\t}).join('\\n');\r\n};\r\n\r\nmodule.exports=Lines;\r\n","var Lines=require('./lines.js');\r\n\r\nvar Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tvar outerLines=new Lines;\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push('\\t'+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn new Lines(lines);\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines.a(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"scheduleFrame();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (!innerLines.isEmpty()) {\r\n\t\tinnerLines=new Lines(\r\n\t\t\tthis.innerPrependedLines(),\r\n\t\t\tinnerLines\r\n\t\t);\r\n\t}\r\n\tif (innerLines.data.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines.data[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.a(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\tnew Lines(\r\n\t\t\t\t\t\tbr[0]+match[1]+br[1]\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t// TODO what if no match?\r\n\t}\r\n\tif (innerLines.data.length) {\r\n\t\treturn outerLines.a(\r\n\t\t\tthis.wrapCall(\r\n\t\t\t\tinnerLines.wrap(\r\n\t\t\t\t\tbr[0]+\"function(\"+this.bracketFnArg()+\"){\",\r\n\t\t\t\t\t\"}\"+br[1]\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn lines.wrap(\r\n\t\t\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\",\r\n\t\t\"});\"\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar i18n=require('./i18n.js');\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar $container=$(this);\r\n\t\tvar $options;\r\n\t\tvar $code;\r\n\t\tvar options=new Options();\r\n\t\tvar codeUpdateTimeoutId=null;\r\n\t\tvar codeUpdateDelay=200;\r\n\r\n\t\tfunction showHideSuboptionInputs(option,optionValue) {\r\n\t\t\t$options.find(\"[data-option^='\"+option.getSuboptionScopePrefix()+\"']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+option.getSuboptionHitPrefix(optionValue)+\"']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tclearTimeout(codeUpdateTimeoutId);\r\n\t\t\tcodeUpdateTimeoutId=setTimeout(function(){\r\n\t\t\t\t$code.text(generateCode(options.fix(),i18n));\r\n\t\t\t\tif (window.hljs) hljs.highlightBlock($code[0]);\r\n\t\t\t},codeUpdateDelay);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar $option=$(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tif (option.name=='elements') {\r\n\t\t\t\t$option.append(\" \"+i18n('message.elements'));\r\n\t\t\t}\r\n\t\t\treturn $option;\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar sliderInput,numberInput;\r\n\t\t\tfunction inputListener(that) {\r\n\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\tthat.val(this.value);\r\n\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\tupdateCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tsliderInput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,numberInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tnumberInput=$(\"<input type='number' required>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,sliderInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tsliderInput.val(option.defaultValue).change();\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction makeSortable($sortableRoot,callback) {\r\n\t\t\t// have to make drag handler 'draggable', not the whole item\r\n\t\t\t// because inputs and labels don't like to be inside 'draggable'\r\n\t\t\t// http://stackoverflow.com/questions/13017177/selection-disabled-while-using-html5-drag-and-drop\r\n\t\t\tvar $dragged=null;\r\n\t\t\t$sortableRoot.children().prepend(\r\n\t\t\t\t$(\"<div draggable='true' tabindex='0' title='Drag or press up/down while in focus to reorder transforms'>\").on('dragstart',function(ev){\r\n\t\t\t\t\t$dragged=$(this).parent();\r\n\t\t\t\t\tev.originalEvent.dataTransfer.effectAllowed='move';\r\n\t\t\t\t\tev.originalEvent.dataTransfer.setData('Text',name);\r\n\t\t\t\t\tif (ev.originalEvent.dataTransfer.setDragImage) { // doesn't work in IE\r\n\t\t\t\t\t\tev.originalEvent.dataTransfer.setDragImage($dragged[0],0,0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$dragged.addClass('ghost');\r\n\t\t\t\t\t},0);\r\n\t\t\t\t})\r\n\t\t\t\t.keydown(function(ev){\r\n\t\t\t\t\tvar $handle=$(this);\r\n\t\t\t\t\tvar $sorted=$handle.parent();\r\n\t\t\t\t\tif (ev.keyCode==38) {\r\n\t\t\t\t\t\t$sorted.prev().before($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (ev.keyCode==40) {\r\n\t\t\t\t\t\t$sorted.next().after($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t).on('dragover',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.originalEvent.dataTransfer.dropEffect='move';\r\n\t\t\t\tvar $target=$(this);\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\tif ($target.nextAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.before($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t} else if ($target.prevAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.after($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).on('drop',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}).on('dragend',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\t$dragged.removeClass('ghost');\r\n\t\t\t\t\t$dragged=null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\tvar $transforms;\r\n\t\t\tvar $options=$(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\t$transforms=$(\"<div>\").append(\r\n\t\t\t\t\t\toptions.transforms.map(function(transform){\r\n\t\t\t\t\t\t\treturn $(\"<div class='transform' data-transform='\"+transform.name+\"'>\").append(\r\n\t\t\t\t\t\t\t\ttransform.options.map(writeInputOption)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.formatting')+\"</legend>\").append(\r\n\t\t\t\t\toptions.formattingOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tmakeSortable($transforms,function(){\r\n\t\t\t\toptions.transformOrder=$transforms.children().map(function(){\r\n\t\t\t\t\treturn $(this).attr('data-transform');\r\n\t\t\t\t}).get();\r\n\t\t\t\tupdateCode();\r\n\t\t\t});\r\n\t\t\treturn $options;\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri($code.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri($code.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t$container.empty().append($options=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\t$container.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append($code=$(\"<code>\").text(generateCode(options.fix(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock($code[0]);\r\n\t\t} else {\r\n\t\t\t$container.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\t$container.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.getSuboptionScopePrefix=function(){\r\n\treturn this.name+'.';\r\n}\r\nOption.prototype.getSuboptionHitPrefix=function(value){\r\n\tif (this.name=='shape' && ['gasket','hat','terrain'].indexOf(value)>=0) {\r\n\t\tvalue='lodShape';\r\n\t}\r\n\treturn this.getSuboptionScopePrefix()+value+'.';\r\n}\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(\r\n\t\tthis.getSuboptionScopePrefix()\r\n\t) && !optionStartsWith(\r\n\t\tthis.getSuboptionHitPrefix(value)\r\n\t);\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getMinLabel=function(value){\r\n\tif (value===undefined) value=this.getMin();\r\n\treturn value.toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(value){\r\n\tif (value===undefined) value=this.getMax();\r\n\treturn value.toString().replace('-','−');\r\n};\r\n\r\nvar FloatInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nFloatInputOption.prototype=Object.create(InputOption.prototype);\r\nFloatInputOption.prototype.constructor=FloatInputOption;\r\nFloatInputOption.prototype.getStep=function(){\r\n\treturn 'any';\r\n};\r\nFloatInputOption.prototype.getSetupStep=function(){\r\n\tif (this.getMax()>=100) {\r\n\t\treturn '0.1';\r\n\t} else if (this.getMax()>=10) {\r\n\t\treturn '0.01';\r\n\t} else {\r\n\t\treturn '0.001';\r\n\t}\r\n};\r\n\r\nvar IntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nIntInputOption.prototype=Object.create(InputOption.prototype);\r\nIntInputOption.prototype.constructor=IntInputOption;\r\nIntInputOption.prototype.getStep=function(){\r\n\treturn 1;\r\n};\r\nIntInputOption.prototype.getSetupStep=function(){\r\n\treturn 1;\r\n};\r\n\r\nvar CanvasIntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tIntInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nCanvasIntInputOption.prototype=Object.create(IntInputOption.prototype);\r\nCanvasIntInputOption.prototype.constructor=CanvasIntInputOption;\r\nCanvasIntInputOption.prototype.availableInputTypes=['constant','slider']; // can't change canvas size by moving mouse over canvas\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar OptionsBlueprint=function(){\r\n\tthis.reset();\r\n};\r\nOptionsBlueprint.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex','face','light']),\r\n\tnew Option('shape',['square','triangle','gasket','cube','hat','terrain']),\r\n\tnew Option('elements',['0','8','16','32']),\r\n\tnew Option('projection',['ortho','perspective']),\r\n];\r\nOptionsBlueprint.prototype.inputOptions=[\r\n\tnew CanvasIntInputOption('canvas.width',[1,1024],512),\r\n\tnew CanvasIntInputOption('canvas.height',[1,1024],512),\r\n\tnew FloatInputOption('background.solid.color.r',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.g',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.b',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.r',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.g',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.b',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.light.direction.x',[-4,+4],-1),\r\n\tnew FloatInputOption('shader.light.direction.y',[-4,+4],+1),\r\n\tnew FloatInputOption('shader.light.direction.z',[-4,+4],+1),\r\n\tnew IntInputOption('shape.lodShape.lod',[0,10],6),\r\n];\r\nOptionsBlueprint.prototype.transformOptions=[];\r\nOptionsBlueprint.prototype.transforms=[];\r\n['rotate.x','rotate.y','rotate.z'].forEach(function(name){\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tvar valueOption=new FloatInputOption(name,[-180,180],0);\r\n\tvar speedOption=new FloatInputOption(name+'.speed',[-360,360],0);\r\n\tOptionsBlueprint.prototype.transformOptions.push(valueOption);\r\n\tOptionsBlueprint.prototype.transformOptions.push(speedOption);\r\n\tOptionsBlueprint.prototype.transforms.push({\r\n\t\tname:name,\r\n\t\toptions:[valueOption,speedOption]\r\n\t});\r\n});\r\nOptionsBlueprint.prototype.debugOptions=[\r\n\tnew DebugOption('debugShaders',true),\r\n\tnew DebugOption('debugArrays'),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptionsBlueprint.prototype.formattingOptions=[\r\n\tnew Option('indent',['tab','2','4','8']),\r\n];\r\nOptionsBlueprint.prototype.groupNames=['generalOptions','inputOptions','transformOptions','debugOptions','formattingOptions'];\r\nOptionsBlueprint.prototype.reset=function(){\r\n\tthis.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName].forEach(function(option){\r\n\t\t\tthis[option.name]=option.defaultValue;\r\n\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\tthis[option.name+'.input']='constant';\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=this.transforms.map(function(transform){\r\n\t\treturn transform.name;\r\n\t});\r\n};\r\nOptionsBlueprint.prototype.fix=function(){\r\n\treturn new OptionsInstance(this);\r\n};\r\n\r\nvar OptionsInstance=function(blueprint){\r\n\tblueprint.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName]=[];\r\n\t\tblueprint[groupName].forEach(function(option){\r\n\t\t\tvar isHidden=blueprint.generalOptions.some(function(generalOption){\r\n\t\t\t\treturn generalOption.doesValueHideOption(blueprint[generalOption.name],option);\r\n\t\t\t});\r\n\t\t\tif (!isHidden) {\r\n\t\t\t\tthis[groupName].push(option);\r\n\t\t\t\tthis[option.name]=blueprint[option.name];\r\n\t\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\t\tthis[option.name+'.input']=blueprint[option.name+'.input'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=blueprint.transformOrder;\r\n};\r\nOptionsInstance.prototype.getInputOptionsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.getInputsFor(prefix);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptionsInstance.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasInputsFor=function(prefix){\r\n\treturn this.getInputsFor(prefix).length>0;\r\n};\r\nOptionsInstance.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.getInputOptionsFor(prefix).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptionsInstance.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nmodule.exports=OptionsBlueprint;\r\n","exports.Square=require('./shapes/square.js');\r\nexports.Triangle=require('./shapes/triangle.js');\r\nexports.Gasket=require('./shapes/gasket.js');\r\nexports.Cube=require('./shapes/cube.js');\r\nexports.Hat=require('./shapes/hat.js');\r\nexports.Terrain=require('./shapes/terrain.js');\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Cube=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nCube.prototype=Object.create(Shape.prototype);\r\nCube.prototype.constructor=Cube;\r\nCube.prototype.dim=3;\r\nCube.prototype.twoSided=false;\r\nCube.prototype.writeArrays=function(c,cv){\r\n\tvar nCubeVertices=8;\r\n\tvar cubeVertexPositions=[\r\n\t\t\"-0.5,-0.5,-0.5,\",\r\n\t\t\"+0.5,-0.5,-0.5,\",\r\n\t\t\"-0.5,+0.5,-0.5,\",\r\n\t\t\"+0.5,+0.5,-0.5,\",\r\n\t\t\"-0.5,-0.5,+0.5,\",\r\n\t\t\"+0.5,-0.5,+0.5,\",\r\n\t\t\"-0.5,+0.5,+0.5,\",\r\n\t\t\"+0.5,+0.5,+0.5,\",\r\n\t];\r\n\tvar cubeVertexColors=[\r\n\t\t\" 0.0, 0.0, 0.0,\",\r\n\t\t\" 1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0, 1.0, 0.0,\",\r\n\t\t\" 1.0, 1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0, 1.0,\",\r\n\t\t\" 1.0, 0.0, 1.0,\",\r\n\t\t\" 0.0, 1.0, 1.0,\",\r\n\t\t\" 1.0, 1.0, 1.0,\",\r\n\t];\r\n\tvar nCubeFaces=6;\r\n\tvar cubeFaceNames=[\r\n\t\t\"left\",\r\n\t\t\"right\",\r\n\t\t\"bottom\",\r\n\t\t\"top\",\r\n\t\t\"back\",\r\n\t\t\"front\",\r\n\t];\r\n\tvar cubeFaceNormals=[\r\n\t\t\"-1.0, 0.0, 0.0,\",\r\n\t\t\"+1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0,-1.0, 0.0,\",\r\n\t\t\" 0.0,+1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0,-1.0,\",\r\n\t\t\" 0.0, 0.0,+1.0,\",\r\n\t];\r\n\tvar cubeFaceColors=[\r\n\t\t\" 1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0, 1.0, 0.0,\",\r\n\t\t\" 1.0, 1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0, 1.0,\",\r\n\t\t\" 1.0, 0.0, 1.0,\",\r\n\t\t\" 0.0, 1.0, 1.0,\",\r\n\t];\r\n\tvar cubeFaceVertices=[\r\n\t\t[4, 6, 0, 2],\r\n\t\t[1, 3, 5, 7],\r\n\t\t[0, 1, 4, 5],\r\n\t\t[2, 6, 3, 7],\r\n\t\t[0, 2, 1, 3],\r\n\t\t[5, 7, 4, 6],\r\n\t];\r\n\tvar quadToTriangleMap=[0, 1, 2, 2, 1, 3];\r\n\tvar vertexLines=new Lines;\r\n\tvertexLines.a(\"// x    y    z\");\r\n\tif (this.shaderType=='light') {\r\n\t\tvertexLines.t(\"  n.x  n.y  n.z\");\r\n\t}\r\n\tif (c) {\r\n\t\tvertexLines.t(\"    r    g    b\");\r\n\t}\r\n\tfunction appendVertex(iFace,iVertex,firstInFace) {\r\n\t\tvertexLines.a(cubeVertexPositions[iVertex]);\r\n\t\tif (this.shaderType=='light') {\r\n\t\t\tvertexLines.t(cubeFaceNormals[iFace]);\r\n\t\t}\r\n\t\tif (this.shaderType=='vertex') {\r\n\t\t\tvertexLines.t(cubeVertexColors[iVertex]);\r\n\t\t}\r\n\t\tif (this.shaderType=='face') {\r\n\t\t\tvertexLines.t(cubeFaceColors[iFace]);\r\n\t\t}\r\n\t\tif (firstInFace) {\r\n\t\t\tvertexLines.t(\" // \"+cubeFaceNames[iFace]+\" face\");\r\n\t\t}\r\n\t}\r\n\tif (!this.usesElements()) {\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tquadToTriangleMap.forEach(function(j,k){\r\n\t\t\t\tappendVertex.call(this,i,cubeFaceVertices[i][j],k==0);\r\n\t\t\t},this);\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\t\"var nVertices=36;\",\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t} else if (this.shaderType=='face' || this.shaderType=='light') {\r\n\t\t// elements, face data\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tcubeFaceVertices[i].forEach(function(j,k){\r\n\t\t\t\tappendVertex.call(this,i,j,k==0);\r\n\t\t\t},this);\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\"]);\"\r\n\t\t);\r\n\t} else {\r\n\t\t// elements, no face data\r\n\t\tfor (var i=0;i<nCubeVertices;i++) {\r\n\t\t\tvertexLines.a(cubeVertexPositions[i]);\r\n\t\t\tif (c) {\r\n\t\t\t\tvertexLines.t(cubeVertexColors[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar elementLines=new Lines;\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\telementLines.a(\"\");\r\n\t\t\tquadToTriangleMap.forEach(function(j){\r\n\t\t\t\telementLines.t(cubeFaceVertices[i][j]+\", \");\r\n\t\t\t});\r\n\t\t\telementLines.t(\"// \"+cubeFaceNames[i]+\" face\");\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\telementLines.wrap(\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmodule.exports=Cube;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Gasket=function(elementIndexBits,shaderType,lod){\r\n\tLodShape.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nGasket.prototype=Object.create(LodShape.prototype);\r\nGasket.prototype.constructor=Gasket;\r\nGasket.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"(Math.pow(3,\"+lodSymbol+\"+1)+3)/2\";\r\n};\r\nGasket.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.writeStoreShape=function(c,cv){\r\n\tfunction writePushVertex() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[0];\",\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[1];\"\r\n\t\t);\r\n\t\tif (c) {\r\n\t\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var c=colors[nextIndexIntoColors];\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var c=colors[nextElement%colors.length];\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[0];\",\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[1];\",\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[2];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"return nextElement++;\"\r\n\t\t\t);\r\n\t\t} else if (this.shaderType=='vertex') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"nextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function pushVertex(p) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction writeTriangle() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"if (depth<=0) {\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tif (this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p0));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p1));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p2));\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (es[0]===null) es[0]=pushVertex(p0);\",\r\n\t\t\t\t\t\"\tif (es[1]===null) es[1]=pushVertex(p1);\",\r\n\t\t\t\t\t\"\tif (es[2]===null) es[2]=pushVertex(p2);\",\r\n\t\t\t\t\t\"\tpushElement(es[0]);\",\r\n\t\t\t\t\t\"\tpushElement(es[1]);\",\r\n\t\t\t\t\t\"\tpushElement(es[2]);\",\r\n\t\t\t\t\t\"\treturn es;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"} else {\",\r\n\t\t\t\"\tvar p01=mix(p0,p1);\",\r\n\t\t\t\"\tvar p12=mix(p1,p2);\",\r\n\t\t\t\"\tvar p20=mix(p2,p0);\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\ttriangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else if (this.shaderType=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20,[es[0],null,null]);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01,[es[1],null,es0[1]]);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12,[es[2],es0[2],es1[1]]);\",\r\n\t\t\t\t\"\treturn [es0[0],es1[0],es2[0]];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2,es) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tfunction writeInitialTriangleCall() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"shapeLod,\",\r\n\t\t\t\"[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\"\r\n\t\t);\r\n\t\tif (this.usesElements() && this.shaderType!='face') {\r\n\t\t\tlines.t(\r\n\t\t\t\t\",\",\"[null,null,null]\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"triangle(\",\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var nextIndexIntoVertices=0;\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\tlines.a(\r\n\t\t\t\"var nextIndexIntoElements=0;\",\r\n\t\t\t\"var nextElement=0;\"\r\n\t\t);\r\n\t}\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"// p = position, c = color, e = element, es = elements\",\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nextIndexIntoColors=0;\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"// p = position, e = element, es = elements\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\twritePushVertex.call(this)\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function pushElement(e) {\",\r\n\t\t\t\"\telements[nextIndexIntoElements++]=e;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\t\"function mix(pa,pb) {\",\r\n\t\t\"\treturn [\",\r\n\t\t\"\t\t(pa[0]+pb[0])/2,\",\r\n\t\t\"\t\t(pa[1]+pb[1])/2,\",\r\n\t\t\"\t];\",\r\n\t\t\"}\",\r\n\t\twriteTriangle.call(this),\r\n\t\twriteInitialTriangleCall.call(this)\r\n\t);\r\n\treturn lines;\r\n}\r\n\r\nmodule.exports=Gasket;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Hat=function(elementIndexBits,shaderType,lod){\r\n\tMesh.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nHat.prototype=Object.create(Mesh.prototype);\r\nHat.prototype.constructor=Hat;\r\nHat.prototype.writeMeshInit=function(){\r\n\treturn new Lines(\r\n\t\t\"var xyRange=4;\",\r\n\t\t\"var xyScale=1/(4*Math.sqrt(2));\"\r\n\t);\r\n};\r\nHat.prototype.writeMeshVertex=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var r2=(x*x+y*y)/2;\",\r\n\t\t\"var A=Math.exp(-r2)/Math.PI;\",\r\n\t\t\"var z=A*(1-r2);\",\r\n\t\t\"vertices[vertexOffset+0]=x*xyScale;\",\r\n\t\t\"vertices[vertexOffset+1]=y*xyScale;\",\r\n\t\t\"vertices[vertexOffset+2]=z;\"\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var normal=normalize([(z+A)*x/xyScale,(z+A)*y/xyScale,1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t((!this.usesElements() && this.shaderType!='face')\r\n\t\t\t\t?\"var ic=((i+di)&1)*2+((j+dj)&1);\"\r\n\t\t\t\t:\"var ic=(i&1)*2+(j&1);\"\r\n\t\t\t),\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Hat;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar LodShape=function(elementIndexBits,shaderType,lod){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n\tthis.lod=lod;\r\n\tvar maxLod=this.getMaxPossibleLod();\r\n\tif (this.lod.value>maxLod) this.lod.value=maxLod;\r\n\tif (this.lod.max>maxLod) this.lod.max=maxLod;\r\n};\r\nLodShape.prototype=Object.create(Shape.prototype);\r\nLodShape.prototype.constructor=LodShape;\r\nLodShape.prototype.getMaxPossibleLod=function(){ // due to element index type\r\n\tif (!this.usesElements() || this.elementIndexBits>=31) { // 1<<31 is a negative number, can't compare with it\r\n\t\treturn this.lod.max; // no need to limit lod if elements are not used or index type is large enough\r\n\t}\r\n\tvar nVerticesFn = this.shaderType=='face'\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar indexLimit=1<<this.elementIndexBits;\r\n\tfor (var m=this.lod.max;m>=0;m--) {\r\n\t\tvar n=eval(nVerticesFn(m));\r\n\t\tif (n<=indexLimit) {\r\n\t\t\treturn m;\r\n\t\t}\r\n\t}\r\n\t// TODO fail here\r\n};\r\n// abstract LodShape.prototype.getDistinctVertexCount=function(lodSymbol){}; // # of distinct vertices where one vertex can be shared between different faces and output primitives\r\n// abstract LodShape.prototype.getFaceVertexCount=function(lodSymbol){}; // # of distinct (vertex,face) pairs that still can be shared between output primitives\r\n// abstract LodShape.prototype.getTotalVertexCount=function(lodSymbol){}; // # of vertices in output primitives = # of elements when element arrays are in use\r\n// abstract LodShape.prototype.writeStoreShape=function(c,cv){};\r\nLodShape.prototype.writeArraysAndBufferData=function(debugArrays,c,cv){\r\n\tvar nVerticesFn = this.shaderType=='face'\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar lines=new Lines;\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"var minShapeLod=\"+this.lod.min+\";\",\r\n\t\t\t\"var maxShapeLod=\"+this.lod.max+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+nVerticesFn(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nMaxElements=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nMaxElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices,nElements;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"\tnElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var shapeLod=\"+this.lod.value+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeStoreShape(c,cv).indent(),\r\n\t\tthis.writeBufferData().indent(),\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape(\"+this.lod.value+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape();\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=LodShape;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Mesh=function(elementIndexBits,shaderType,lod){\r\n\tLodShape.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nMesh.prototype=Object.create(LodShape.prototype);\r\nMesh.prototype.constructor=Mesh;\r\nMesh.prototype.dim=3;\r\nMesh.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\")+1,2)\";\r\n};\r\nMesh.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*4\";\r\n};\r\nMesh.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*6\";\r\n};\r\n// abstract Mesh.prototype.writeMeshInit=function(){};\r\n// abstract Mesh.prototype.writeMeshVertex=function(c,cv){};\r\nMesh.prototype.writeStoreShape=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var res=(1<<shapeLod);\"\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*6+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*4+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j) {\",\r\n\t\t\t\"\treturn i*(res+1)+j;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"function normalize(v) {\",\r\n\t\t\t\"\tvar l=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);\",\r\n\t\t\t\"\treturn [v[0]/l,v[1]/l,v[2]/l];\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeMeshInit()\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"for (var i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (var j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<6;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<4;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i,j,0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i,j,3);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<=res;i++) {\",\r\n\t\t\t\"\tvar y=i/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\tfor (j=0;j<=res;j++) {\",\r\n\t\t\t\"\t\tvar x=j/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\tvar vertexOffset=vertexElement(i,j)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(2),\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i+0,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i+1,j+1);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Mesh;\r\n","var Lines=require('../lines.js');\r\n\r\nvar Shape=function(elementIndexBits,shaderType){\r\n\tthis.elementIndexBits=elementIndexBits; // 0 if don't want element arrays; 8, 16 or 32 bits per element index, limits lod of shape\r\n\tthis.shaderType=shaderType; // 'vertex' or 'face' for colors, 'light' for normals, anything else for no colors/normals\r\n};\r\nShape.prototype.dim=2;\r\nShape.prototype.twoSided=true; // triangles can be viewed from both sides\r\nShape.prototype.glPrimitive='TRIANGLES';\r\nShape.prototype.usesElements=function(){\r\n\treturn this.elementIndexBits>0;\r\n};\r\nShape.prototype.getNumbersPerPosition=function(){\r\n\treturn this.dim;\r\n};\r\nShape.prototype.getNumbersPerNormal=function(){\r\n\treturn (this.shaderType=='light' && this.dim==3) ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerColor=function(){\r\n\treturn (this.shaderType=='vertex' || this.shaderType=='face') ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerVertex=function(){\r\n\treturn this.getNumbersPerPosition()+this.getNumbersPerNormal()+this.getNumbersPerColor();\r\n};\r\nShape.prototype.getElementIndexJsArray=function(){\r\n\treturn \"Uint\"+this.elementIndexBits+\"Array\";\r\n};\r\nShape.prototype.getElementIndexGlType=function(){\r\n\tif (this.elementIndexBits==8) {\r\n\t\treturn \"gl.UNSIGNED_BYTE\"; // not recommended by ms [https://msdn.microsoft.com/en-us/library/dn798776%28v=vs.85%29.aspx]\r\n\t} else if (this.elementIndexBits==16) {\r\n\t\treturn \"gl.UNSIGNED_SHORT\"; // mozilla examples use this\r\n\t} else if (this.elementIndexBits==32) {\r\n\t\treturn \"gl.UNSIGNED_INT\"; // needs extension\r\n\t}\r\n};\r\nShape.prototype.writeDebug=function(debugArrays){\r\n\tvar lines=new Lines;\r\n\tif (debugArrays) {\r\n\t\tlines.a(\"console.log('vertex array byte length:',vertices.byteLength);\");\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\"console.log('element array byte length:',elements.byteLength);\");\r\n\t\t\tlines.a(\"console.log('vertex+element array byte length:',vertices.byteLength+elements.byteLength);\");\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeBufferData=function(){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeArraysAndBufferData=function(debugArrays,c,cv){\r\n\treturn new Lines(\r\n\t\tthis.writeArrays(c,cv),\r\n\t\tthis.writeDebug(debugArrays),\r\n\t\tthis.writeBufferData()\r\n\t);\r\n};\r\n// public fn for init\r\nShape.prototype.writeInit=function(debugArrays){\r\n\tvar c=(this.shaderType=='vertex' || this.shaderType=='face');\r\n\tvar cv=this.shaderType=='vertex';\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeArraysAndBufferData(debugArrays,c,cv),\r\n\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\"\r\n\t);\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t);\r\n\t} else if (this.dim>2 && this.shaderType=='light') {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var normalLoc=gl.getAttribLocation(program,'normal');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tnormalLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(normalLoc);\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+this.dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n// public fn for render\r\nShape.prototype.writeDraw=function(){\r\n\tif (this.usesElements()) {\r\n\t\treturn new Lines(\"gl.drawElements(gl.\"+this.glPrimitive+\",nElements,\"+this.getElementIndexGlType()+\",0);\");\r\n\t} else {\r\n\t\treturn new Lines(\"gl.drawArrays(gl.\"+this.glPrimitive+\",0,nVertices);\");\r\n\t}\r\n};\r\n\r\nmodule.exports=Shape;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Square=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nSquare.prototype=Object.create(Shape.prototype);\r\nSquare.prototype.constructor=Square;\r\nSquare.prototype.glPrimitive='TRIANGLE_FAN';\r\nSquare.prototype.writeArrays=function(c,cv){\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=4;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t// x    y\"+(c?   \"    r    g    b\":\"\"),\r\n\t\t\"\t-0.5,-0.5,\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,-0.5,\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,+0.5,\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-0.5,+0.5,\"+(c?cv?\" 1.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=4;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2,3]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Square;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Terrain=function(elementIndexBits,shaderType,lod){\r\n\tMesh.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nTerrain.prototype=Object.create(Mesh.prototype);\r\nTerrain.prototype.constructor=Terrain;\r\nTerrain.prototype.writeMeshInit=function(){\r\n\tvar noFaces=(this.usesElements()&&this.shaderType!='face');\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var xyRange=1/Math.sqrt(2);\",\r\n\t\t\"var zRange=xyRange;\",\r\n\t\t\"var mask=res-1;\",\r\n\t\t\"function zOffset(i,j) {\",\r\n\t\t\"\treturn vertexElement(i,j\"+(noFaces?\"\":\",0\")+\")*\"+this.getNumbersPerVertex()+\"+2;\",\r\n\t\t\"}\",\r\n\t\t\"function noise(depth) {\",\r\n\t\t\"\tvar r=zRange/Math.pow(2,shapeLod-depth-1);\",\r\n\t\t\"\treturn Math.random()*2*r-r;\",\r\n\t\t\"}\",\r\n\t\t\"vertices[2]=0.0;\",\r\n\t\t\"var i0,i1,i2,i3;\",\r\n\t\t\"var j0,j1,j2,j3;\",\r\n\t\t\"for (var depth=shapeLod-1;depth>=0;depth--) {\",\r\n\t\t\"\tvar d=1<<depth;\",\r\n\t\t\"\t// diamond step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti1=i2-d;\",\r\n\t\t\"\t\t\tj1=j2-d;\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i1,j1)]+vertices[zOffset(i1,j3)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i3,j1)]+vertices[zOffset(i3,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"\t// square step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti0=(i2-2*d)&mask;\",\r\n\t\t\"\t\t\tj0=(j2-2*d)&mask;\",\r\n\t\t\"\t\t\ti1=(i2-d);\",\r\n\t\t\"\t\t\tj1=(j2-d);\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j1)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j0)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i3,j1)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t\tvertices[zOffset(i1,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i0,j2)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i1,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"}\"\r\n\t);\r\n\tif (noFaces) {\r\n\t\tlines.a(\r\n\t\t\t\"for (i0=0;i0<res;i0++) vertices[zOffset(i0,res)]=vertices[zOffset(i0,0)];\",\r\n\t\t\t\"for (j0=0;j0<res;j0++) vertices[zOffset(res,j0)]=vertices[zOffset(0,j0)];\",\r\n\t\t\t\"vertices[zOffset(res,res)]=vertices[zOffset(0,0)];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nTerrain.prototype.writeMeshVertex=function(c,cv){\r\n\tvar noFaces=(this.usesElements()&&this.shaderType!='face');\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"vertices[vertexOffset+0]=x;\",\r\n\t\t\"vertices[vertexOffset+1]=y;\",\r\n\t\t(noFaces\r\n\t\t\t?\"// vertices[vertexOffset+2] already written\"\r\n\t\t\t:\"vertices[vertexOffset+2]=vertices[zOffset((i+di)&mask,(j+dj)&mask)];\"\r\n\t\t)\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var d=4*xyRange/res;\",\r\n\t\t\t\"var normal=normalize([\",\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset(i,(j-1)&mask)]-vertices[zOffset(i,(j+1)&mask)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di)&mask,(j+dj-1)&mask)]-vertices[zOffset((i+di)&mask,(j+dj+1)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset((i-1)&mask,j)]-vertices[zOffset((i+1)&mask,j)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di-1)&mask,(j+dj)&mask)]-vertices[zOffset((i+di+1)&mask,(j+dj)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t\"1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t((!this.usesElements() && this.shaderType!='face')\r\n\t\t\t\t?\"var ic=((i+di)&1)*2+((j+dj)&1);\"\r\n\t\t\t\t:\"var ic=(i&1)*2+(j&1);\"\r\n\t\t\t),\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Terrain;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Triangle=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nTriangle.prototype=Object.create(Shape.prototype);\r\nTriangle.prototype.constructor=Triangle;\r\nTriangle.prototype.writeArrays=function(c,cv){\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=3;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=3;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Triangle;\r\n","var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\n\r\nvar Uniform=function(varName,optName,components,options){\r\n\tthis.varName=varName;\r\n\tthis.optName=optName;\r\n\tthis.components=components.split('');\r\n\tthis.values=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c];\r\n\t});\r\n\tthis.inputs=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.input'];\r\n\t});\r\n\tthis.modeConstant=true;\r\n\tthis.modeFloats=false;\r\n\tthis.modeVectorDim=0;\r\n\tthis.components.forEach(function(c,i){\r\n\t\tvar isVar=options[optName+'.'+c+'.input']!='constant';\r\n\t\tif (isVar) {\r\n\t\t\tthis.modeConstant=false;\r\n\t\t\tif (this.modeVectorDim==i) {\r\n\t\t\t\tthis.modeVectorDim++;\r\n\t\t\t} else {\r\n\t\t\t\tthis.modeVectorDim=0;\r\n\t\t\t\tthis.modeFloats=true;\r\n\t\t\t}\r\n\t\t}\r\n\t},this);\r\n\tif (this.modeVectorDim==1) {\r\n\t\tthis.modeFloats=true;\r\n\t\tthis.modeVectorDim=0;\r\n\t}\r\n};\r\nUniform.prototype.formatSignedValue=function(value){\r\n\treturn (value<=0 ? value<0 ? '' /* - */ : ' ' : '+')+value.toFixed(3);\r\n};\r\nUniform.prototype.varNameC=function(c){\r\n\treturn this.varName+c.toUpperCase();\r\n};\r\n// public:\r\nUniform.prototype.getGlslDeclarationLines=function(){\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t} else if (this.modeFloats) {\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"uniform float \"+this.varNameC(c)+\";\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t} else {\r\n\t\treturn new Lines(\r\n\t\t\t\"uniform vec\"+this.modeVectorDim+\" \"+this.varName+\";\"\r\n\t\t);\r\n\t}\r\n};\r\nUniform.prototype.getGlslValue=function(){\r\n\tvar vecType=\"vec\"+this.values.length;\r\n\tfunction varComponentMap(c,i) {\r\n\t\tif (this.inputs[i]=='constant') {\r\n\t\t\treturn this.formatSignedValue(this.values[i]);\r\n\t\t} else {\r\n\t\t\treturn this.varNameC(c);\r\n\t\t}\r\n\t}\r\n\tvar vs=this.components.map(varComponentMap,this);\r\n\tif (this.modeConstant) {\r\n\t\tvar equalValues=vs.every(function(v){\r\n\t\t\treturn v==vs[0];\r\n\t\t});\r\n\t\tif (equalValues) {\r\n\t\t\treturn vecType+\"(\"+vs[0]+\")\"; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n\t\t}\r\n\t} else if (!this.modeFloats) {\r\n\t\tvs=vs.slice(this.modeVectorDim);\r\n\t\tif (vs.length==0) {\r\n\t\t\treturn this.varName;\r\n\t\t}\r\n\t\tvs.unshift(this.varName);\r\n\t}\r\n\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n};\r\nUniform.prototype.getJsInterfaceLines=function(writeListenerArgs,canvasMousemoveListener){\r\n\tfunction capitalize(s) {\r\n\t\treturn s.charAt(0).toUpperCase()+s.slice(1);\r\n\t}\r\n\tvar updateFnName='update'+capitalize(this.varName);\r\n\tfunction writeManyListenersLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='slider') return;\r\n\t\t\tvar listener=new listeners.SliderListener(this.optName+'.'+c);\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction writeOneListenerLines() {\r\n\t\tvar listener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+this.optName+\".\\\"]\");\r\n\t\tlistener.enter()\r\n\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t.post(updateFnName+\"();\");\r\n\t\treturn new Lines(\r\n\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t);\r\n\t}\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t}\r\n\tvar lines=new Lines;\r\n\tvar manyListenersLines=writeManyListenersLines.call(this);\r\n\tvar oneListenerLines=writeOneListenerLines.call(this);\r\n\tif (this.modeFloats) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var \"+this.varNameC(c)+\"Loc=gl.getUniformLocation(program,'\"+this.varNameC(c)+\"');\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var \"+this.varName+\"Loc=gl.getUniformLocation(program,'\"+this.varName+\"');\"\r\n\t\t);\r\n\t}\r\n\tthis.components.forEach(function(c,i){\r\n\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var \"+this.varNameC(c)+\"=\"+this.formatSignedValue(this.values[i])+\";\"\r\n\t\t\t);\r\n\t\t}\r\n\t},this);\r\n\tvar updateFnLines=new Lines;\r\n\tfunction componentValue(c,i) {\r\n\t\tif (this.inputs[i]=='slider') {\r\n\t\t\treturn \"parseFloat(document.getElementById('\"+this.optName+\".\"+c+\"').value)\";\r\n\t\t} else if (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\treturn this.varNameC(c);\r\n\t\t}\r\n\t}\r\n\tif (this.modeFloats) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tupdateFnLines.a(\r\n\t\t\t\t\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+componentValue.call(this,c,i)+\");\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t} else {\r\n\t\tupdateFnLines.a(\r\n\t\t\t\"gl.uniform\"+this.modeVectorDim+\"f(\"+this.varName+\"Loc\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tupdateFnLines.t(\r\n\t\t\t\t\",\",\r\n\t\t\t\t\"\t\"+componentValue.call(this,c,i)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\tupdateFnLines.a(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tupdateFnLines.wrap(\r\n\t\t\t\"function \"+updateFnName+\"() {\",\r\n\t\t\t\"}\"\r\n\t\t),\r\n\t\tupdateFnName+\"();\",\r\n\t\tmanyListenersLines.data.length<=oneListenerLines.data.length ? manyListenersLines : oneListenerLines\r\n\t);\r\n\tif (canvasMousemoveListener) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\tthis.inputs[i],\r\n\t\t\t\t\t\t// TODO supply ranges\r\n\t\t\t\t\t\tthis.varNameC(c)+\"=4*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\tthis.varNameC(c)+\"=4*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('\"+this.optName+\".\"+c+\" input value:',\"+this.varNameC(c)+\");\")\r\n\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t}\r\n\t\t},this);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Uniform;\r\n"],"sourceRoot":"."}