{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/listeners.js","src/main.js","src/options.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","listeners","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","isMousemoveInput","indexOf","indentLines","level","lines","map","line","Array","join","generateVertexShaderLines","animation","push","shader","generateFragmentShaderLines","hasInputsFor","generateControlMessageLines","inputOptions","filter","option","concat","generateInputLines","apply","getMinLabel","getStep","getMin","getMax","getMaxLabel","generateMakeProgramLines","debugShader","generateShapeLines","square","c","triangle","gasket","shape","generateBufferLines","generateInputHandlerLines","writeListener","listener","write","debugInputs","colorStates","optionPrefix","updateFnName","stateVarPrefix","forEach","toUpperCase","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","SliderListener","enter","log","post","colorMultipleListeners","varName","canvasMousemoveListener","prexy","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","CanvasMousemoveListener","cond","state","generateRenderLines","renderInner","background","needUpdateCanvasFunction","hasInputs","hasSliderInputs","./listeners.js",2,"Listener","this","entries","prototype","makePushArgs","where","arguments","proxy","entry","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","indent","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","innerLines","match","exec","id","Object","create","constructor","query","xLine","yLine",3,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.animation","options.animation.none","options.animation.rotation","options.input","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shape.gasket.depth","options.animation.rotation.speed","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.debug","options.debugShader","options.debugInputs","controls.type.mousemovex","controls.type.mousemovey","controls.to","$","each","showHideSuboptionInputs","optionName","optionValue","optionsNode","find","show","not","hide","updateCode","codeNode","text","cloneWithoutHidden","window","hljs","highlightBlock","writeGeneralOption","append","availableValues","availableValue","val","change","value","writeInputOption","inputId","attr","parseFloat","availableInputTypes","availableInputType","writeDebugOption","prop","writeOptions","generalOptions","debugOptions","hideSuboptionInputs","writeButtons","click","open","containerNode","empty","./code.js","./options.js",4,"Option","defaultValue","undefined","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","replace","DebugOption","reset","some","matchedOptions","newOptions","generalOption"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var listeners=require('./listeners.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\tfunction indentLines(level,lines) {\r\n\t\treturn lines.map(function(line){\r\n\t\t\treturn Array(level+1).join(\"\t\")+line;\r\n\t\t});\r\n\t}\r\n\tfunction appendLinesToLastLine(lines,addedLines) {\r\n\t\tvar lastLine=lines.pop();\r\n\t\tvar indent=/^\\s*/.exec(lastLine)[0];\r\n\t\taddedLines.forEach(function(line,i){\r\n\t\t\tif (i==0) {\r\n\t\t\t\tlines.push(lastLine+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(indent+line);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction generateVertexShaderLines() {\r\n\t\tlines=[];\r\n\t\tif (options.animation=='rotation') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"uniform float rotationAngle;\",\r\n\t\t\t\t\"attribute vec2 position;\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 position;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"void main() {\"\r\n\t\t);\r\n\t\tif (options.animation=='rotation') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfloat c=cos(radians(rotationAngle));\",\r\n\t\t\t\t\"\tfloat s=sin(radians(rotationAngle));\",\r\n\t\t\t\t\"\tgl_Position=vec4(mat2(\",\r\n\t\t\t\t\"\t\t c, s,\",\r\n\t\t\t\t\"\t\t-s, c\",\r\n\t\t\t\t\"\t)*position,0,1);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tgl_Position=position;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tinterpolatedColor=color;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\treturn [\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else if (options.hasInputsFor('shader.single.color')) {\r\n\t\t\treturn [\r\n\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\"+colorValue('shader.single.color')+\");\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\tfunction generateControlMessageLines() {\r\n\t\tvar lines=options.inputOptions.filter(function(option){\r\n\t\t\treturn isMousemoveInput(option.name);\r\n\t\t}).map(function(option){\r\n\t\t\treturn \"\t<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\";\r\n\t\t});\r\n\t\tif (lines.length) {\r\n\t\t\treturn [\"<ul>\"].concat(lines,[\"</ul>\"]);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\tfunction generateInputLines() {\r\n\t\treturn [].concat.apply([],\r\n\t\t\toptions.inputOptions.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).map(function(option){\r\n\t\t\t\treturn [\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"+\r\n\t\t\t\t\t\t(option.getStep()==1\r\n\t\t\t\t\t\t\t? \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t\t: \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t)+\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\",\r\n\t\t\t\t\t\"</div>\",\r\n\t\t\t\t];\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tfunction generateMakeProgramLines() {\r\n\t\tlines=[\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"\tvar vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(vertexShader);\",\r\n\t\t];\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar program=gl.createProgram();\",\r\n\t\t\t\"\tgl.attachShader(program,vertexShader);\",\r\n\t\t\t\"\tgl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"\tgl.linkProgram(program);\",\r\n\t\t\t\"\treturn program;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateShapeLines() {\r\n\t\tvar c=options.shader=='vertex';\r\n\t\tfunction square() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=4;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t// x    y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-0.5,-0.5,\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,-0.5,\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,+0.5,\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\"\t-0.5,+0.5,\"+(c?\" 1.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction triangle() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=3;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction gasket() {\r\n\t\t\tlines=[];\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketMaxDepth=10;\",\r\n\t\t\t\t\t\"var nMaxVertices=Math.pow(3,gasketMaxDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"var gasketDepth,nVertices;\",\r\n\t\t\t\t\t\"function storeGasketVertices(newGasketDepth) {\",\r\n\t\t\t\t\t\"\tgasketDepth=newGasketDepth\",\r\n\t\t\t\t\t\"\tnVertices=Math.pow(3,gasketDepth)*3;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketDepth=\"+intOptionValue('shape.gasket.depth')+\";\",\r\n\t\t\t\t\t\"var nVertices=Math.pow(3,gasketDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"function storeGasketVertices() {\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tvar iv=0;\"\r\n\t\t\t);\r\n\t\t\tif (c) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v,r,g,b) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=r; vertices[iv++]=g; vertices[iv++]=b;\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfunction mix(a,b,m) {\",\r\n\t\t\t\t\"\t\treturn [\",\r\n\t\t\t\t\"\t\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\t\t\"\t\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\t\t\"\t\t];\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\tfunction triangle(depth,a,b,c) {\",\r\n\t\t\t\t\"\t\tif (depth<=0) {\"\r\n\t\t\t);\r\n\t\t\tif (c) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a,1.0,0.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b,0.0,1.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c,0.0,0.0,1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\t\t} else {\",\r\n\t\t\t\t\"\t\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\t\t\"\t\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\t\t\"\t\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\t\t\"\t\t}\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\ttriangle(\",\r\n\t\t\t\t\"\t\tgasketDepth,\",\r\n\t\t\t\t\"\t\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\t\t\"\t);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices(\"+intOptionValue('shape.gasket.depth')+\");\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tif (options.shape=='square') {\r\n\t\t\treturn square();\r\n\t\t} else if (options.shape=='triangle') {\r\n\t\t\treturn triangle();\r\n\t\t} else if (options.shape=='gasket') {\r\n\t\t\treturn gasket();\r\n\t\t}\r\n\t}\r\n\tfunction generateBufferLines() {\r\n\t\tvar lines=[\r\n\t\t\t\"var buffer=gl.createBuffer();\",\r\n\t\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,buffer);\",\r\n\t\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\",\r\n\t\t\t\"\",\r\n\t\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\",\r\n\t\t];\r\n\t\tif (options.shader=='vertex') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tpositionLoc,2,gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*5,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*5,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*2\",\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(positionLoc,2,gl.FLOAT,false,0,0);\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateInputHandlerLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tlistener.write(options.animation!='rotation',options.debugInputs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[name+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\t\tvarName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options['shape.gasket.depth.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('shape.gasket.depth');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t.post(\"storeGasketVertices(parseInt(this.value));\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('shape.gasket.depth')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.prexy(\r\n\t\t\t\t\toptions['shape.gasket.depth.input'],\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t)\r\n\t\t\t\t.cond(\"newGasketDepth!=gasketDepth\")\r\n\t\t\t\t.log(\"console.log('shape.gasket.depth input value:',newGasketDepth);\")\r\n\t\t\t\t.post(\"storeGasketVertices(newGasketDepth);\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t}\r\n\t\tif (options['animation.rotation.speed.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('animation.rotation.speed');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('animation.rotation.speed')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.state(\"var rotationSpeed=\"+floatOptionValue('animation.rotation.speed')+\";\")\r\n\t\t\t\t.prexy(\r\n\t\t\t\t\toptions['animation.rotation.speed.input'],\r\n\t\t\t\t\t\"rotationSpeed=-1+2*(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\"rotationSpeed=-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t)\r\n\t\t\t\t.log(\"console.log('animation.rotation.speed input value:',rotationSpeed);\");\r\n\t\t}\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\tif (lines.length) lines.push(\"\t\");\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateRenderLines() {\r\n\t\tfunction renderInner() {\r\n\t\t\tvar lines=[];\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tif (options['animation.rotation.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"gl.uniform1f(rotationAngleLoc,\"+floatOptionValue('animation.rotation.speed')+\"*360*(time-startTime)/1000);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (options['animation.rotation.speed.input']=='slider') {\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"var rotationSpeed=parseFloat(document.getElementById('animation.rotation.speed').value);\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"rotationAngle+=rotationSpeed*360*(time-prevTime)/1000;\",\r\n\t\t\t\t\t\t\"gl.uniform1f(rotationAngleLoc,rotationAngle);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options.shape=='square') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLE_FAN,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLES,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=[];\r\n\t\tif (options.animation=='rotation') {\r\n\t\t\tif (options['animation.rotation.speed.input']!='constant') {\r\n\t\t\t\t// angle needs to be a state only if speed is controllable\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var rotationAngle=0;\",\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar needUpdateCanvasFunction=options.animation=='rotation'||options.hasInputs();\r\n\t\tif (needUpdateCanvasFunction) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateCanvas(time) {\"\r\n\t\t\t);\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tindentLines(1,renderInner())\r\n\t\t\t);\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tif (options['animation.rotation.speed.input']!='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trequestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"requestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"updateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\trenderInner()\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\treturn [].concat([\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t],options.hasSliderInputs()?[\r\n\t\t\"<style>\",\r\n\t\t\"\tlabel {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 15em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.min {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 1.5em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.max {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 1.5em;\",\r\n\t\t\"\t\ttext-align: left;\",\r\n\t\t\"\t}\",\r\n\t\t\"</style>\",\r\n\t]:[],[\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t],indentLines(1,generateVertexShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\t\"\tprecision mediump float;\",\r\n\t],indentLines(1,generateFragmentShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='512' height='512'></canvas>\",\r\n\t\t\"</div>\",\r\n\t],generateControlMessageLines(),generateInputLines(),[\r\n\t\t\"<script>\",\r\n\t],indentLines(1,generateMakeProgramLines()),[\r\n\t\t\"\t\",\r\n\t\t\"\tvar canvas=document.getElementById('myCanvas');\",\r\n\t\t\"\tvar gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\",\r\n\t],(options.background=='solid' && !options.hasInputsFor('background.solid.color'))?[\r\n\t\t\"\tgl.clearColor(\"+colorValue('background.solid.color')+\");\",\r\n\t]:[],[\r\n\t\t\"\tvar program=makeProgram(\",\r\n\t\t\"\t\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\"\t\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\"\t);\",\r\n\t\t\"\tgl.useProgram(program);\",\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateShapeLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateBufferLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateInputHandlerLines()),options.animation=='rotation'?[\r\n\t\t\"\tvar rotationAngleLoc=gl.getUniformLocation(program,'rotationAngle');\",\r\n\t\t\"\t\",\r\n\t]:[],indentLines(1,generateRenderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</body>\",\r\n\t\t\"</html>\",\r\n\t]).join(\"\\n\");\r\n};\r\n",null,"var Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tfunction indent(line) {\r\n\t\treturn \"\\t\"+line;\r\n\t}\r\n\tvar outerLines=[];\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push(indent(line));\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines=outerLines.concat(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"updateCanvas();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (innerLines.length) {\r\n\t\tinnerLines=this.innerPrependedLines().concat(innerLines);\r\n\t}\r\n\tif (innerLines.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.concat(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\t[br[0]+match[1]+br[1]]\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tif (innerLines.length) {\r\n\t\treturn outerLines.concat(\r\n\t\t\tthis.wrapCall([].concat(\r\n\t\t\t\t[br[0]+\"function(\"+this.bracketFnArg()+\"){\"],\r\n\t\t\t\tinnerLines.map(indent),\r\n\t\t\t\t[\"}\"+br[1]]\r\n\t\t\t))\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn [].concat(\r\n\t\t[\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\"],\r\n\t\tlines.map(function(line){\r\n\t\t\treturn \"\\t\"+line;\r\n\t\t}),\r\n\t\t[\"});\"]\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.animation': 'Animation',\r\n\t\t'options.animation.none': 'None',\r\n\t\t'options.animation.rotation': 'Rotation around z axis',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'options.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t//'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShader': 'Log shader compilation errors',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar containerNode=$(this);\r\n\t\tvar optionsNode;\r\n\t\tvar codeNode;\r\n\t\tvar options=new Options();\r\n\r\n\t\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\t\t// TODO sub-sub option support?\r\n\t\t\toptionsNode.find(\"[data-option^='\"+optionName+\".']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tcodeNode.text(generateCode(options.cloneWithoutHidden(),i18n));\r\n\t\t\tif (window.hljs) hljs.highlightBlock(codeNode[0]);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option.name,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option.name,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri(codeNode.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri(codeNode.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tcontainerNode.empty().append(optionsNode=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\tcontainerNode.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append(codeNode=$(\"<code>\").text(generateCode(options.cloneWithoutHidden(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock(codeNode[0]);\r\n\t\t} else {\r\n\t\t\tcontainerNode.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\tcontainerNode.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(this.name+'.') && !optionStartsWith(this.name+'.'+value+'.');\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n}\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n}\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n}\r\nInputOption.prototype.getStep=function(){\r\n\tif (this.availableValues.length>=3) {\r\n\t\treturn this.availableValues[2];\r\n\t} else {\r\n\t\treturn 'any';\r\n\t}\r\n}\r\nInputOption.prototype.getMinLabel=function(){\r\n\treturn this.getMin().toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(){\r\n\treturn this.getMax().toString().replace('-','−');\r\n};\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar Options=function(){\r\n\tthis.reset();\r\n};\r\nOptions.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex']),\r\n\tnew Option('shape',['square','triangle','gasket']),\r\n\tnew Option('animation',['none','rotation']),\r\n];\r\nOptions.prototype.inputOptions=[\r\n\tnew InputOption('background.solid.color.r',[0,1],1),\r\n\tnew InputOption('background.solid.color.g',[0,1],1),\r\n\tnew InputOption('background.solid.color.b',[0,1],1),\r\n\tnew InputOption('background.solid.color.a',[0,1],1),\r\n\tnew InputOption('shader.single.color.r',[0,1],1),\r\n\tnew InputOption('shader.single.color.g',[0,1]),\r\n\tnew InputOption('shader.single.color.b',[0,1]),\r\n\tnew InputOption('shader.single.color.a',[0,1],1),\r\n\tnew InputOption('shape.gasket.depth',[0,10,1],6),\r\n\tnew InputOption('animation.rotation.speed',[-1,1],0.2),\r\n];\r\nOptions.prototype.debugOptions=[\r\n\tnew DebugOption('debugShader',true),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptions.prototype.reset=function(){\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n};\r\n\r\n// TODO check what .has*() fns are in use\r\nOptions.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nOptions.prototype.cloneWithoutHidden=function(){\r\n\t// clone and set .input=constant for hidden sections\r\n\tvar newOptions=new Options();\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t\tif (\r\n\t\t\tthis.generalOptions.some(function(generalOption){\r\n\t\t\t\treturn generalOption.doesValueHideOption(this[generalOption.name],option);\r\n\t\t\t},this)\r\n\t\t) {\r\n\t\t\tnewOptions[option.name+'.input']='constant';\r\n\t\t} else {\r\n\t\t\tnewOptions[option.name+'.input']=this[option.name+'.input'];\r\n\t\t}\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\treturn newOptions;\r\n};\r\n\r\nmodule.exports=Options;\r\n"],"sourceRoot":"."}