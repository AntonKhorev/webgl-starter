{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/listeners.js","src/main.js","src/options.js","src/shapes.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","listeners","shapes","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","glslColorValue","g","b","isMousemoveInput","indexOf","indentLines","level","lines","map","line","Array","join","appendLinesToLastLine","addedLines","lastLine","pop","indent","exec","forEach","push","makeShape","shape","Square","shader","Triangle","Gasket","Cube","generateVertexShaderLines","use2dTransform","dim","needsTransform","needAspectUniform","hasInputsFor","needAspectConstant","d","D","toUpperCase","optName","varName","needsUniform","generateFragmentShaderLines","generateControlMessageLines","writeOptionGroup","group","filter","option","inputOptions","transformOptions","concat","generateInputLines","getMinLabel","getStep","getMin","getMax","getMaxLabel","generateMakeProgramLines","debugShader","generateInputHandlerLines","writeListener","listener","write","isAnimated","debugInputs","canvasUpdater","canvasListener","wh","SliderListener","enter","log","post","colorStates","optionPrefix","updateFnName","stateVarPrefix","c","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","colorMultipleListeners","canvasMousemoveListener","prexy","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","CanvasMousemoveListener","cond","updateName","entry","state","generateRenderLines","renderInner","renderInnerTransforms","needStartTime","needPrevTime","needWrap","innerTransformsLines","background","writeDraw","innerLines","needUpdateCanvasFunction","hasInputs","hasSliderInputs","writeInit","./listeners.js","./shapes.js",2,"Listener","this","entries","prototype","makePushArgs","where","arguments","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","match","id","Object","create","constructor","query","xLine","yLine",3,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shader.face","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.input","options.canvas.width","options.canvas.height","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shape.gasket.depth","options.animation.rotation.speed","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShader","options.debugInputs","controls.type.mousemovex","controls.type.mousemovey","controls.to","$","each","showHideSuboptionInputs","optionName","optionValue","optionsNode","find","show","not","hide","updateCode","clearTimeout","codeUpdateTimeoutId","setTimeout","codeNode","text","cloneWithoutHidden","window","hljs","highlightBlock","codeUpdateDelay","writeGeneralOption","append","availableValues","availableValue","val","change","value","writeInputOption","inputListener","that","checkValidity","parseFloat","sliderInput","numberInput","inputId","attr","getSetupStep","on","click","defaultValue","availableInputTypes","availableInputType","writeDebugOption","prop","writeOptions","generalOptions","debugOptions","hideSuboptionInputs","writeButtons","open","containerNode","empty","./code.js","./options.js",4,"Option","undefined","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","replace","FloatInputOption","IntInputOption","CanvasIntInputOption","DebugOption","reset","some","matchedOptions","endsWith","suffix","newOptions","section","generalOption",5,"Shape","shaderType","usesElements","glPrimitive","cv","writeArrays","depth","isDepthChanges"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var listeners=require('./listeners.js');\r\nvar shapes=require('./shapes.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction glslColorValue(prefix) {\r\n\t\tvar r=floatOptionValue(prefix+'.r');\r\n\t\tvar g=floatOptionValue(prefix+'.g');\r\n\t\tvar b=floatOptionValue(prefix+'.b');\r\n\t\tvar a=floatOptionValue(prefix+'.a');\r\n\t\tif (r==a && g==a && b==a) {\r\n\t\t\treturn a; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn r+\",\"+g+\",\"+b+\",\"+a;\r\n\t\t}\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\tfunction indentLines(level,lines) {\r\n\t\treturn lines.map(function(line){\r\n\t\t\treturn Array(level+1).join(\"\t\")+line;\r\n\t\t});\r\n\t}\r\n\tfunction appendLinesToLastLine(lines,addedLines) {\r\n\t\tvar lastLine=lines.pop();\r\n\t\tvar indent=/^\\s*/.exec(lastLine)[0];\r\n\t\taddedLines.forEach(function(line,i){\r\n\t\t\tif (i==0) {\r\n\t\t\t\tlines.push(lastLine+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(indent+line);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction makeShape() {\r\n\t\tif (options.shape=='square') {\r\n\t\t\treturn new shapes.Square(options.shader);\r\n\t\t} else if (options.shape=='triangle') {\r\n\t\t\treturn new shapes.Triangle(options.shader);\r\n\t\t} else if (options.shape=='gasket') {\r\n\t\t\treturn new shapes.Gasket(options.shader,intOptionValue('shape.gasket.depth'),options['shape.gasket.depth.input']!='constant');\r\n\t\t} else if (options.shape=='cube') {\r\n\t\t\treturn new shapes.Cube(options.shader);\r\n\t\t}\r\n\t}\r\n\tvar shape=makeShape();\r\n\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\tshape.dim==2 &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar needAspectUniform=options.hasInputsFor('canvas');\r\n\t\tvar needAspectConstant=!needAspectUniform && options['canvas.width']!=options['canvas.height'];\r\n\t\tvar lines=[];\r\n\t\tif (needAspectUniform) {\r\n\t\t\tlines.push(\"uniform float aspect;\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.push(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.push(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.push(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\" // TODO don't interpolate for shader=='face'\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"void main() {\"\r\n\t\t);\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tfloat c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\"\tfloat s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tfloat c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\"\tfloat s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (needAspectConstant) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfloat aspect=\"+intOptionValue('canvas.height')+\".0/\"+intOptionValue('canvas.width')+\".0;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tgl_Position=\"\r\n\t\t);\r\n\t\tif (use2dTransform) {\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"vec4(position*mat2(\",\r\n\t\t\t\t\"\tcz, -sz,\",\r\n\t\t\t\t\"\tsz,  cz\",\r\n\t\t\t\t\"),0,1)\"\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"position\"\r\n\t\t\t]);\r\n\t\t\tif (options.needsTransform('rotate.x')) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t0.0,  cx, -sx, 0.0,\",\r\n\t\t\t\t\t\"\t0.0,  sx,  cx, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\")\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tif (options.needsTransform('rotate.y')) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\"\t cy, 0.0,  sy, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t-sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\")\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tif (options.needsTransform('rotate.z')) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\"\t cz, -sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\")\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"*vec4(aspect,1.0,-1.0,1.0)\" // correct aspect ratio and make coords right-handed\r\n\t\t\t]);\r\n\t\t} else if (shape.dim>2) {\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"*vec4(1.0,1.0,-1.0,1.0)\" // make coords right-handed for 3d shapes\r\n\t\t\t]);\r\n\t\t}\r\n\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\";\"\r\n\t\t]);\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tinterpolatedColor=color;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\treturn [\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else if (options.hasInputsFor('shader.single.color')) {\r\n\t\t\treturn [\r\n\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\"+glslColorValue('shader.single.color')+\");\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\tfunction generateControlMessageLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\tif (lines.length) {\r\n\t\t\treturn [\"<ul>\"].concat(lines,[\"</ul>\"]);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\tfunction generateInputLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"+\r\n\t\t\t\t\t\t(option.getStep()==1\r\n\t\t\t\t\t\t\t? \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t\t: \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t)+\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\",\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateMakeProgramLines() {\r\n\t\tlines=[\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"\tvar vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(vertexShader);\",\r\n\t\t];\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar program=gl.createProgram();\",\r\n\t\t\t\"\tgl.attachShader(program,vertexShader);\",\r\n\t\t\t\"\tgl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"\tgl.linkProgram(program);\",\r\n\t\t\t\"\treturn program;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateInputHandlerLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tlistener.write(!options.isAnimated(),options.debugInputs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction canvasUpdater() {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateAspect() {\",\r\n\t\t\t\t\"\tgl.viewport(0,0,canvas.width,canvas.height);\",\r\n\t\t\t\t\"\tgl.uniform1f(aspectLoc,canvas.height/canvas.width);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateAspect();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction canvasListener(wh) {\r\n\t\t\tvar optName='canvas.'+wh;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"canvas.\"+wh+\"=parseInt(this.value);\")\r\n\t\t\t\t\t.post(\"updateAspect();\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[name+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\t\tvarName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('canvas')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var aspectLoc=gl.getUniformLocation(program,'aspect');\"\r\n\t\t\t);\r\n\t\t\tcanvasUpdater();\r\n\t\t\tcanvasListener('width');\r\n\t\t\tcanvasListener('height');\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options['shape.gasket.depth.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('shape.gasket.depth');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t.post(\"storeGasketVertices(parseInt(this.value));\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('shape.gasket.depth')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.prexy(\r\n\t\t\t\t\toptions['shape.gasket.depth.input'],\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t)\r\n\t\t\t\t.cond(\"newGasketDepth!=gasketDepth\")\r\n\t\t\t\t.log(\"console.log('shape.gasket.depth input value:',newGasketDepth);\")\r\n\t\t\t\t.post(\"storeGasketVertices(newGasketDepth);\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\" // have to initialize the uniform even if default value is zero because the browser may keep prev value of slider on page reload\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions[optName+'.speed.input'],\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\tif (lines.length) lines.push(\"\t\");\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=[];\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tif (options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=[];\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tinnerTransformsLines,\r\n\t\t\t\tshape.writeDraw()\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=[];\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar needUpdateCanvasFunction=options.isAnimated()||options.hasInputs();\r\n\t\tif (needUpdateCanvasFunction) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateCanvas(time) {\"\r\n\t\t\t);\r\n\t\t\tlines=lines.concat(indentLines(1,innerLines));\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tif (needPrevTime) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trequestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"requestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"updateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\treturn [].concat([\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t],options.hasSliderInputs()?[\r\n\t\t\"<style>\",\r\n\t\t\"\tlabel {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 15em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.min {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.max {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: left;\",\r\n\t\t\"\t}\",\r\n\t\t\"</style>\",\r\n\t]:[],[\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t],indentLines(1,generateVertexShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\t\"\tprecision mediump float;\",\r\n\t],indentLines(1,generateFragmentShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='\"+intOptionValue('canvas.width')+\"' height='\"+intOptionValue('canvas.height')+\"'></canvas>\",\r\n\t\t\"</div>\",\r\n\t],generateControlMessageLines(),generateInputLines(),[\r\n\t\t\"<script>\",\r\n\t],indentLines(1,generateMakeProgramLines()),[\r\n\t\t\"\t\",\r\n\t\t\"\tvar canvas=document.getElementById('myCanvas');\",\r\n\t\t\"\tvar gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\",\r\n\t],(\r\n\t\toptions.background=='solid' && !options.hasInputsFor('background.solid.color') && !(\r\n\t\t\t// default clear color in OpenGL\r\n\t\t\toptions['background.solid.color.r']==0 &&\r\n\t\t\toptions['background.solid.color.g']==0 &&\r\n\t\t\toptions['background.solid.color.b']==0 &&\r\n\t\t\toptions['background.solid.color.a']==0\r\n\t\t)\r\n\t)?[\r\n\t\t\"\tgl.clearColor(\"+colorValue('background.solid.color')+\");\",\r\n\t]:[],shape.dim>2?[\r\n\t\t\"\tgl.enable(gl.DEPTH_TEST);\"\r\n\t]:[],[\r\n\t\t\"\tvar program=makeProgram(\",\r\n\t\t\"\t\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\"\t\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\"\t);\",\r\n\t\t\"\tgl.useProgram(program);\",\r\n\t\t\"\t\",\r\n\t],indentLines(1,shape.writeInit()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateInputHandlerLines()),indentLines(1,generateRenderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</body>\",\r\n\t\t\"</html>\",\r\n\t]).join(\"\\n\");\r\n};\r\n",null,"var Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tfunction indent(line) {\r\n\t\treturn \"\\t\"+line;\r\n\t}\r\n\tvar outerLines=[];\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push(indent(line));\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines=outerLines.concat(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"updateCanvas();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (innerLines.length) {\r\n\t\tinnerLines=this.innerPrependedLines().concat(innerLines);\r\n\t}\r\n\tif (innerLines.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.concat(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\t[br[0]+match[1]+br[1]]\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tif (innerLines.length) {\r\n\t\treturn outerLines.concat(\r\n\t\t\tthis.wrapCall([].concat(\r\n\t\t\t\t[br[0]+\"function(\"+this.bracketFnArg()+\"){\"],\r\n\t\t\t\tinnerLines.map(indent),\r\n\t\t\t\t[\"}\"+br[1]]\r\n\t\t\t))\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn [].concat(\r\n\t\t[\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\"],\r\n\t\tlines.map(function(line){\r\n\t\t\treturn \"\\t\"+line;\r\n\t\t}),\r\n\t\t[\"});\"]\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shader.face': 'One color per face',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'Cube',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.canvas.width': 'Canvas width',\r\n\t\t'options.canvas.height': 'Canvas height',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'options.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShader': 'Log shader compilation errors',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar containerNode=$(this);\r\n\t\tvar optionsNode;\r\n\t\tvar codeNode;\r\n\t\tvar options=new Options();\r\n\t\tvar codeUpdateTimeoutId=null;\r\n\t\tvar codeUpdateDelay=200;\r\n\r\n\t\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\t\t// TODO sub-sub option support?\r\n\t\t\toptionsNode.find(\"[data-option^='\"+optionName+\".']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tclearTimeout(codeUpdateTimeoutId);\r\n\t\t\tcodeUpdateTimeoutId=setTimeout(function(){\r\n\t\t\t\tcodeNode.text(generateCode(options.cloneWithoutHidden(),i18n));\r\n\t\t\t\tif (window.hljs) hljs.highlightBlock(codeNode[0]);\r\n\t\t\t},codeUpdateDelay);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option.name,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar sliderInput,numberInput;\r\n\t\t\tfunction inputListener(that) {\r\n\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\tthat.val(this.value);\r\n\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\tupdateCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tsliderInput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,numberInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tnumberInput=$(\"<input type='number' required>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,sliderInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tsliderInput.val(option.defaultValue).change();\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\toptions.transformOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option.name,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri(codeNode.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri(codeNode.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tcontainerNode.empty().append(optionsNode=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\tcontainerNode.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append(codeNode=$(\"<code>\").text(generateCode(options.cloneWithoutHidden(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock(codeNode[0]);\r\n\t\t} else {\r\n\t\t\tcontainerNode.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\tcontainerNode.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(this.name+'.') && !optionStartsWith(this.name+'.'+value+'.');\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getMinLabel=function(){\r\n\treturn this.getMin().toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(){\r\n\treturn this.getMax().toString().replace('-','−');\r\n};\r\n\r\nvar FloatInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nFloatInputOption.prototype=Object.create(InputOption.prototype);\r\nFloatInputOption.prototype.constructor=FloatInputOption;\r\nFloatInputOption.prototype.getStep=function(){\r\n\treturn 'any';\r\n};\r\nFloatInputOption.prototype.getSetupStep=function(){\r\n\tif (this.getMax()>=100) {\r\n\t\treturn '0.1';\r\n\t} else if (this.getMax()>=10) {\r\n\t\treturn '0.01';\r\n\t} else {\r\n\t\treturn '0.001';\r\n\t}\r\n};\r\n\r\nvar IntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nIntInputOption.prototype=Object.create(InputOption.prototype);\r\nIntInputOption.prototype.constructor=IntInputOption;\r\nIntInputOption.prototype.getStep=function(){\r\n\treturn 1;\r\n};\r\nIntInputOption.prototype.getSetupStep=function(){\r\n\treturn 1;\r\n};\r\n\r\nvar CanvasIntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tIntInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nCanvasIntInputOption.prototype=Object.create(IntInputOption.prototype);\r\nCanvasIntInputOption.prototype.constructor=CanvasIntInputOption;\r\nCanvasIntInputOption.prototype.availableInputTypes=['constant','slider']; // can't change canvas size by moving mouse over canvas\r\n\r\n/*\r\nvar TransformOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nTransformOption.prototype=Object.create(InputOption.prototype);\r\nTransformOption.prototype.constructor=TransformOption;\r\nTransformOption.prototype.availableInputTypes=InputOption.prototype.availableInputTypes.concat(['animated']);\r\n*/\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar Options=function(){\r\n\tthis.reset();\r\n};\r\nOptions.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex','face']),\r\n\tnew Option('shape',['square','triangle','gasket','cube']),\r\n];\r\nOptions.prototype.inputOptions=[\r\n\tnew CanvasIntInputOption('canvas.width',[1,1024],512),\r\n\tnew CanvasIntInputOption('canvas.height',[1,1024],512),\r\n\tnew FloatInputOption('background.solid.color.r',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.g',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.b',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.r',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.g',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.b',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.a',[0,1],1),\r\n\tnew IntInputOption('shape.gasket.depth',[0,10],6),\r\n];\r\nOptions.prototype.transformOptions=[\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tnew FloatInputOption('rotate.x',[-180,180],0),\r\n\tnew FloatInputOption('rotate.x.speed',[-360,360],0),\r\n\tnew FloatInputOption('rotate.y',[-180,180],0),\r\n\tnew FloatInputOption('rotate.y.speed',[-360,360],0),\r\n\tnew FloatInputOption('rotate.z',[-180,180],0),\r\n\tnew FloatInputOption('rotate.z.speed',[-360,360],0),\r\n];\r\nOptions.prototype.debugOptions=[\r\n\tnew DebugOption('debugShader',true),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptions.prototype.reset=function(){\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.transformOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n};\r\n\r\n// TODO check what .has*() fns are in use\r\nOptions.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptions.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptions.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptions.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nOptions.prototype.cloneWithoutHidden=function(){\r\n\t// clone and set .input=constant for hidden sections\r\n\tvar newOptions=new Options();\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\t[this.inputOptions,this.transformOptions].forEach(function(section){\r\n\t\tsection.forEach(function(option){\r\n\t\t\tnewOptions[option.name]=this[option.name];\r\n\t\t\tif (\r\n\t\t\t\tthis.generalOptions.some(function(generalOption){\r\n\t\t\t\t\treturn generalOption.doesValueHideOption(this[generalOption.name],option);\r\n\t\t\t\t},this)\r\n\t\t\t) {\r\n\t\t\t\tnewOptions[option.name+'.input']='constant';\r\n\t\t\t} else {\r\n\t\t\t\tnewOptions[option.name+'.input']=this[option.name+'.input'];\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\treturn newOptions;\r\n};\r\n\r\nmodule.exports=Options;\r\n","var Shape=function(shaderType){\r\n\tthis.shaderType=shaderType; // 'vertex' or 'face' for colors, anything else for no colors\r\n};\r\nShape.prototype.dim=2;\r\nShape.prototype.usesElements=false;\r\nShape.prototype.glPrimitive='TRIANGLES';\r\nShape.prototype.writeInit=function(){\r\n\tvar c=(this.shaderType=='vertex' || this.shaderType=='face');\r\n\tvar cv=this.shaderType=='vertex';\r\n\tvar lines=this.writeArrays(c,cv);\r\n\tlines.push(\r\n\t\t\"\",\r\n\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\",\r\n\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\",\r\n\t\t\"\"\r\n\t);\r\n\tif (this.usesElements) {\r\n\t\tlines.push(\r\n\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\",\r\n\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\",\r\n\t\t\t\"\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\"\r\n\t);\r\n\tif (c) {\r\n\t\tlines.push(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"\",\r\n\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+this.dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeDraw=function(){\r\n\tif (this.usesElements) {\r\n\t\treturn [\"gl.drawElements(gl.\"+this.glPrimitive+\",nElements,gl.UNSIGNED_SHORT,0);\"];\r\n\t} else {\r\n\t\treturn [\"gl.drawArrays(gl.\"+this.glPrimitive+\",0,nVertices);\"];\r\n\t}\r\n};\r\n\r\nvar Square=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nSquare.prototype=Object.create(Shape.prototype);\r\nSquare.prototype.constructor=Square;\r\nSquare.prototype.glPrimitive='TRIANGLE_FAN';\r\nSquare.prototype.writeArrays=function(c,cv){\r\n\treturn [\r\n\t\t\"var nVertices=4;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t// x    y\"+(c?   \"    r    g    b\":\"\"),\r\n\t\t\"\t-0.5,-0.5,\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,-0.5,\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,+0.5,\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-0.5,+0.5,\"+(c?cv?\" 1.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\",\r\n\t];\r\n};\r\n\r\nvar Triangle=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nTriangle.prototype=Object.create(Shape.prototype);\r\nTriangle.prototype.constructor=Triangle;\r\nTriangle.prototype.writeArrays=function(c,cv){\r\n\treturn [\r\n\t\t\"var nVertices=3;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\",\r\n\t];\r\n};\r\n\r\nvar Gasket=function(shaderType,depth,isDepthChanges){\r\n\tShape.call(this,shaderType);\r\n\tthis.depth=depth; // integer >= 0\r\n\tthis.isDepthChanges=isDepthChanges; // bool, true when depth can change\r\n};\r\nGasket.prototype=Object.create(Shape.prototype);\r\nGasket.prototype.constructor=Gasket;\r\nGasket.prototype.writeArrays=function(c,cv){\r\n\tlines=[];\r\n\tif (this.isDepthChanges) {\r\n\t\tlines.push(\r\n\t\t\t\"var gasketMaxDepth=10;\",\r\n\t\t\t\"var nMaxVertices=Math.pow(3,gasketMaxDepth)*3;\",\r\n\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\"var gasketDepth,nVertices;\",\r\n\t\t\t\"function storeGasketVertices(newGasketDepth) {\",\r\n\t\t\t\"\tgasketDepth=newGasketDepth\",\r\n\t\t\t\"\tnVertices=Math.pow(3,gasketDepth)*3;\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"var gasketDepth=\"+this.depth+\";\",\r\n\t\t\t\"var nVertices=Math.pow(3,gasketDepth)*3;\",\r\n\t\t\t\"var vertices=new Float32Array(nVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\"function storeGasketVertices() {\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"\tvar iv=0;\"\r\n\t);\r\n\tif (this.shaderType=='face') {\r\n\t\tlines.push(\r\n\t\t\t\"\tvar ic=0;\",\r\n\t\t\t\"\tvar colors=[\",\r\n\t\t\t\"\t\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"\t\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"\t];\"\r\n\t\t);\r\n\t}\r\n\tif (this.shaderType=='vertex') {\r\n\t\tlines.push(\r\n\t\t\t\"\tfunction pushVertex(v,r,g,b) {\",\r\n\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\t\tvertices[iv++]=r; vertices[iv++]=g; vertices[iv++]=b;\",\r\n\t\t\t\"\t}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.push(\r\n\t\t\t\"\tfunction pushVertex(v,c) {\",\r\n\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\t\tvertices[iv++]=c[0]; vertices[iv++]=c[1]; vertices[iv++]=c[2];\",\r\n\t\t\t\"\t}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"\tfunction pushVertex(v) {\",\r\n\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\t}\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"\tfunction mix(a,b,m) {\",\r\n\t\t\"\t\treturn [\",\r\n\t\t\"\t\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\"\t\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\"\t\t];\",\r\n\t\t\"\t}\",\r\n\t\t\"\tfunction triangle(depth,a,b,c) {\",\r\n\t\t\"\t\tif (depth<=0) {\"\r\n\t);\r\n\tif (this.shaderType=='vertex') {\r\n\t\tlines.push(\r\n\t\t\t\"\t\t\tpushVertex(a,1.0,0.0,0.0);\",\r\n\t\t\t\"\t\t\tpushVertex(b,0.0,1.0,0.0);\",\r\n\t\t\t\"\t\t\tpushVertex(c,0.0,0.0,1.0);\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.push(\r\n\t\t\t\"\t\t\tpushVertex(a,colors[ic]);\",\r\n\t\t\t\"\t\t\tpushVertex(b,colors[ic]);\",\r\n\t\t\t\"\t\t\tpushVertex(c,colors[ic]);\",\r\n\t\t\t\"\t\t\tic=(ic+1)%colors.length;\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"\t\t\tpushVertex(a);\",\r\n\t\t\t\"\t\t\tpushVertex(b);\",\r\n\t\t\t\"\t\t\tpushVertex(c);\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"\t\t} else {\",\r\n\t\t\"\t\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\"\t\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\"\t\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\"\t\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\"\t\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\"\t\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"\ttriangle(\",\r\n\t\t\"\t\tgasketDepth,\",\r\n\t\t\"\t\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\"\t\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\"\t\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\"\t);\",\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.isDepthChanges) {\r\n\t\tlines.push(\r\n\t\t\t\"storeGasketVertices(\"+this.depth+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"storeGasketVertices();\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nvar Cube=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nCube.prototype=Object.create(Shape.prototype);\r\nCube.prototype.constructor=Cube;\r\nCube.prototype.dim=3;\r\nCube.prototype.usesElements=true;\r\nCube.prototype.writeArrays=function(c,cv){\r\n\tif (this.shaderType=='face') {\r\n\t\treturn [\r\n\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\"\t// x    y    z    r    g    b\",\r\n\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 0.0, 0.0, // left face\",\r\n\t\t\t\"\t-0.5,-0.5,+0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\"\t-0.5,+0.5,-0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\"\t-0.5,+0.5,+0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\"\t+0.5,-0.5,-0.5, 0.0, 1.0, 0.0, // right face\",\r\n\t\t\t\"\t+0.5,+0.5,-0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\"\t+0.5,-0.5,+0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 1.0, 0.0, // bottom face\",\r\n\t\t\t\"\t+0.5,-0.5,-0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\"\t-0.5,-0.5,+0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\"\t+0.5,-0.5,+0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\"\t-0.5,+0.5,-0.5, 0.0, 0.0, 1.0, // top face\",\r\n\t\t\t\"\t-0.5,+0.5,+0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,-0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 0.0, 1.0, // back face\",\r\n\t\t\t\"\t-0.5,+0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,-0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\"\t-0.5,-0.5,+0.5, 0.0, 1.0, 1.0, // front face\",\r\n\t\t\t\"\t+0.5,-0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\"\t-0.5,+0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\"]);\",\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new Uint16Array([\",\r\n\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\"]);\",\r\n\t\t];\r\n\t} else {\r\n\t\treturn [\r\n\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\"\t// x    y    z\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\"\t-0.5,-0.5,-0.5,\"+(c?\" 0.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\"\t+0.5,-0.5,-0.5,\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\"\t-0.5,+0.5,-0.5,\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\"\t+0.5,+0.5,-0.5,\"+(c?\" 1.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\"\t-0.5,-0.5,+0.5,\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\"\t+0.5,-0.5,+0.5,\"+(c?\" 1.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\"\t-0.5,+0.5,+0.5,\"+(c?\" 0.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\"\t+0.5,+0.5,+0.5,\"+(c?\" 1.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\"]);\",\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new Uint16Array([\",\r\n\t\t\t\"\t4, 6, 0, 0, 6, 2, // left face\",\r\n\t\t\t\"\t1, 3, 5, 5, 3, 7, // right face\",\r\n\t\t\t\"\t0, 1, 4, 4, 1, 5, // bottom face\",\r\n\t\t\t\"\t2, 6, 3, 3, 6, 7, // top face\",\r\n\t\t\t\"\t0, 2, 1, 1, 2, 3, // back face\",\r\n\t\t\t\"\t5, 7, 4, 4, 7, 6, // front face\",\r\n\t\t\t\"]);\",\r\n\t\t];\r\n\t}\r\n};\r\n\r\nexports.Square=Square;\r\nexports.Triangle=Triangle;\r\nexports.Gasket=Gasket;\r\nexports.Cube=Cube;\r\n"],"sourceRoot":"."}