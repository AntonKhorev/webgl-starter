{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/listeners.js","src/main.js","src/options.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","listeners","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","isMousemoveInput","indexOf","indentLines","level","lines","map","line","Array","join","appendLinesToLastLine","addedLines","lastLine","pop","indent","exec","forEach","push","generateVertexShaderLines","use2dTransform","shape","needsTransform","d","D","toUpperCase","optName","varName","needsUniform","shader","generateFragmentShaderLines","hasInputsFor","generateControlMessageLines","writeOptionGroup","group","filter","option","inputOptions","transformOptions","concat","generateInputLines","getMinLabel","getStep","getMin","getMax","getMaxLabel","generateMakeProgramLines","debugShader","generateShapeLines","generateSquare","c","cv","generateTriangle","generateGasket","generateCube","generateBufferLines","dim","generateInputHandlerLines","writeListener","listener","write","isAnimated","debugInputs","colorStates","optionPrefix","updateFnName","stateVarPrefix","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","SliderListener","enter","log","post","colorMultipleListeners","canvasMousemoveListener","prexy","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","CanvasMousemoveListener","cond","updateName","entry","state","generateRenderLines","renderInner","renderInnerTransforms","needStartTime","needPrevTime","needWrap","innerTransformsLines","background","innerLines","needUpdateCanvasFunction","hasInputs","hasSliderInputs","./listeners.js",2,"Listener","this","entries","prototype","makePushArgs","where","arguments","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","match","id","Object","create","constructor","query","xLine","yLine",3,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shader.face","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.input","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shape.gasket.depth","options.animation.rotation.speed","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShader","options.debugInputs","controls.type.mousemovex","controls.type.mousemovey","controls.to","$","each","showHideSuboptionInputs","optionName","optionValue","optionsNode","find","show","not","hide","updateCode","codeNode","text","cloneWithoutHidden","window","hljs","highlightBlock","writeGeneralOption","append","availableValues","availableValue","val","change","value","writeInputOption","input","inputId","attr","parseFloat","click","defaultValue","availableInputTypes","availableInputType","writeDebugOption","prop","writeOptions","generalOptions","debugOptions","hideSuboptionInputs","writeButtons","open","containerNode","empty","./code.js","./options.js",4,"Option","undefined","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","replace","DebugOption","reset","some","matchedOptions","endsWith","suffix","newOptions","section","generalOption"],"mappings":"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EAAAC,EAAA,kBAAA,kBAAA,IACA,mDAAAD,EAAAC,EAAA,kBAAA,kBAAA,IACA,OAGA,QAAAE,KAgHA,MA/GA/C,UACA,YAAAb,EAAA,4BACAa,MAAAY,KACA,yBACA,iDACA,+CAAAgC,EAAA,EAAA,GAAA,KACA,6BACA,iDACA,8BACA,yCAGA5C,MAAAY,KACA,mBAAAvB,EAAA,sBAAA,IACA,2CACA,4CAAAuD,EAAA,EAAA,GAAA,KACA,oCAGA5C,MAAAY,KACA,cAEA,QAAAzB,EAAAoC,QACAvB,MAAAY,KACA,aACA,gBACA,qBACA,qBACA,qBACA,qBACA,OAGA,UAAAzB,EAAAoC,OACAvB,MAAAY,KACA,kCACA,8CACA,0DACA,MAEA,QAAAzB,EAAAoC,OACAvB,MAAAY,KACA,8BACA,8CACA,mEACA,MAGAZ,MAAAY,KACA,4BACA,8CACA,MAGAZ,MAAAY,KACA,yBACA,aACA,wBACA,wBACA,OACA,KACA,oCACA,qBAEA,UAAAzB,EAAAoC,OACAvB,MAAAY,KACA,gCACA,gCACA,iCAEA,QAAAzB,EAAAoC,OACAvB,MAAAY,KACA,+BACA,+BACA,+BACA,+BAGAZ,MAAAY,KACA,oBACA,oBACA,qBAGAZ,MAAAY,KACA,aACA,0BACA,0BACA,0BACA,gCACA,gCACA,gCACA,MACA,KACA,aACA,iBACA,oDACA,oDACA,mDACA,MACA,KAEA,YAAAzB,EAAA,4BACAa,MAAAY,KACA,uBAAAvB,EAAA,sBAAA,MAGAW,MAAAY,KACA,0BAGAZ,MAEA,QAAAgD,KACA,MAAA,QAAA7D,EAAAoC,QAEA,kCACA,iCACA,+CACA,kCACA,kCACA,kCACA,gDACA,kCACA,kCACA,kCACA,iDACA,kCACA,kCACA,kCACA,8CACA,kCACA,kCACA,kCACA,+CACA,kCACA,kCACA,kCACA,gDACA,kCACA,kCACA,kCACA,MACA,oBACA,iCACA,wCACA,yCACA,0CACA,uCACA,wCACA,yCACA,QAIA,kCACA,mBAAAqB,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EAAA,kBAAA,IACA,oBAAAA,EA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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var listeners=require('./listeners.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\tfunction indentLines(level,lines) {\r\n\t\treturn lines.map(function(line){\r\n\t\t\treturn Array(level+1).join(\"\t\")+line;\r\n\t\t});\r\n\t}\r\n\tfunction appendLinesToLastLine(lines,addedLines) {\r\n\t\tvar lastLine=lines.pop();\r\n\t\tvar indent=/^\\s*/.exec(lastLine)[0];\r\n\t\taddedLines.forEach(function(line,i){\r\n\t\t\tif (i==0) {\r\n\t\t\t\tlines.push(lastLine+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(indent+line);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\toptions.shape!='cube' &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar lines=[];\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.push(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.push(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.push(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\" // TODO don't interpolate for shader=='face'\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"void main() {\"\r\n\t\t);\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tfloat c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\"\tfloat s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tfloat c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\"\tfloat s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tgl_Position=vec4(mat2(\",\r\n\t\t\t\t\"\t\t cz, sz,\",\r\n\t\t\t\t\"\t\t-sz, cz\",\r\n\t\t\t\t\"\t)*position,0,1);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tgl_Position=\"\r\n\t\t\t);\r\n\t\t\tif (options.needsTransform('rotate.z')) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"mat4(\",\r\n\t\t\t\t\t\"\t cz,  sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t-sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\")*\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tif (options.needsTransform('rotate.y')) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"mat4(\",\r\n\t\t\t\t\t\"\t cy, 0.0, -sy, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\")*\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tif (options.needsTransform('rotate.x')) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"mat4(\",\r\n\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t0.0,  cx,  sx, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, -sx,  cx, 0.0,\",\r\n\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\")*\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"position;\"\r\n\t\t\t]);\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tinterpolatedColor=color;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\treturn [\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else if (options.hasInputsFor('shader.single.color')) {\r\n\t\t\treturn [\r\n\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\"+colorValue('shader.single.color')+\");\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\tfunction generateControlMessageLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\tif (lines.length) {\r\n\t\t\treturn [\"<ul>\"].concat(lines,[\"</ul>\"]);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\tfunction generateInputLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"+\r\n\t\t\t\t\t\t(option.getStep()==1\r\n\t\t\t\t\t\t\t? \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t\t: \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t)+\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\",\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateMakeProgramLines() {\r\n\t\tlines=[\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"\tvar vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(vertexShader);\",\r\n\t\t];\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar program=gl.createProgram();\",\r\n\t\t\t\"\tgl.attachShader(program,vertexShader);\",\r\n\t\t\t\"\tgl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"\tgl.linkProgram(program);\",\r\n\t\t\t\"\treturn program;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateShapeLines() {\r\n\t\tvar c=(options.shader=='vertex' || options.shader=='face');\r\n\t\tvar cv=options.shader=='vertex';\r\n\t\tfunction generateSquare() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=4;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t// x    y\"+(c?   \"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-0.5,-0.5,\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,-0.5,\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t+0.5,+0.5,\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-0.5,+0.5,\"+(c?cv?\" 1.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction generateTriangle() {\r\n\t\t\treturn [\r\n\t\t\t\t\"var nVertices=3;\",\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\"]);\",\r\n\t\t\t];\r\n\t\t}\r\n\t\tfunction generateGasket() {\r\n\t\t\tlines=[];\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketMaxDepth=10;\",\r\n\t\t\t\t\t\"var nMaxVertices=Math.pow(3,gasketMaxDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"var gasketDepth,nVertices;\",\r\n\t\t\t\t\t\"function storeGasketVertices(newGasketDepth) {\",\r\n\t\t\t\t\t\"\tgasketDepth=newGasketDepth\",\r\n\t\t\t\t\t\"\tnVertices=Math.pow(3,gasketDepth)*3;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var gasketDepth=\"+intOptionValue('shape.gasket.depth')+\";\",\r\n\t\t\t\t\t\"var nVertices=Math.pow(3,gasketDepth)*3;\",\r\n\t\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\t\t\"function storeGasketVertices() {\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tvar iv=0;\"\r\n\t\t\t);\r\n\t\t\tif (options.shader=='face') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tvar ic=0;\",\r\n\t\t\t\t\t\"\tvar colors=[\",\r\n\t\t\t\t\t\"\t\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\t\t\"\t\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\t\t\"\t\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\t\t\"\t\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\t\t\"\t];\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.shader=='vertex') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v,r,g,b) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=r; vertices[iv++]=g; vertices[iv++]=b;\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options.shader=='face') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v,c) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=c[0]; vertices[iv++]=c[1]; vertices[iv++]=c[2];\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tfunction pushVertex(v) {\",\r\n\t\t\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\t\t\"\t}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfunction mix(a,b,m) {\",\r\n\t\t\t\t\"\t\treturn [\",\r\n\t\t\t\t\"\t\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\t\t\"\t\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\t\t\"\t\t];\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\tfunction triangle(depth,a,b,c) {\",\r\n\t\t\t\t\"\t\tif (depth<=0) {\"\r\n\t\t\t);\r\n\t\t\tif (options.shader=='vertex') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a,1.0,0.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b,0.0,1.0,0.0);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c,0.0,0.0,1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options.shader=='face') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a,colors[ic]);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b,colors[ic]);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c,colors[ic]);\",\r\n\t\t\t\t\t\"\t\t\tic=(ic+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\t\tpushVertex(a);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(b);\",\r\n\t\t\t\t\t\"\t\t\tpushVertex(c);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\t\t} else {\",\r\n\t\t\t\t\"\t\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\t\t\"\t\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\t\t\"\t\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\t\t\"\t\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\t\t\"\t\t}\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"\ttriangle(\",\r\n\t\t\t\t\"\t\tgasketDepth,\",\r\n\t\t\t\t\"\t\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\t\"\t\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\t\t\"\t);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options['shape.gasket.depth.input']!='constant') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices(\"+intOptionValue('shape.gasket.depth')+\");\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"storeGasketVertices();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tfunction generateCube() {\r\n\t\t\tif (options.shader=='face') {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\t\"\t// x    y    z    r    g    b\",\r\n\t\t\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 0.0, 0.0, // left face\",\r\n\t\t\t\t\t\"\t-0.5,-0.5,+0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t-0.5,+0.5,-0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t-0.5,+0.5,+0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\"\t+0.5,-0.5,-0.5, 0.0, 1.0, 0.0, // right face\",\r\n\t\t\t\t\t\"\t+0.5,+0.5,-0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t+0.5,-0.5,+0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 1.0, 0.0, // bottom face\",\r\n\t\t\t\t\t\"\t+0.5,-0.5,-0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t-0.5,-0.5,+0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t+0.5,-0.5,+0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\"\t-0.5,+0.5,-0.5, 0.0, 0.0, 1.0, // top face\",\r\n\t\t\t\t\t\"\t-0.5,+0.5,+0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\t\t\"\t+0.5,+0.5,-0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 0.0, 1.0, // back face\",\r\n\t\t\t\t\t\"\t-0.5,+0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\t\t\"\t+0.5,-0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\t\t\"\t+0.5,+0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\t\t\"\t-0.5,-0.5,+0.5, 0.0, 1.0, 1.0, // front face\",\r\n\t\t\t\t\t\"\t+0.5,-0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\t\t\"\t-0.5,+0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\t\t\"]);\",\r\n\t\t\t\t\t\"var nElements=36;\",\r\n\t\t\t\t\t\"var elements=new Uint16Array([\", // TODO warn that coords are left-handed or make an option\r\n\t\t\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\t\t\"]);\",\r\n\t\t\t\t];\r\n\t\t\t} else {\r\n\t\t\t\treturn [\r\n\t\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\t\"\t// x    y    z\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\t\t\"\t-0.5,-0.5,-0.5,\"+(c?\" 0.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\t\"\t+0.5,-0.5,-0.5,\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\t\t\"\t-0.5,+0.5,-0.5,\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\t\"\t+0.5,+0.5,-0.5,\"+(c?\" 1.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\t\t\"\t-0.5,-0.5,+0.5,\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\t\"\t+0.5,-0.5,+0.5,\"+(c?\" 1.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\t\t\"\t-0.5,+0.5,+0.5,\"+(c?\" 0.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\t\t\"\t+0.5,+0.5,+0.5,\"+(c?\" 1.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\t\t\"]);\",\r\n\t\t\t\t\t\"var nElements=36;\",\r\n\t\t\t\t\t\"var elements=new Uint16Array([\", // TODO warn that coords are left-handed or make an option\r\n\t\t\t\t\t\"\t4, 6, 0, 0, 6, 2, // left face (in right-handed coords)\",\r\n\t\t\t\t\t\"\t1, 3, 5, 5, 3, 7, // right face\",\r\n\t\t\t\t\t\"\t0, 1, 4, 4, 1, 5, // bottom face\",\r\n\t\t\t\t\t\"\t2, 6, 3, 3, 6, 7, // top face\",\r\n\t\t\t\t\t\"\t0, 2, 1, 1, 2, 3, // back face\",\r\n\t\t\t\t\t\"\t5, 7, 4, 4, 7, 6, // front face\",\r\n\t\t\t\t\t\"]);\",\r\n\t\t\t\t];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.shape=='square') {\r\n\t\t\treturn generateSquare();\r\n\t\t} else if (options.shape=='triangle') {\r\n\t\t\treturn generateTriangle();\r\n\t\t} else if (options.shape=='gasket') {\r\n\t\t\treturn generateGasket();\r\n\t\t} else if (options.shape=='cube') {\r\n\t\t\treturn generateCube();\r\n\t\t}\r\n\t}\r\n\tfunction generateBufferLines() {\r\n\t\tvar lines=[];\r\n\t\tlines.push(\r\n\t\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\",\r\n\t\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\",\r\n\t\t\t\"\"\r\n\t\t);\r\n\t\tif (options.shape=='cube') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\",\r\n\t\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\",\r\n\t\t\t\t\"\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\"\r\n\t\t);\r\n\t\tvar dim=(options.shape=='cube' ? 3 : 2);\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tpositionLoc,\"+dim+\",gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(dim+3)+\",\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\t\"\",\r\n\t\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(dim+3)+\",\",\r\n\t\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+dim,\r\n\t\t\t\t\");\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateInputHandlerLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tlistener.write(!options.isAnimated(),options.debugInputs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[name+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\t\tvarName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options['shape.gasket.depth.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('shape.gasket.depth');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t.post(\"storeGasketVertices(parseInt(this.value));\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('shape.gasket.depth')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.prexy(\r\n\t\t\t\t\toptions['shape.gasket.depth.input'],\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t)\r\n\t\t\t\t.cond(\"newGasketDepth!=gasketDepth\")\r\n\t\t\t\t.log(\"console.log('shape.gasket.depth input value:',newGasketDepth);\")\r\n\t\t\t\t.post(\"storeGasketVertices(newGasketDepth);\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions[optName+'.speed.input'],\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\tif (lines.length) lines.push(\"\t\");\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=[];\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tif (options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=[];\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines=lines.concat(innerTransformsLines);\r\n\t\t\tif (options.shape=='square') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLE_FAN,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options.shape=='cube') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawElements(gl.TRIANGLES,nElements,gl.UNSIGNED_SHORT,0);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLES,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=[];\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar needUpdateCanvasFunction=options.isAnimated()||options.hasInputs();\r\n\t\tif (needUpdateCanvasFunction) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateCanvas(time) {\"\r\n\t\t\t);\r\n\t\t\tlines=lines.concat(indentLines(1,innerLines));\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tif (needPrevTime) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trequestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"requestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"updateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\treturn [].concat([\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t],options.hasSliderInputs()?[\r\n\t\t\"<style>\",\r\n\t\t\"\tlabel {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 15em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.min {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.max {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: left;\",\r\n\t\t\"\t}\",\r\n\t\t\"</style>\",\r\n\t]:[],[\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t],indentLines(1,generateVertexShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\t\"\tprecision mediump float;\",\r\n\t],indentLines(1,generateFragmentShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='512' height='512'></canvas>\",\r\n\t\t\"</div>\",\r\n\t],generateControlMessageLines(),generateInputLines(),[\r\n\t\t\"<script>\",\r\n\t],indentLines(1,generateMakeProgramLines()),[\r\n\t\t\"\t\",\r\n\t\t\"\tvar canvas=document.getElementById('myCanvas');\",\r\n\t\t\"\tvar gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\",\r\n\t],(options.background=='solid' && !options.hasInputsFor('background.solid.color'))?[\r\n\t\t\"\tgl.clearColor(\"+colorValue('background.solid.color')+\");\",\r\n\t]:[],options.shape=='cube'?[\r\n\t\t\"\tgl.enable(gl.DEPTH_TEST);\"\r\n\t]:[],[\r\n\t\t\"\tvar program=makeProgram(\",\r\n\t\t\"\t\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\"\t\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\"\t);\",\r\n\t\t\"\tgl.useProgram(program);\",\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateShapeLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateBufferLines()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateInputHandlerLines()),indentLines(1,generateRenderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</body>\",\r\n\t\t\"</html>\",\r\n\t]).join(\"\\n\");\r\n};\r\n",null,"var Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tfunction indent(line) {\r\n\t\treturn \"\\t\"+line;\r\n\t}\r\n\tvar outerLines=[];\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push(indent(line));\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines=outerLines.concat(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"updateCanvas();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (innerLines.length) {\r\n\t\tinnerLines=this.innerPrependedLines().concat(innerLines);\r\n\t}\r\n\tif (innerLines.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.concat(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\t[br[0]+match[1]+br[1]]\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tif (innerLines.length) {\r\n\t\treturn outerLines.concat(\r\n\t\t\tthis.wrapCall([].concat(\r\n\t\t\t\t[br[0]+\"function(\"+this.bracketFnArg()+\"){\"],\r\n\t\t\t\tinnerLines.map(indent),\r\n\t\t\t\t[\"}\"+br[1]]\r\n\t\t\t))\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn [].concat(\r\n\t\t[\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\"],\r\n\t\tlines.map(function(line){\r\n\t\t\treturn \"\\t\"+line;\r\n\t\t}),\r\n\t\t[\"});\"]\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shader.face': 'One color per face',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'Cube',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'options.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShader': 'Log shader compilation errors',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar containerNode=$(this);\r\n\t\tvar optionsNode;\r\n\t\tvar codeNode;\r\n\t\tvar options=new Options();\r\n\r\n\t\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\t\t// TODO sub-sub option support?\r\n\t\t\toptionsNode.find(\"[data-option^='\"+optionName+\".']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tcodeNode.text(generateCode(options.cloneWithoutHidden(),i18n));\r\n\t\t\tif (window.hljs) hljs.highlightBlock(codeNode[0]);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option.name,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar input;\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tinput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tinput.val(option.defaultValue).change();\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\toptions.transformOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option.name,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri(codeNode.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri(codeNode.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tcontainerNode.empty().append(optionsNode=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\tcontainerNode.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append(codeNode=$(\"<code>\").text(generateCode(options.cloneWithoutHidden(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock(codeNode[0]);\r\n\t\t} else {\r\n\t\t\tcontainerNode.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\tcontainerNode.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(this.name+'.') && !optionStartsWith(this.name+'.'+value+'.');\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getStep=function(){\r\n\tif (this.availableValues.length>=3) {\r\n\t\treturn this.availableValues[2];\r\n\t} else {\r\n\t\treturn 'any';\r\n\t}\r\n};\r\nInputOption.prototype.getMinLabel=function(){\r\n\treturn this.getMin().toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(){\r\n\treturn this.getMax().toString().replace('-','−');\r\n};\r\n\r\n/*\r\nvar TransformOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nTransformOption.prototype=Object.create(InputOption.prototype);\r\nTransformOption.prototype.constructor=TransformOption;\r\nTransformOption.prototype.availableInputTypes=InputOption.prototype.availableInputTypes.concat(['animated']);\r\n*/\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar Options=function(){\r\n\tthis.reset();\r\n};\r\nOptions.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex','face']),\r\n\tnew Option('shape',['square','triangle','gasket','cube']),\r\n];\r\nOptions.prototype.inputOptions=[\r\n\tnew InputOption('background.solid.color.r',[0,1],1),\r\n\tnew InputOption('background.solid.color.g',[0,1],1),\r\n\tnew InputOption('background.solid.color.b',[0,1],1),\r\n\tnew InputOption('background.solid.color.a',[0,1],1),\r\n\tnew InputOption('shader.single.color.r',[0,1],1),\r\n\tnew InputOption('shader.single.color.g',[0,1]),\r\n\tnew InputOption('shader.single.color.b',[0,1]),\r\n\tnew InputOption('shader.single.color.a',[0,1],1),\r\n\tnew InputOption('shape.gasket.depth',[0,10,1],6),\r\n];\r\nOptions.prototype.transformOptions=[\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tnew InputOption('rotate.x',[-180,180],0),\r\n\tnew InputOption('rotate.x.speed',[-360,360],0),\r\n\tnew InputOption('rotate.y',[-180,180],0),\r\n\tnew InputOption('rotate.y.speed',[-360,360],0),\r\n\tnew InputOption('rotate.z',[-180,180],0),\r\n\tnew InputOption('rotate.z.speed',[-360,360],0),\r\n];\r\nOptions.prototype.debugOptions=[\r\n\tnew DebugOption('debugShader',true),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptions.prototype.reset=function(){\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.transformOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n};\r\n\r\n// TODO check what .has*() fns are in use\r\nOptions.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptions.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptions.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptions.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nOptions.prototype.cloneWithoutHidden=function(){\r\n\t// clone and set .input=constant for hidden sections\r\n\tvar newOptions=new Options();\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\t[this.inputOptions,this.transformOptions].forEach(function(section){\r\n\t\tsection.forEach(function(option){\r\n\t\t\tnewOptions[option.name]=this[option.name];\r\n\t\t\tif (\r\n\t\t\t\tthis.generalOptions.some(function(generalOption){\r\n\t\t\t\t\treturn generalOption.doesValueHideOption(this[generalOption.name],option);\r\n\t\t\t\t},this)\r\n\t\t\t) {\r\n\t\t\t\tnewOptions[option.name+'.input']='constant';\r\n\t\t\t} else {\r\n\t\t\t\tnewOptions[option.name+'.input']=this[option.name+'.input'];\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\treturn newOptions;\r\n};\r\n\r\nmodule.exports=Options;\r\n"],"sourceRoot":"."}