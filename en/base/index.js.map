{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/main.js","src/options.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","options","i18n","floatOptionValue","name","toFixed","colorValue","prefix","indentLines","level","lines","map","line","Array","join","appendLinesToLastLine","addedLines","lastLine","pop","indent","exec","forEach","push","generateInputLines","concat","apply","inputOptions","filter","option","availableValues","generateInputHandlerLines","eventListener","onlyInput","getOnlyInputFor","animation","hasInputsFor","hasAllInputsFor","c","generateRenderLines","renderInner","background","shape","needUpdateCanvasFunction","hasInputs",2,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","id","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.animation","options.animation.none","options.animation.rotation","options.input","options.fragmentColor.r","options.fragmentColor.g","options.fragmentColor.b","options.*.input","$","each","updateCode","text","window","hljs","highlightBlock","writeGeneralOption","append","availableValue","val","change","this","value","writeInputOption","checkboxId","attr","parseFloat","prop","container","empty","generalOptions","click","open","./code.js","./options.js",3,"Option","defaultValue","undefined","reset","prototype","some","indexOf","every","matchedOptions"],"mappings":"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AAA0C,aACA,UACA,WACA,2BACA,iBACA,uBACA,KACA,gBAEA,yDACA,YAAA1C,EAAAiC,WACA,gCACA,4BACA,iBACA,yCACA,yCACA,2BACA,YACA,WACA,qBACA,OAEA,4BACA,iBACA,0BACA,OAEA,YACA,4DACA,6BACAjC,EAAAkC,aAAA,kBACA,+BACA,iBACA,0CACA,OAEA,iBACA,uBAAA7B,EAAA,iBAAA,SACA,OAEA,YACA,UACA,SACA,QACA,4DACA,UACAiB,KACA,WACA,6DACA,wDACA,mDACA,oCACA,gHACA,4DACA,uDACA,sCACA,oHACA,oCACA,2CACA,6CACA,6BACA,oBACA,KACA,IACA,mDACA,gFACA,SAAAtB,EAAAuC,YACA,wCAEA,4BACA,oDACA,qDACA,MACA,2BACA,KACA,UAAAvC,EAAAwC,OACA,oBACA,mCACA,eACA,eACA,eACA,eACA,WACA,YAAAxC,EAAAwC,OACA,oBACA,mCACA,kDACA,kDACA,kDACA,WACA,UAAAxC,EAAAwC,OACA,sBACA,4CACA,+CACA,oCACA,cACA,6BACA,+CACA,MACA,0BACA,cACA,yBACA,yBACA,QACA,MACA,qCACA,qBACA,qBACA,qBACA,qBACA,cACA,2BACA,2BACA,2BACA,iCACA,iCACA,iCACA,OACA,MACA,cACA,kBACA,qDACA,qDACA,oDACA,OACA,KACA,+BAEA,IACA,iCACA,0CACA,2DACA,IACA,6DACA,6DACA,4CACA,KACAjC,EAAA,EAAAsB,KAAA,YAAA7B,EAAAiC,WACA,wEACA,QACA1B,EAAA,EAAA8B,MACA,YACA,UACA,YACAxB,KAAA,YCIM8B,GAAG,SAAStD,EAAQU,EAAOJ,GChUjC,QAAAiD,KACA,MAAA,oBAAAC,IAmDA,QAAAC,GAAAC,GAIA,MAAA,gCAAAC,mBAAAD,GAzDA,GAAAF,GAAA,EAkDAI,EAAA5D,EAAA,gBACA6D,EAAA7D,EAAA,aASAY,EAAA,SAAAkD,GACA,OACAC,eAAA,uIAEAC,kBAAA,kBACAC,qBAAA,aACAC,0BAAA,qBACAC,2BAAA,cACAC,gBAAA,gBACAC,uBA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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports=function(options,i18n){\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b');\r\n\t}\r\n\tfunction indentLines(level,lines) {\r\n\t\treturn lines.map(function(line){\r\n\t\t\treturn Array(level+1).join(\"\t\")+line;\r\n\t\t});\r\n\t}\r\n\tfunction appendLinesToLastLine(lines,addedLines) {\r\n\t\tvar lastLine=lines.pop();\r\n\t\tvar indent=/^\\s*/.exec(lastLine)[0];\r\n\t\taddedLines.forEach(function(line,i){\r\n\t\t\tif (i==0) {\r\n\t\t\t\tlines.push(lastLine+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(indent+line);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction generateInputLines() {\r\n\t\treturn [].concat.apply([],\r\n\t\t\toptions.inputOptions.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input'];\r\n\t\t\t}).map(function(option){\r\n\t\t\t\treturn [\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t\"+option.availableValues[0]+\" <input type='range' id='\"+option.name+\"' min='\"+option.availableValues[0]+\"' max='\"+option.availableValues[1]+\"' step='any' value='\"+floatOptionValue(option.name)+\"'> \"+option.availableValues[1],\r\n\t\t\t\t\t\"</div>\",\r\n\t\t\t\t];\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tfunction generateInputHandlerLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction eventListener() {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor('fragmentColor');\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"[].forEach.call(document.querySelectorAll('[id^=\\\"fragmentColor.\\\"]'),function(el){\",\r\n\t\t\t\t\t\"\tel\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"document.getElementById('\"+onlyInput.name+\"')\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\".addEventListener('change',updateFragmentColor);\",\r\n\t\t\t\t]);\r\n\t\t\t} else {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\".addEventListener('change',function(){\",\r\n\t\t\t\t\t\"\tupdateFragmentColor();\",\r\n\t\t\t\t\t\"\tupdateCanvas();\",\r\n\t\t\t\t\t\"});\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"});\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.hasInputsFor('fragmentColor')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var fragmentColorLoc=gl.getUniformLocation(program,'fragmentColor');\",\r\n\t\t\t\t\"function updateFragmentColor() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllInputsFor('fragmentColor')) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tgl.uniform3fv(fragmentColorLoc,['r','g','b'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('fragmentColor.'+c).value);\",\r\n\t\t\t\t\t\"\t}));\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\tgl.uniform3fv(fragmentColorLoc,[\"+['r','g','b'].map(function(c){\r\n\t\t\t\t\t\tvar name='fragmentColor.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']) {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+\"]);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateFragmentColor();\"\r\n\t\t\t);\r\n\t\t\teventListener();\r\n\t\t}\r\n\t\tif (lines.length) lines.push(\"\t\");\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateRenderLines() {\r\n\t\tfunction renderInner() {\r\n\t\t\tvar lines=[];\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.uniform1f(rotationAngleLoc,(time-startTime)*360/5000);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.shape=='square') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLE_FAN,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.drawArrays(gl.TRIANGLES,0,nVertices);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=[];\r\n\t\tif (options.animation=='rotation') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar needUpdateCanvasFunction=options.animation=='rotation'||options.hasInputs()\r\n\t\tif (needUpdateCanvasFunction) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateCanvas(time) {\"\r\n\t\t\t);\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tindentLines(1,renderInner())\r\n\t\t\t);\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trequestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options.animation=='rotation') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"requestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"updateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\trenderInner()\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\treturn [].concat([\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t],options.hasInputs()?[\r\n\t\t\"<style>\",\r\n\t\t\"\tlabel {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 15em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"</style>\",\r\n\t]:[],[\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t],options.animation=='rotation'?[\r\n\t\t\"\tuniform float rotationAngle;\",\r\n\t\t\"\tattribute vec2 position;\",\r\n\t\t\"\tvoid main() {\",\r\n\t\t\"\t\tfloat c=cos(radians(rotationAngle));\",\r\n\t\t\"\t\tfloat s=sin(radians(rotationAngle));\",\r\n\t\t\"\t\tgl_Position=vec4(mat2(\",\r\n\t\t\"\t\t\t c, s,\",\r\n\t\t\"\t\t\t-s, c\",\r\n\t\t\"\t\t)*position,0,1);\",\r\n\t\t\"\t}\",\r\n\t]:[\r\n\t\t\"\tattribute vec4 position;\",\r\n\t\t\"\tvoid main() {\",\r\n\t\t\"\t\tgl_Position=position;\",\r\n\t\t\"\t}\",\r\n\t],[\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\t\"\tprecision mediump float;\",\r\n\t],options.hasInputsFor('fragmentColor')?[\r\n\t\t\"\tuniform vec3 fragmentColor;\",\r\n\t\t\"\tvoid main() {\",\r\n\t\t\"\t\tgl_FragColor=vec4(fragmentColor,1.0);\",\r\n\t\t\"\t}\",\r\n\t]:[\r\n\t\t\"\tvoid main() {\",\r\n\t\t\"\t\tgl_FragColor=vec4(\"+colorValue('fragmentColor')+\",1.0);\",\r\n\t\t\"\t}\",\r\n\t],[\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='512' height='512'></canvas>\",\r\n\t\t\"</div>\",\r\n\t],generateInputLines(),[\r\n\t\t\"<script>\",\r\n\t\t\"\tfunction makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\"\t\tvar vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\"\t\tgl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\"\t\tgl.compileShader(vertexShader);\",\r\n\t\t\"\t\tif (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\",\r\n\t\t\"\t\tvar fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\"\t\tgl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\"\t\tgl.compileShader(fragmentShader);\",\r\n\t\t\"\t\tif (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\",\r\n\t\t\"\t\tvar program=gl.createProgram();\",\r\n\t\t\"\t\tgl.attachShader(program,vertexShader);\",\r\n\t\t\"\t\tgl.attachShader(program,fragmentShader);\",\r\n\t\t\"\t\tgl.linkProgram(program);\",\r\n\t\t\"\t\treturn program;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t\",\r\n\t\t\"\tvar canvas=document.getElementById('myCanvas');\",\r\n\t\t\"\tvar gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\",\r\n\t],options.background=='solid'?[\r\n\t\t\"\tgl.clearColor(1.0,1.0,1.0,1.0);\",\r\n\t]:[],[\r\n\t\t\"\tvar program=makeProgram(\",\r\n\t\t\"\t\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\"\t\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\"\t);\",\r\n\t\t\"\tgl.useProgram(program);\",\r\n\t\t\"\t\",\r\n\t],options.shape=='square'?[\r\n\t\t\"\tvar nVertices=4;\",\r\n\t\t\"\tvar vertices=new Float32Array([\",\r\n\t\t\"\t\t-0.5,-0.5,\",\r\n\t\t\"\t\t+0.5,-0.5,\",\r\n\t\t\"\t\t+0.5,+0.5,\",\r\n\t\t\"\t\t-0.5,+0.5,\",\r\n\t\t\"\t]);\",\r\n\t]:[],options.shape=='triangle'?[\r\n\t\t\"\tvar nVertices=3;\",\r\n\t\t\"\tvar vertices=new Float32Array([\",\r\n\t\t\"\t\t-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI),\",\r\n\t\t\"\t\t-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI),\",\r\n\t\t\"\t\t-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI),\",\r\n\t\t\"\t]);\",\r\n\t]:[],options.shape=='gasket'?[\r\n\t\t\"\tvar gasketDepth=6;\",\r\n\t\t\"\tvar nVertices=Math.pow(3,gasketDepth)*3;\",\r\n\t\t\"\tvar vertices=new Float32Array(nVertices*2);\",\r\n\t\t\"\tfunction storeGasketVertices() {\",\r\n\t\t\"\t\tvar iv=0;\",\r\n\t\t\"\t\tfunction pushVertex(v) {\",\r\n\t\t\"\t\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t\tfunction mix(a,b,m) {\",\r\n\t\t\"\t\t\treturn [\",\r\n\t\t\"\t\t\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\"\t\t\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\"\t\t\t];\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t\tfunction triangle(depth,a,b,c) {\",\r\n\t\t\"\t\t\tif (depth<=0) {\",\r\n\t\t\"\t\t\t\tpushVertex(a);\",\r\n\t\t\"\t\t\t\tpushVertex(b);\",\r\n\t\t\"\t\t\t\tpushVertex(c);\",\r\n\t\t\"\t\t\t} else {\",\r\n\t\t\"\t\t\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\"\t\t\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\"\t\t\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\"\t\t\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\"\t\t\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\"\t\t\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\"\t\t\t}\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t\ttriangle(\",\r\n\t\t\"\t\t\tgasketDepth,\",\r\n\t\t\"\t\t\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\"\t\t\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\"\t\t\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\"\t\t);\",\r\n\t\t\"\t}\",\r\n\t\t\"\tstoreGasketVertices();\",\r\n\t]:[],[\r\n\t\t\"\t\",\r\n\t\t\"\tvar buffer=gl.createBuffer();\",\r\n\t\t\"\tgl.bindBuffer(gl.ARRAY_BUFFER,buffer);\",\r\n\t\t\"\tgl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\",\r\n\t\t\"\t\",\r\n\t\t\"\tvar positionLoc=gl.getAttribLocation(program,'position');\",\r\n\t\t\"\tgl.vertexAttribPointer(positionLoc,2,gl.FLOAT,false,0,0);\",\r\n\t\t\"\tgl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateInputHandlerLines()),options.animation=='rotation'?[\r\n\t\t\"\tvar rotationAngleLoc=gl.getUniformLocation(program,'rotationAngle');\",\r\n\t\t\"\t\",\r\n\t]:[],indentLines(1,generateRenderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</body>\",\r\n\t\t\"</html>\",\r\n\t]).join(\"\\n\");\r\n};\r\n",null,"var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\n/*\r\nfunction htmlEncode(value) {\r\n\treturn value.toString()\r\n\t\t.replace(/&/g,'&amp;').replace(/\"/g,'&quot;').replace(/'/g,'&#39;')\r\n\t\t.replace(/</g,'&lt;').replace(/>/g,'&gt;')\r\n\t; // https://github.com/emn178/js-htmlencode/blob/master/src/htmlencode.js\r\n}\r\n*/\r\n\r\n/*\r\nvar OptionsSection=function(){\r\n\tthis.added=[];\r\n};\r\nOptionsSection.prototype.add=function(name,type){\r\n\tfunction getDefaultValue() {\r\n\t\tif (Array.isArray(type)) {\r\n\t\t\treturn\r\n\t\t} else if (type=='bool') {\r\n\t\t\treturn false;\r\n\t\t} else if (type=='color') {\r\n\t\t\treturn {\r\n\t\t\t\tr: 1.0,\r\n\t\t\t\tg: 1.0,\r\n\t\t\t\tb: 1.0,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\tthis.added.push({\r\n\t\tname: name,\r\n\t\ttype: type,\r\n\t\tvalue: getDefaultValue(),\r\n\t});\r\n};\r\n\r\nvar Options=function(){\r\n\t//this.fixed= // TODO stuff like language\r\n\tthis.code=new OptionsSection();\r\n\tthis.code.add('clearBackground','bool');\r\n\tthis.code.add('draw',['triangle','gasket']);\r\n\tthis.code.add('rotate','bool');\r\n\tthis.inputs=new OptionsSection(); // TODO recreate based on this.code\r\n\tthis.inputs.add('fragmentColor','color');\r\n};\r\n*/\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.animation': 'Animation',\r\n\t\t'options.animation.none': 'None',\r\n\t\t'options.animation.rotation': 'Rotation around z axis',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.fragmentColor.r': 'Fragment color red component',\r\n\t\t'options.fragmentColor.g': 'Fragment color green component',\r\n\t\t'options.fragmentColor.b': 'Fragment color blue component',\r\n\t\t'options.*.input': 'Make this input available to users',\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar container=$(this);\r\n\t\tvar options=new Options();\r\n\t\tvar code;\r\n\t\tfunction updateCode() {\r\n\t\t\tcode.text(generateCode(options,i18n));\r\n\t\t\tif (window.hljs) hljs.highlightBlock(code[0]);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar checkboxId=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \"+option.availableValues[0]+\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='range' id='\"+id+\"' step='any'>\")\r\n\t\t\t\t\t\t.attr('min',option.availableValues[0])\r\n\t\t\t\t\t\t.attr('max',option.availableValues[1])\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \"+option.availableValues[1]+\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+checkboxId+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name+'.input'])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name+'.input']=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+checkboxId+\"'>\"+i18n('options.*.input')+\"</label>\");\r\n\t\t}\r\n\t\tcontainer.empty().append(\r\n\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t)\r\n\t\t).append(\r\n\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t)\r\n\t\t).append(\r\n\t\t\t$(\"<pre>\").append(code=$(\"<code>\").text(generateCode(options,i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock(code[0]);\r\n\t\t} else {\r\n\t\t\tcontainer.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\tcontainer.append(\r\n\t\t\t$(\"<div>\").append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri(code.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" running in new window doesn't work in Internet Explorer\"\r\n\t\t\t)\r\n\t\t);\r\n\t});\r\n});\r\n","Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues;\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\n\r\nvar Options=function(){\r\n\tthis.reset();\r\n};\r\nOptions.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shape',['square','triangle','gasket']),\r\n\tnew Option('animation',['none','rotation']),\r\n];\r\nOptions.prototype.inputOptions=[\r\n\tnew Option('fragmentColor.r',[0,1],1),\r\n\tnew Option('fragmentColor.g',[0,1]),\r\n\tnew Option('fragmentColor.b',[0,1]),\r\n];\r\nOptions.prototype.reset=function(){\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']=false;\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input'];\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).some(function(option){\r\n\t\treturn this[option.name+'.input'];\r\n\t},this);\r\n};\r\nOptions.prototype.hasAllInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).every(function(option){\r\n\t\treturn this[option.name+'.input'];\r\n\t},this);\r\n};\r\nOptions.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input'];\r\n\t},this);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nmodule.exports=Options;\r\n"],"sourceRoot":"."}