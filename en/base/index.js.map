{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","index.js","src/listeners.js","src/main.js","src/options.js","src/shapes.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","listeners","shapes","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","glslColorValue","g","b","isMousemoveInput","indexOf","indentLines","level","lines","map","line","Array","join","appendLinesToLastLine","addedLines","lastLine","pop","indent","exec","forEach","push","makeShape","shape","Square","shader","Triangle","Gasket","Cube","generateVertexShaderLines","use2dTransform","dim","needsTransform","needAspectUniform","hasInputsFor","needAspectConstant","d","D","toUpperCase","optName","varName","needsUniform","projection","transformOrder","transformName","rotate.x","rotate.y","rotate.z","generateFragmentShaderLines","generateControlMessageLines","writeOptionGroup","group","filter","option","inputOptions","transformOptions","concat","generateInputLines","getMinLabel","getStep","getMin","getMax","getMaxLabel","generateMakeProgramLines","debugShader","generateInputHandlerLines","writeListener","listener","write","isAnimated","debugInputs","canvasUpdater","canvasListener","wh","SliderListener","enter","log","post","colorStates","optionPrefix","updateFnName","stateVarPrefix","c","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","colorMultipleListeners","canvasMousemoveListener","prexy","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","CanvasMousemoveListener","cond","updateName","entry","state","generateRenderLines","renderInner","renderInnerTransforms","needStartTime","needPrevTime","needWrap","innerTransformsLines","background","writeDraw","innerLines","needUpdateCanvasFunction","hasInputs","hasSliderInputs","writeInit","./listeners.js","./shapes.js",2,"Listener","this","entries","prototype","makePushArgs","where","arguments","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","match","id","Object","create","constructor","query","xLine","yLine",3,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","message.hljs","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shader.face","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.projection","options.projection.ortho","options.projection.perspective","options.input","options.canvas.width","options.canvas.height","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shape.gasket.depth","options.animation.rotation.speed","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShader","options.debugInputs","controls.type.mousemovex","controls.type.mousemovey","controls.to","$","each","showHideSuboptionInputs","optionName","optionValue","$options","find","show","not","hide","updateCode","clearTimeout","codeUpdateTimeoutId","setTimeout","$code","text","cloneWithoutHidden","window","hljs","highlightBlock","codeUpdateDelay","writeGeneralOption","append","availableValues","availableValue","val","change","value","writeInputOption","inputListener","that","checkValidity","parseFloat","sliderInput","numberInput","inputId","attr","getSetupStep","on","click","defaultValue","availableInputTypes","availableInputType","writeDebugOption","prop","makeSortable","$sortableRoot","callback","$dragged","children","prepend","ev","parent","originalEvent","dataTransfer","effectAllowed","setData","setDragImage","addClass","keydown","$handle","$sorted","keyCode","prev","before","focus","next","after","preventDefault","dropEffect","$target","nextAll","is","prevAll","removeClass","writeOptions","$transforms","generalOptions","transforms","transform","debugOptions","get","hideSuboptionInputs","writeButtons","open","$container","empty","./code.js","./options.js",4,"Option","undefined","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","replace","FloatInputOption","IntInputOption","CanvasIntInputOption","DebugOption","reset","valueOption","speedOption","some","matchedOptions","endsWith","suffix","newOptions","section","generalOption",5,"Shape","shaderType","usesElements","glPrimitive","cv","writeArrays","depth","isDepthChanges"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var listeners=require('./listeners.js');\r\nvar shapes=require('./shapes.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction glslColorValue(prefix) {\r\n\t\tvar r=floatOptionValue(prefix+'.r');\r\n\t\tvar g=floatOptionValue(prefix+'.g');\r\n\t\tvar b=floatOptionValue(prefix+'.b');\r\n\t\tvar a=floatOptionValue(prefix+'.a');\r\n\t\tif (r==a && g==a && b==a) {\r\n\t\t\treturn a; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn r+\",\"+g+\",\"+b+\",\"+a;\r\n\t\t}\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\tfunction indentLines(level,lines) {\r\n\t\treturn lines.map(function(line){\r\n\t\t\treturn Array(level+1).join(\"\t\")+line;\r\n\t\t});\r\n\t}\r\n\tfunction appendLinesToLastLine(lines,addedLines) {\r\n\t\tvar lastLine=lines.pop();\r\n\t\tvar indent=/^\\s*/.exec(lastLine)[0];\r\n\t\taddedLines.forEach(function(line,i){\r\n\t\t\tif (i==0) {\r\n\t\t\t\tlines.push(lastLine+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(indent+line);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction makeShape() {\r\n\t\tif (options.shape=='square') {\r\n\t\t\treturn new shapes.Square(options.shader);\r\n\t\t} else if (options.shape=='triangle') {\r\n\t\t\treturn new shapes.Triangle(options.shader);\r\n\t\t} else if (options.shape=='gasket') {\r\n\t\t\treturn new shapes.Gasket(options.shader,intOptionValue('shape.gasket.depth'),options['shape.gasket.depth.input']!='constant');\r\n\t\t} else if (options.shape=='cube') {\r\n\t\t\treturn new shapes.Cube(options.shader);\r\n\t\t}\r\n\t}\r\n\tvar shape=makeShape();\r\n\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\tshape.dim==2 &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar needAspectUniform=options.hasInputsFor('canvas');\r\n\t\tvar needAspectConstant=!needAspectUniform && options['canvas.width']!=options['canvas.height'];\r\n\t\tvar lines=[];\r\n\t\tif (needAspectUniform) {\r\n\t\t\tlines.push(\"uniform float aspect;\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.push(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.push(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.push(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\" // TODO don't interpolate for shader=='face'\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"void main() {\"\r\n\t\t);\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tfloat c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\"\tfloat s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tfloat c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\"\tfloat s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (needAspectConstant) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfloat aspect=\"+intOptionValue('canvas.width')+\".0/\"+intOptionValue('canvas.height')+\".0;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.projection=='perspective') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tfloat fovy=45.0;\",\r\n\t\t\t\t\"\tfloat near=1.0/tan(radians(fovy)/2.0);\",\r\n\t\t\t\t\"\tfloat far=near+2.0;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tgl_Position=\"\r\n\t\t);\r\n\t\tif (use2dTransform) {\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"vec4(position*mat2(\",\r\n\t\t\t\t\"\tcz, -sz,\",\r\n\t\t\t\t\"\tsz,  cz\",\r\n\t\t\t\t\"),0,1)\"\r\n\t\t\t]);\r\n\t\t} else {\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"position\"\r\n\t\t\t]);\r\n\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tappendLinesToLastLine(lines,{\r\n\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  cx, -sx, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  sx,  cx, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\t cy, 0.0,  sy, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t-sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t],\r\n\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\t cz, -sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t]\r\n\t\t\t\t}[transformName]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (options.projection=='ortho') {\r\n\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"*vec4(1.0/aspect,1.0,-1.0,1.0)\" // correct aspect ratio and make coords right-handed\r\n\t\t\t\t]);\r\n\t\t\t} else if (shape.dim>2) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"*vec4(1.0,1.0,-1.0,1.0)\" // make coords right-handed for 3d shapes\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t} else if (options.projection=='perspective') {\r\n\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\"*mat4( // move center of coords inside view\",\r\n\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\"\t0.0, 0.0, 1.0, -(near+far)/2.0,\",\r\n\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\")\"\r\n\t\t\t]);\r\n\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\"\tnear/aspect, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\"\t0.0,         near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\"\t0.0,         0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\"\t0.0,         0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\")\"\r\n\t\t\t\t]);\r\n\t\t\t} else {\r\n\t\t\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\"\tnear, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\"\t0.0,  near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\"\t0.0,  0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\"\t0.0,  0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\")\"\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tappendLinesToLastLine(lines,[\r\n\t\t\t\";\"\r\n\t\t]);\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tinterpolatedColor=color;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\treturn [\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else if (options.hasInputsFor('shader.single.color')) {\r\n\t\t\treturn [\r\n\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\"+glslColorValue('shader.single.color')+\");\",\r\n\t\t\t\t\"}\",\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\tfunction generateControlMessageLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\tif (lines.length) {\r\n\t\t\treturn [\"<ul>\"].concat(lines,[\"</ul>\"]);\r\n\t\t} else {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\tfunction generateInputLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\",\r\n\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel()+\"</span> \"+\r\n\t\t\t\t\t\t(option.getStep()==1\r\n\t\t\t\t\t\t\t? \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t\t: \"<input type='range' id='\"+option.name+\"' min='\"+option.getMin()+\"' max='\"+option.getMax()+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t)+\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel()+\"</span>\",\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateMakeProgramLines() {\r\n\t\tlines=[\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"\tvar vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(vertexShader);\",\r\n\t\t];\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"\tgl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"\tgl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShader) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"\tif (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.push(\r\n\t\t\t\"\tvar program=gl.createProgram();\",\r\n\t\t\t\"\tgl.attachShader(program,vertexShader);\",\r\n\t\t\t\"\tgl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"\tgl.linkProgram(program);\",\r\n\t\t\t\"\treturn program;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateInputHandlerLines() {\r\n\t\tvar lines=[];\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tlistener.write(!options.isAnimated(),options.debugInputs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction canvasUpdater() {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateAspect() {\",\r\n\t\t\t\t\"\tgl.viewport(0,0,canvas.width,canvas.height);\",\r\n\t\t\t\t\"\tgl.uniform1f(aspectLoc,canvas.width/canvas.height);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateAspect();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction canvasListener(wh) {\r\n\t\t\tvar optName='canvas.'+wh;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"canvas.\"+wh+\"=parseInt(this.value);\")\r\n\t\t\t\t\t.post(\"updateAspect();\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[name+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\t\t\t\t\tvarName+\"=(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('canvas')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var aspectLoc=gl.getUniformLocation(program,'aspect');\"\r\n\t\t\t);\r\n\t\t\tcanvasUpdater();\r\n\t\t\tcanvasListener('width');\r\n\t\t\tcanvasListener('height');\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options['shape.gasket.depth.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('shape.gasket.depth');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t.post(\"storeGasketVertices(parseInt(this.value));\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('shape.gasket.depth')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.prexy(\r\n\t\t\t\t\toptions['shape.gasket.depth.input'],\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\t\t\"var newGasketDepth=Math.floor((gasketMaxDepth+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t\t\t)\r\n\t\t\t\t.cond(\"newGasketDepth!=gasketDepth\")\r\n\t\t\t\t.log(\"console.log('shape.gasket.depth input value:',newGasketDepth);\")\r\n\t\t\t\t.post(\"storeGasketVertices(newGasketDepth);\")\r\n\t\t\t\t.post(\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\" // have to initialize the uniform even if default value is zero because the browser may keep prev value of slider on page reload\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\t\"var \"+varName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\t\toptions[optName+'.input'],\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\t\tvarName+\"=180*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.prexy(\r\n\t\t\t\t\t\toptions[optName+'.speed.input'],\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(ev.clientX-rect.left)/(rect.width-1));\",\r\n\t\t\t\t\t\tvarName+\"Speed=360*(-1+2*(rect.bottom-1-ev.clientY)/(rect.height-1));\"\r\n\t\t\t\t\t)\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\tif (lines.length) lines.push(\"\t\");\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=[];\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tif (options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=[];\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines=lines.concat(\r\n\t\t\t\tinnerTransformsLines,\r\n\t\t\t\tshape.writeDraw()\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=[];\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar needUpdateCanvasFunction=options.isAnimated()||options.hasInputs();\r\n\t\tif (needUpdateCanvasFunction) {\r\n\t\t\tlines.push(\r\n\t\t\t\t\"function updateCanvas(time) {\"\r\n\t\t\t);\r\n\t\t\tlines=lines.concat(indentLines(1,innerLines));\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tif (needPrevTime) {\r\n\t\t\t\t\tlines.push(\r\n\t\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"\trequestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.push(\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t\tif (options.isAnimated()) {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"requestAnimationFrame(updateCanvas);\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(\r\n\t\t\t\t\t\"updateCanvas();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlines=lines.concat(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\treturn [].concat([\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t],options.hasSliderInputs()?[\r\n\t\t\"<style>\",\r\n\t\t\"\tlabel {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 15em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.min {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: right;\",\r\n\t\t\"\t}\",\r\n\t\t\"\t.max {\",\r\n\t\t\"\t\tdisplay: inline-block;\",\r\n\t\t\"\t\twidth: 3em;\",\r\n\t\t\"\t\ttext-align: left;\",\r\n\t\t\"\t}\",\r\n\t\t\"</style>\",\r\n\t]:[],[\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t],indentLines(1,generateVertexShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\t\"\tprecision mediump float;\",\r\n\t],indentLines(1,generateFragmentShaderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='\"+intOptionValue('canvas.width')+\"' height='\"+intOptionValue('canvas.height')+\"'></canvas>\",\r\n\t\t\"</div>\",\r\n\t],generateControlMessageLines(),generateInputLines(),[\r\n\t\t\"<script>\",\r\n\t],indentLines(1,generateMakeProgramLines()),[\r\n\t\t\"\t\",\r\n\t\t\"\tvar canvas=document.getElementById('myCanvas');\",\r\n\t\t\"\tvar gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\",\r\n\t],(\r\n\t\toptions.background=='solid' && !options.hasInputsFor('background.solid.color') && !(\r\n\t\t\t// default clear color in OpenGL\r\n\t\t\toptions['background.solid.color.r']==0 &&\r\n\t\t\toptions['background.solid.color.g']==0 &&\r\n\t\t\toptions['background.solid.color.b']==0 &&\r\n\t\t\toptions['background.solid.color.a']==0\r\n\t\t)\r\n\t)?[\r\n\t\t\"\tgl.clearColor(\"+colorValue('background.solid.color')+\");\",\r\n\t]:[],shape.dim>2?[\r\n\t\t\"\tgl.enable(gl.DEPTH_TEST);\"\r\n\t]:[],[\r\n\t\t\"\tvar program=makeProgram(\",\r\n\t\t\"\t\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\"\t\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\"\t);\",\r\n\t\t\"\tgl.useProgram(program);\",\r\n\t\t\"\t\",\r\n\t],indentLines(1,shape.writeInit()),[\r\n\t\t\"\t\",\r\n\t],indentLines(1,generateInputHandlerLines()),indentLines(1,generateRenderLines()),[\r\n\t\t\"</script>\",\r\n\t\t\"</body>\",\r\n\t\t\"</html>\",\r\n\t]).join(\"\\n\");\r\n};\r\n",null,"var Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tfunction indent(line) {\r\n\t\treturn \"\\t\"+line;\r\n\t}\r\n\tvar outerLines=[];\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push(indent(line));\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines=outerLines.concat(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"updateCanvas();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (innerLines.length) {\r\n\t\tinnerLines=this.innerPrependedLines().concat(innerLines);\r\n\t}\r\n\tif (innerLines.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.concat(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\t[br[0]+match[1]+br[1]]\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tif (innerLines.length) {\r\n\t\treturn outerLines.concat(\r\n\t\t\tthis.wrapCall([].concat(\r\n\t\t\t\t[br[0]+\"function(\"+this.bracketFnArg()+\"){\"],\r\n\t\t\t\tinnerLines.map(indent),\r\n\t\t\t\t[\"}\"+br[1]]\r\n\t\t\t))\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn [].concat(\r\n\t\t[\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\"],\r\n\t\tlines.map(function(line){\r\n\t\t\treturn \"\\t\"+line;\r\n\t\t}),\r\n\t\t[\"});\"]\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\nvar i18n=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shader.face': 'One color per face',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'Cube',\r\n\t\t'options.projection': 'Projection',\r\n\t\t'options.projection.ortho': 'Orthogonal',\r\n\t\t'options.projection.perspective': 'Perspective',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.canvas.width': 'Canvas width',\r\n\t\t'options.canvas.height': 'Canvas height',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'options.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t'options.*.input': 'This value is',\r\n\t\t'options.*.input.constant': 'kept constant',\r\n\t\t'options.*.input.slider': 'updated with a slider',\r\n\t\t'options.*.input.mousemovex': 'updated by moving the mouse horizontally',\r\n\t\t'options.*.input.mousemovey': 'updated by moving the mouse vertically',\r\n\t\t'options.*.input.animated': 'animated',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShader': 'Log shader compilation errors',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar $container=$(this);\r\n\t\tvar $options;\r\n\t\tvar $code;\r\n\t\tvar options=new Options();\r\n\t\tvar codeUpdateTimeoutId=null;\r\n\t\tvar codeUpdateDelay=200;\r\n\r\n\t\tfunction showHideSuboptionInputs(optionName,optionValue) {\r\n\t\t\t// TODO sub-sub option support?\r\n\t\t\t$options.find(\"[data-option^='\"+optionName+\".']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+optionName+\".\"+optionValue+\".']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tclearTimeout(codeUpdateTimeoutId);\r\n\t\t\tcodeUpdateTimeoutId=setTimeout(function(){\r\n\t\t\t\t$code.text(generateCode(options.cloneWithoutHidden(),i18n));\r\n\t\t\t\tif (window.hljs) hljs.highlightBlock($code[0]);\r\n\t\t\t},codeUpdateDelay);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option.name,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeInputOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar sliderInput,numberInput;\r\n\t\t\tfunction inputListener(that) {\r\n\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\tthat.val(this.value);\r\n\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\tupdateCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tsliderInput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,numberInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\tnumberInput=$(\"<input type='number' required>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,sliderInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tsliderInput.val(option.defaultValue).change();\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\"</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction makeSortable($sortableRoot,callback) {\r\n\t\t\t// have to make drag handler 'draggable', not the whole item\r\n\t\t\t// because inputs and labels don't like to be inside 'draggable'\r\n\t\t\t// http://stackoverflow.com/questions/13017177/selection-disabled-while-using-html5-drag-and-drop\r\n\t\t\tvar $dragged=null;\r\n\t\t\t$sortableRoot.children().prepend(\r\n\t\t\t\t$(\"<div draggable='true' tabindex='0' title='Drag or press up/down while in focus to reorder transforms'>\").on('dragstart',function(ev){\r\n\t\t\t\t\t$dragged=$(this).parent();\r\n\t\t\t\t\tev.originalEvent.dataTransfer.effectAllowed='move';\r\n\t\t\t\t\tev.originalEvent.dataTransfer.setData('Text',name);\r\n\t\t\t\t\tif (ev.originalEvent.dataTransfer.setDragImage) { // doesn't work in IE\r\n\t\t\t\t\t\tev.originalEvent.dataTransfer.setDragImage($dragged[0],0,0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$dragged.addClass('ghost');\r\n\t\t\t\t\t},0);\r\n\t\t\t\t})\r\n\t\t\t\t.keydown(function(ev){\r\n\t\t\t\t\tvar $handle=$(this);\r\n\t\t\t\t\tvar $sorted=$handle.parent();\r\n\t\t\t\t\tif (ev.keyCode==38) {\r\n\t\t\t\t\t\t$sorted.prev().before($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (ev.keyCode==40) {\r\n\t\t\t\t\t\t$sorted.next().after($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t).on('dragover',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.originalEvent.dataTransfer.dropEffect='move';\r\n\t\t\t\tvar $target=$(this);\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\tif ($target.nextAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.before($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t} else if ($target.prevAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.after($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).on('drop',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}).on('dragend',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\t$dragged.removeClass('ghost');\r\n\t\t\t\t\t$dragged=null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\tvar $transforms;\r\n\t\t\tvar $options=$(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(writeInputOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\t$transforms=$(\"<div>\").append(\r\n\t\t\t\t\t\toptions.transforms.map(function(transform){\r\n\t\t\t\t\t\t\treturn $(\"<div class='transform' data-transform='\"+transform.name+\"'>\").append(\r\n\t\t\t\t\t\t\t\ttransform.options.map(writeInputOption)\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tmakeSortable($transforms,function(){\r\n\t\t\t\toptions.transformOrder=$transforms.children().map(function(){\r\n\t\t\t\t\treturn $(this).attr('data-transform');\r\n\t\t\t\t}).get();\r\n\t\t\t\tupdateCode();\r\n\t\t\t});\r\n\t\t\treturn $options;\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option.name,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri($code.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri($code.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t$container.empty().append($options=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\t$container.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append($code=$(\"<code>\").text(generateCode(options.cloneWithoutHidden(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock($code[0]);\r\n\t\t} else {\r\n\t\t\t$container.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\t$container.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(this.name+'.') && !optionStartsWith(this.name+'.'+value+'.');\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getMinLabel=function(){\r\n\treturn this.getMin().toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(){\r\n\treturn this.getMax().toString().replace('-','−');\r\n};\r\n\r\nvar FloatInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nFloatInputOption.prototype=Object.create(InputOption.prototype);\r\nFloatInputOption.prototype.constructor=FloatInputOption;\r\nFloatInputOption.prototype.getStep=function(){\r\n\treturn 'any';\r\n};\r\nFloatInputOption.prototype.getSetupStep=function(){\r\n\tif (this.getMax()>=100) {\r\n\t\treturn '0.1';\r\n\t} else if (this.getMax()>=10) {\r\n\t\treturn '0.01';\r\n\t} else {\r\n\t\treturn '0.001';\r\n\t}\r\n};\r\n\r\nvar IntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nIntInputOption.prototype=Object.create(InputOption.prototype);\r\nIntInputOption.prototype.constructor=IntInputOption;\r\nIntInputOption.prototype.getStep=function(){\r\n\treturn 1;\r\n};\r\nIntInputOption.prototype.getSetupStep=function(){\r\n\treturn 1;\r\n};\r\n\r\nvar CanvasIntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tIntInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nCanvasIntInputOption.prototype=Object.create(IntInputOption.prototype);\r\nCanvasIntInputOption.prototype.constructor=CanvasIntInputOption;\r\nCanvasIntInputOption.prototype.availableInputTypes=['constant','slider']; // can't change canvas size by moving mouse over canvas\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar Options=function(){\r\n\tthis.reset();\r\n};\r\nOptions.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex','face']),\r\n\tnew Option('shape',['square','triangle','gasket','cube']),\r\n\tnew Option('projection',['ortho','perspective']),\r\n];\r\nOptions.prototype.inputOptions=[\r\n\tnew CanvasIntInputOption('canvas.width',[1,1024],512),\r\n\tnew CanvasIntInputOption('canvas.height',[1,1024],512),\r\n\tnew FloatInputOption('background.solid.color.r',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.g',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.b',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.r',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.g',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.b',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.a',[0,1],1),\r\n\tnew IntInputOption('shape.gasket.depth',[0,10],6),\r\n];\r\nOptions.prototype.transformOptions=[];\r\nOptions.prototype.transforms=[];\r\n['rotate.x','rotate.y','rotate.z'].forEach(function(name){\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tvar valueOption=new FloatInputOption(name,[-180,180],0);\r\n\tvar speedOption=new FloatInputOption(name+'.speed',[-360,360],0);\r\n\tOptions.prototype.transformOptions.push(valueOption);\r\n\tOptions.prototype.transformOptions.push(speedOption);\r\n\tOptions.prototype.transforms.push({\r\n\t\tname:name,\r\n\t\toptions:[valueOption,speedOption]\r\n\t});\r\n});\r\nOptions.prototype.debugOptions=[\r\n\tnew DebugOption('debugShader',true),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptions.prototype.reset=function(){\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.inputOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.transformOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t\tthis[option.name+'.input']='constant';\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tthis[option.name]=option.defaultValue;\r\n\t},this);\r\n\tthis.transformOrder=Options.prototype.transforms.map(function(transform){\r\n\t\treturn transform.name;\r\n\t});\r\n};\r\n\r\n// TODO check what .has*() fns are in use\r\nOptions.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.hasInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptions.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptions.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptions.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptions.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptions.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\n// TODO create a different class for fixed options; put needsTransform() and like into it\r\nOptions.prototype.cloneWithoutHidden=function(){\r\n\t// clone and set .input=constant for hidden sections\r\n\tvar newOptions=new Options();\r\n\tthis.generalOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\t[this.inputOptions,this.transformOptions].forEach(function(section){\r\n\t\tsection.forEach(function(option){\r\n\t\t\tnewOptions[option.name]=this[option.name];\r\n\t\t\tif (\r\n\t\t\t\tthis.generalOptions.some(function(generalOption){\r\n\t\t\t\t\treturn generalOption.doesValueHideOption(this[generalOption.name],option);\r\n\t\t\t\t},this)\r\n\t\t\t) {\r\n\t\t\t\tnewOptions[option.name+'.input']='constant';\r\n\t\t\t} else {\r\n\t\t\t\tnewOptions[option.name+'.input']=this[option.name+'.input'];\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.debugOptions.forEach(function(option){\r\n\t\tnewOptions[option.name]=this[option.name];\r\n\t},this);\r\n\tnewOptions.transformOrder=this.transformOrder;\r\n\treturn newOptions;\r\n};\r\n\r\nmodule.exports=Options;\r\n","var Shape=function(shaderType){\r\n\tthis.shaderType=shaderType; // 'vertex' or 'face' for colors, anything else for no colors\r\n};\r\nShape.prototype.dim=2;\r\nShape.prototype.usesElements=false;\r\nShape.prototype.glPrimitive='TRIANGLES';\r\nShape.prototype.writeInit=function(){\r\n\tvar c=(this.shaderType=='vertex' || this.shaderType=='face');\r\n\tvar cv=this.shaderType=='vertex';\r\n\tvar lines=this.writeArrays(c,cv);\r\n\tlines.push(\r\n\t\t\"\",\r\n\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\",\r\n\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\",\r\n\t\t\"\"\r\n\t);\r\n\tif (this.usesElements) {\r\n\t\tlines.push(\r\n\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\",\r\n\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\",\r\n\t\t\t\"\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\"\r\n\t);\r\n\tif (c) {\r\n\t\tlines.push(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"\",\r\n\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+this.dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeDraw=function(){\r\n\tif (this.usesElements) {\r\n\t\treturn [\"gl.drawElements(gl.\"+this.glPrimitive+\",nElements,gl.UNSIGNED_SHORT,0);\"];\r\n\t} else {\r\n\t\treturn [\"gl.drawArrays(gl.\"+this.glPrimitive+\",0,nVertices);\"];\r\n\t}\r\n};\r\n\r\nvar Square=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nSquare.prototype=Object.create(Shape.prototype);\r\nSquare.prototype.constructor=Square;\r\nSquare.prototype.glPrimitive='TRIANGLE_FAN';\r\nSquare.prototype.writeArrays=function(c,cv){\r\n\treturn [\r\n\t\t\"var nVertices=4;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t// x    y\"+(c?   \"    r    g    b\":\"\"),\r\n\t\t\"\t-0.5,-0.5,\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,-0.5,\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,+0.5,\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-0.5,+0.5,\"+(c?cv?\" 1.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\",\r\n\t];\r\n};\r\n\r\nvar Triangle=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nTriangle.prototype=Object.create(Shape.prototype);\r\nTriangle.prototype.constructor=Triangle;\r\nTriangle.prototype.writeArrays=function(c,cv){\r\n\treturn [\r\n\t\t\"var nVertices=3;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\",\r\n\t];\r\n};\r\n\r\nvar Gasket=function(shaderType,depth,isDepthChanges){\r\n\tShape.call(this,shaderType);\r\n\tthis.depth=depth; // integer >= 0\r\n\tthis.isDepthChanges=isDepthChanges; // bool, true when depth can change\r\n};\r\nGasket.prototype=Object.create(Shape.prototype);\r\nGasket.prototype.constructor=Gasket;\r\nGasket.prototype.writeArrays=function(c,cv){\r\n\tlines=[];\r\n\tif (this.isDepthChanges) {\r\n\t\tlines.push(\r\n\t\t\t\"var gasketMaxDepth=10;\",\r\n\t\t\t\"var nMaxVertices=Math.pow(3,gasketMaxDepth)*3;\",\r\n\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\"var gasketDepth,nVertices;\",\r\n\t\t\t\"function storeGasketVertices(newGasketDepth) {\",\r\n\t\t\t\"\tgasketDepth=newGasketDepth\",\r\n\t\t\t\"\tnVertices=Math.pow(3,gasketDepth)*3;\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"var gasketDepth=\"+this.depth+\";\",\r\n\t\t\t\"var nVertices=Math.pow(3,gasketDepth)*3;\",\r\n\t\t\t\"var vertices=new Float32Array(nVertices*\"+(c?5:2)+\");\",\r\n\t\t\t\"function storeGasketVertices() {\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"\tvar iv=0;\"\r\n\t);\r\n\tif (this.shaderType=='face') {\r\n\t\tlines.push(\r\n\t\t\t\"\tvar ic=0;\",\r\n\t\t\t\"\tvar colors=[\",\r\n\t\t\t\"\t\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"\t\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"\t];\"\r\n\t\t);\r\n\t}\r\n\tif (this.shaderType=='vertex') {\r\n\t\tlines.push(\r\n\t\t\t\"\tfunction pushVertex(v,r,g,b) {\",\r\n\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\t\tvertices[iv++]=r; vertices[iv++]=g; vertices[iv++]=b;\",\r\n\t\t\t\"\t}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.push(\r\n\t\t\t\"\tfunction pushVertex(v,c) {\",\r\n\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\t\tvertices[iv++]=c[0]; vertices[iv++]=c[1]; vertices[iv++]=c[2];\",\r\n\t\t\t\"\t}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"\tfunction pushVertex(v) {\",\r\n\t\t\t\"\t\tvertices[iv++]=v[0]; vertices[iv++]=v[1];\",\r\n\t\t\t\"\t}\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"\tfunction mix(a,b,m) {\",\r\n\t\t\"\t\treturn [\",\r\n\t\t\"\t\t\ta[0]*(1-m)+b[0]*m,\",\r\n\t\t\"\t\t\ta[1]*(1-m)+b[1]*m,\",\r\n\t\t\"\t\t];\",\r\n\t\t\"\t}\",\r\n\t\t\"\tfunction triangle(depth,a,b,c) {\",\r\n\t\t\"\t\tif (depth<=0) {\"\r\n\t);\r\n\tif (this.shaderType=='vertex') {\r\n\t\tlines.push(\r\n\t\t\t\"\t\t\tpushVertex(a,1.0,0.0,0.0);\",\r\n\t\t\t\"\t\t\tpushVertex(b,0.0,1.0,0.0);\",\r\n\t\t\t\"\t\t\tpushVertex(c,0.0,0.0,1.0);\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.push(\r\n\t\t\t\"\t\t\tpushVertex(a,colors[ic]);\",\r\n\t\t\t\"\t\t\tpushVertex(b,colors[ic]);\",\r\n\t\t\t\"\t\t\tpushVertex(c,colors[ic]);\",\r\n\t\t\t\"\t\t\tic=(ic+1)%colors.length;\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"\t\t\tpushVertex(a);\",\r\n\t\t\t\"\t\t\tpushVertex(b);\",\r\n\t\t\t\"\t\t\tpushVertex(c);\"\r\n\t\t);\r\n\t}\r\n\tlines.push(\r\n\t\t\"\t\t} else {\",\r\n\t\t\"\t\t\tvar ab=mix(a,b,0.5);\",\r\n\t\t\"\t\t\tvar bc=mix(b,c,0.5);\",\r\n\t\t\"\t\t\tvar ca=mix(c,a,0.5);\",\r\n\t\t\"\t\t\ttriangle(depth-1,a,ab,ca);\",\r\n\t\t\"\t\t\ttriangle(depth-1,b,bc,ab);\",\r\n\t\t\"\t\t\ttriangle(depth-1,c,ca,bc);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"\ttriangle(\",\r\n\t\t\"\t\tgasketDepth,\",\r\n\t\t\"\t\t[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\"\t\t[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\"\t\t[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\",\r\n\t\t\"\t);\",\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.isDepthChanges) {\r\n\t\tlines.push(\r\n\t\t\t\"storeGasketVertices(\"+this.depth+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.push(\r\n\t\t\t\"storeGasketVertices();\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nvar Cube=function(shaderType){\r\n\tShape.call(this,shaderType);\r\n};\r\nCube.prototype=Object.create(Shape.prototype);\r\nCube.prototype.constructor=Cube;\r\nCube.prototype.dim=3;\r\nCube.prototype.usesElements=true;\r\nCube.prototype.writeArrays=function(c,cv){\r\n\tif (this.shaderType=='face') {\r\n\t\treturn [\r\n\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\"\t// x    y    z    r    g    b\",\r\n\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 0.0, 0.0, // left face\",\r\n\t\t\t\"\t-0.5,-0.5,+0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\"\t-0.5,+0.5,-0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\"\t-0.5,+0.5,+0.5, 1.0, 0.0, 0.0,\",\r\n\t\t\t\"\t+0.5,-0.5,-0.5, 0.0, 1.0, 0.0, // right face\",\r\n\t\t\t\"\t+0.5,+0.5,-0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\"\t+0.5,-0.5,+0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 1.0, 0.0,\",\r\n\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 1.0, 0.0, // bottom face\",\r\n\t\t\t\"\t+0.5,-0.5,-0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\"\t-0.5,-0.5,+0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\"\t+0.5,-0.5,+0.5, 1.0, 1.0, 0.0,\",\r\n\t\t\t\"\t-0.5,+0.5,-0.5, 0.0, 0.0, 1.0, // top face\",\r\n\t\t\t\"\t-0.5,+0.5,+0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,-0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 0.0, 1.0,\",\r\n\t\t\t\"\t-0.5,-0.5,-0.5, 1.0, 0.0, 1.0, // back face\",\r\n\t\t\t\"\t-0.5,+0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,-0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,-0.5, 1.0, 0.0, 1.0,\",\r\n\t\t\t\"\t-0.5,-0.5,+0.5, 0.0, 1.0, 1.0, // front face\",\r\n\t\t\t\"\t+0.5,-0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\"\t-0.5,+0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\"\t+0.5,+0.5,+0.5, 0.0, 1.0, 1.0,\",\r\n\t\t\t\"]);\",\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new Uint16Array([\",\r\n\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\"]);\",\r\n\t\t];\r\n\t} else {\r\n\t\treturn [\r\n\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\"\t// x    y    z\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\t\"\t-0.5,-0.5,-0.5,\"+(c?\" 0.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\"\t+0.5,-0.5,-0.5,\"+(c?\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\t\"\t-0.5,+0.5,-0.5,\"+(c?\" 0.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\"\t+0.5,+0.5,-0.5,\"+(c?\" 1.0, 1.0, 0.0,\":\"\"),\r\n\t\t\t\"\t-0.5,-0.5,+0.5,\"+(c?\" 0.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\"\t+0.5,-0.5,+0.5,\"+(c?\" 1.0, 0.0, 1.0,\":\"\"),\r\n\t\t\t\"\t-0.5,+0.5,+0.5,\"+(c?\" 0.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\"\t+0.5,+0.5,+0.5,\"+(c?\" 1.0, 1.0, 1.0,\":\"\"),\r\n\t\t\t\"]);\",\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new Uint16Array([\",\r\n\t\t\t\"\t4, 6, 0, 0, 6, 2, // left face\",\r\n\t\t\t\"\t1, 3, 5, 5, 3, 7, // right face\",\r\n\t\t\t\"\t0, 1, 4, 4, 1, 5, // bottom face\",\r\n\t\t\t\"\t2, 6, 3, 3, 6, 7, // top face\",\r\n\t\t\t\"\t0, 2, 1, 1, 2, 3, // back face\",\r\n\t\t\t\"\t5, 7, 4, 4, 7, 6, // front face\",\r\n\t\t\t\"]);\",\r\n\t\t];\r\n\t}\r\n};\r\n\r\nexports.Square=Square;\r\nexports.Triangle=Triangle;\r\nexports.Gasket=Gasket;\r\nexports.Cube=Cube;\r\n"],"sourceRoot":"."}