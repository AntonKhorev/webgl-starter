{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/call-vector.js","webgl-starter.js","src/code.js","src/glsl-vector.js","src/i18n.js","src/lines.js","src/listeners.js","src/main.js","src/options.js","src/shapes.js","src/shapes/cube.js","src/shapes/gasket.js","src/shapes/hat.js","src/shapes/lodshape.js","src/shapes/mesh.js","src/shapes/shape.js","src/shapes/square.js","src/shapes/terrain.js","src/shapes/triangle.js","src/vector.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Lines","Vector","CallVector","varName","optName","components","options","calledFn","calledFnDefaultArgs","this","prototype","Object","create","constructor","getJsInitLines","nSliders","values","every","v","map","formatValue","join","writeJsInterfaceGlslLines","writeJsInterfaceUpdateFnLines","updateFnLines","componentValue","obj","dotIndex","lastIndexOf","slice","c","forEach","addPostToEntryForComponent","entry","addPostToEntryAfterComponents","post","updateFnName","./lines.js","./vector.js",2,"listeners","shapes","GlslVector","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","isMousemoveInput","indexOf","makeShape","className","shape","charAt","toUpperCase","shapeParams","getInputOptionsFor","option","value","changes","min","max","shapeCtorArgs","elements","shader","concat","Function","bind","apply","generateHtmlStyleLines","lines","hasSliderInputs","wrapIfNotEmpty","generateVertexShaderLines","generateMain","d","D","needsTransform","needsUniform","needAspectConstant","projection","needTransformedPosition","use2dTransform","transformOrder","transformName","rotate.x","rotate.y","rotate.z","needAspectUniform","dim","hasInputsFor","indent","generateFragmentShaderLines","colorVector","getGlslDeclarationLines","getGlslValue","lightDirectionVector","twoSided","generateHtmlControlMessageLines","writeOptionGroup","group","filter","inputOptions","transformOptions","generateHtmlInputLines","getMinLabel","getStep","getMaxLabel","lod","generateJsMakeProgramLines","debugShaders","wrap","generateJsInitLines","background","backgroundColorVector","generateJsInputHandlerLines","writeListener","listener","write","writeListenerArgs","canvasUpdater","canvasListener","wh","SliderListener","enter","log","isAnimated","debugInputs","canvasMousemoveListener","CanvasMousemoveListener","getJsInterfaceLines","getInputsFor","prefix","substring","S","undefined","newVarInt","cond","updateName","minMaxVarFloat","state","minMaxFloat","generateJsRenderLines","renderInner","renderInnerTransforms","needStartTime","needPrevTime","needWrap","innerTransformsLines","writeDraw","innerLines","hasInputs","scriptLines","interleave","writeInit","debugArrays","Array","./call-vector.js","./glsl-vector.js","./listeners.js","./shapes.js",3,"modeConstant","modeFloats","inputs","varNameC","nVars","varComponentMap","vecType","vs","equalValues","unshift","modeVector","push",4,"id","message.hljs","message.elements","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shader.face","options.shader.light","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.shape.hat","options.shape.terrain","options.elements","options.elements.0","options.elements.8","options.elements.16","options.elements.32","options.projection","options.projection.ortho","options.projection.perspective","options.input","options.canvas.width","options.canvas.height","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shader.light.direction.x","options.shader.light.direction.y","options.shader.light.direction.z","options.shape.lodShape.lod","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.*.range","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShaders","options.debugArrays","options.debugInputs","options.formatting","options.indent","options.indent.tab","options.indent.2","options.indent.4","options.indent.8","controls.type.mousemovex","controls.type.mousemovey","controls.to",5,"data","addFlattenedArgs","flattenArgs","arguments","isArray","lastLine","pop","level","line","isEmpty","first","begin","end","replace","match",6,"Listener","entries","makePushArgs","where","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","exec","MultipleSliderListener","query","floatHelper","minMaxFlag","varFlag","inputType","minValue","maxValue","VarName","dest","prexy","xLine","yLine",7,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","$","each","showHideSuboptionInputs","optionValue","$options","find","getSuboptionScopePrefix","show","not","getSuboptionHitPrefix","hide","updateCode","clearTimeout","codeUpdateTimeoutId","setTimeout","$code","text","fix","window","hljs","highlightBlock","codeUpdateDelay","writeGeneralOption","$option","append","availableValues","availableValue","val","change","writeInputOption","withRange","inputListener","that","checkValidity","parseFloat","minMaxInput","minOrMax","attr","getMin","getMax","getSetupStep","on","$sliderInput","$numberInput","$inputSelect","$rangeSpan","$rangeMinInput","$rangeMaxInput","inputId","$optionDiv","availableInputTypes","availableInputType","click","defaultValue","writeDebugOption","prop","makeSortable","$sortableRoot","callback","$dragged","children","prepend","ev","parent","originalEvent","dataTransfer","effectAllowed","setData","setDragImage","addClass","keydown","$handle","$sorted","keyCode","prev","before","focus","next","after","preventDefault","dropEffect","$target","nextAll","is","prevAll","removeClass","writeOptions","$transforms","generalOptions","transforms","transform","debugOptions","formattingOptions","get","hideSuboptionInputs","writeButtons","open","$container","empty","./code.js","./i18n.js","./options.js",8,"Option","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","FloatInputOption","IntInputOption","CanvasIntInputOption","DebugOption","OptionsBlueprint","reset","valueOption","speedOption","groupNames","groupName","OptionsInstance","blueprint","isHidden","some","generalOption","getOnlyInputFor","matchedOptions","hasAllSliderInputsFor","endsWith","suffix",9,"Square","Triangle","Gasket","Cube","Hat","Terrain","./shapes/cube.js","./shapes/gasket.js","./shapes/hat.js","./shapes/square.js","./shapes/terrain.js","./shapes/triangle.js",10,"Shape","elementIndexBits","shaderType","writeArrays","cv","appendVertex","iFace","iVertex","firstInFace","vertexLines","cubeVertexPositions","cubeFaceNormals","cubeVertexColors","cubeFaceColors","cubeFaceNames","nCubeVertices","nCubeFaces","cubeFaceVertices","quadToTriangleMap","usesElements","j","k","getElementIndexJsArray","elementLines","../lines.js","./shape.js",11,"LodShape","getDistinctVertexCount","lodSymbol","getFaceVertexCount","getTotalVertexCount","writeStoreShape","writePushVertex","writeTriangle","writeInitialTriangleCall","./lodshape.js",12,"Mesh","writeMeshInit","writeMeshVertex","getNumbersPerNormal","./mesh.js",13,"maxLod","getMaxPossibleLod","nVerticesFn","indexLimit","m","eval","writeArraysAndBufferData","getNumbersPerVertex","writeDebug","writeBufferData",14,15,"glPrimitive","getNumbersPerPosition","getNumbersPerColor","getElementIndexGlType",16,17,"noFaces",18,19,"split","minValues","maxValues","nMousemoves","nonnegativeLimits","capitalize","writeManyListenersLines","writeOneListenerLines","manyListenersLines","oneListenerLines"],"mappings":"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","file":"webgl-starter.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Lines=require('./lines.js');\r\nvar Vector=require('./vector.js');\r\n\r\nvar CallVector=function(varName,optName,components,options,calledFn,calledFnDefaultArgs){\r\n\tVector.call(this,varName,optName,components,options);\r\n\tthis.calledFn=calledFn;\r\n\tthis.calledFnDefaultArgs=calledFnDefaultArgs;\r\n};\r\nCallVector.prototype=Object.create(Vector.prototype);\r\nCallVector.prototype.constructor=CallVector;\r\n// public:\r\nCallVector.prototype.getJsInitLines=function(){\r\n\tif (this.nSliders>0 || this.values.every(function(v,i){\r\n\t\treturn v==this.calledFnDefaultArgs[i];\r\n\t},this)) {\r\n\t\treturn new Lines;\r\n\t}\r\n\treturn new Lines(\r\n\t\tthis.calledFn+\"(\"+this.values.map(this.formatValue).join(\",\")+\");\"\r\n\t);\r\n};\r\n// private:\r\nCallVector.prototype.writeJsInterfaceGlslLines=function(){\r\n\treturn new Lines;\r\n};\r\nCallVector.prototype.writeJsInterfaceUpdateFnLines=function(){\r\n\tvar updateFnLines=new Lines;\r\n\tif (this.nSliders<=1) {\r\n\t\tupdateFnLines.a(\r\n\t\t\tthis.calledFn+\"(\"+this.components.map(this.componentValue,this).join(\",\")+\");\"\r\n\t\t);\r\n\t} else if (this.nSliders==this.components.length) {\r\n\t\tvar obj=this.calledFn;\r\n\t\tvar dotIndex=obj.lastIndexOf('.');\r\n\t\tif (dotIndex>=0) {\r\n\t\t\tobj=obj.slice(0,dotIndex);\r\n\t\t}\r\n\t\tupdateFnLines.a(\r\n\t\t\tthis.calledFn+\".apply(\"+obj+\",[\"+this.components.map(function(c){return \"'\"+c+\"'\"}).join(\",\")+\"].map(function(c){\",\r\n\t\t\t\"\treturn parseFloat(document.getElementById('\"+this.optName+\".'+c).value);\",\r\n\t\t\t\"}));\"\r\n\t\t);\r\n\t} else {\r\n\t\tupdateFnLines.a(\r\n\t\t\tthis.calledFn+\"(\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (i>0) {\r\n\t\t\t\tupdateFnLines.t(\",\");\r\n\t\t\t}\r\n\t\t\tupdateFnLines.a(\r\n\t\t\t\t\"\t\"+this.componentValue(c,i)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\tupdateFnLines.a(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\treturn updateFnLines;\r\n};\r\nCallVector.prototype.addPostToEntryForComponent=function(entry,c){\r\n};\r\nCallVector.prototype.addPostToEntryAfterComponents=function(entry){\r\n\tif (this.nSliders==0) {\r\n\t\tentry.post(\r\n\t\t\tthis.calledFn+\"(\"+this.components.map(this.componentValue,this).join(\",\")+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tentry.post(this.updateFnName()+\"();\");\r\n\t}\r\n};\r\n\r\nmodule.exports=CallVector;\r\n",null,"var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\nvar shapes=require('./shapes.js');\r\nvar CallVector=require('./call-vector.js');\r\nvar GlslVector=require('./glsl-vector.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\r\n\tfunction makeShape() {\r\n\t\tvar className=options.shape.charAt(0).toUpperCase()+options.shape.slice(1);\r\n\t\tvar shapeParams=options.getInputOptionsFor('shape').map(function(option){\r\n\t\t\treturn {\r\n\t\t\t\tvalue: intOptionValue(option.name),\r\n\t\t\t\tchanges: options[option.name+'.input']!='constant',\r\n\t\t\t\tmin: intOptionValue(option.name+'.min'),\r\n\t\t\t\tmax: intOptionValue(option.name+'.max')\r\n\t\t\t};\r\n\t\t});\r\n\t\tvar shapeCtorArgs=[null,parseInt(options.elements),options.shader].concat(shapeParams);\r\n\t\treturn new (Function.prototype.bind.apply(shapes[className],shapeCtorArgs));\r\n\t}\r\n\tvar shape=makeShape();\r\n\tif (options.background=='solid') {\r\n\t\tvar backgroundColorVector=new CallVector('backgroundColor','background.solid.color','rgba',options,'gl.clearColor',[0,0,0,0]);\r\n\t}\r\n\tif (options.shader=='single') {\r\n\t\tvar colorVector=new GlslVector('color','shader.single.color','rgba',options);\r\n\t} else if (options.shader=='light') {\r\n\t\tvar lightDirectionVector=new GlslVector('lightDirection','shader.light.direction','xyz',options);\r\n\t}\r\n\r\n\tfunction generateHtmlStyleLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tif (options.hasSliderInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"label {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 15em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".min {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".max {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: left;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<style>\",\r\n\t\t\t\"</style>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\tshape.dim==2 &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar needAspectUniform=options.hasInputsFor('canvas');\r\n\t\tvar needAspectConstant=!needAspectUniform && options['canvas.width']!=options['canvas.height'];\r\n\t\tvar needTransformedPosition=options.shader=='light' && options.projection=='perspective';\r\n\r\n\t\tfunction generateMain() {\r\n\t\t\tvar lines=new Lines();\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needAspectConstant) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float aspect=\"+intOptionValue('canvas.width')+\".0/\"+intOptionValue('canvas.height')+\".0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float fovy=45.0;\",\r\n\t\t\t\t\t\"float near=1.0/tan(radians(fovy)/2.0);\",\r\n\t\t\t\t\t\"float far=near+2.0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"vec4 transformedPosition=\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (use2dTransform) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"vec4(position*mat2(\",\r\n\t\t\t\t\t\"\tcz, -sz,\",\r\n\t\t\t\t\t\"\tsz,  cz\",\r\n\t\t\t\t\t\"),0,1)\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"position\"\r\n\t\t\t\t);\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4( // move center of coords inside view\",\r\n\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, -(near+far)/2.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=transformedPosition\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0/aspect,1.0,-1.0,1.0)\" // correct aspect ratio and make coords right-handed\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (shape.dim>2) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0,1.0,-1.0,1.0)\" // make coords right-handed for 3d shapes\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear/aspect, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlines.t(\r\n\t\t\t\t\";\"\r\n\t\t\t);\r\n\t\t\tif (options.shader=='light') {\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedView=-vec3(transformedPosition);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (shape.dim>2) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=normal\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=vec3(0.0,0.0,1.0)\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"interpolatedColor=color;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\r\n\t\tvar lines=new Lines();\r\n\t\tif (needAspectUniform) {\r\n\t\t\tlines.a(\"uniform float aspect;\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.a(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.a(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.a(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='light') {\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\"varying vec3 interpolatedView;\");\r\n\t\t\t}\r\n\t\t\tif (shape.dim>2) {\r\n\t\t\t\tlines.a(\"attribute vec3 normal;\");\r\n\t\t\t}\r\n\t\t\tlines.a(\"varying vec3 interpolatedNormal;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"void main() {\",\r\n\t\t\tgenerateMain().indent(),\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"precision mediump float;\"\r\n\t\t);\r\n\t\tif (options.shader=='single') {\r\n\t\t\tlines.a(\r\n\t\t\t\tcolorVector.getGlslDeclarationLines(),\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=\"+colorVector.getGlslValue()+\";\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else if (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else if (options.shader=='light') {\r\n\t\t\tlines.a(\r\n\t\t\t\tlightDirectionVector.getGlslDeclarationLines()\r\n\t\t\t);\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"varying vec3 interpolatedView;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec3 interpolatedNormal;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tvec3 ambientColor=vec3(0.2,0.2,0.2);\",\r\n\t\t\t\t\"\tvec3 diffuseColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tvec3 specularColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tfloat shininess=100.0;\"\r\n\t\t\t);\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=vec3( 0.0, 0.0,+1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=normalize(interpolatedView);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 N=normalize(interpolatedNormal);\"\r\n\t\t\t);\r\n\t\t\tif (shape.twoSided) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (!gl_FrontFacing) N=-N;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 L=normalize(\"+lightDirectionVector.getGlslValue()+\");\",\r\n\t\t\t\t\"\tvec3 H=normalize(L+V);\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\",\r\n\t\t\t\t\"\t\tambientColor\",\r\n\t\t\t\t\"\t\t+diffuseColor*max(0.0,dot(L,N))\",\r\n\t\t\t\t\"\t\t+specularColor*pow(max(0.0,dot(H,N)),shininess)\",\r\n\t\t\t\t\"\t,1.0);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateHtmlControlMessageLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<ul>\",\r\n\t\t\t\"</ul>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateHtmlInputLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\"\r\n\t\t\t\t);\r\n\t\t\t\tif (option.name!='shape.lodShape.lod') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel(options[option.name+'.min'])+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (option.getStep()==1) {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+intOptionValue(option.name+'.min')+\"' max='\"+intOptionValue(option.name+'.max')+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+floatOptionValue(option.name+'.min')+\"' max='\"+floatOptionValue(option.name+'.max')+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel(options[option.name+'.max'])+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel(shape.lod.min)+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+shape.lod.min+\"' max='\"+shape.lod.max+\"' value='\"+shape.lod.value+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel(shape.lod.max)+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsMakeProgramLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"gl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"gl.compileShader(vertexShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"gl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"gl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=gl.createProgram();\",\r\n\t\t\t\"gl.attachShader(program,vertexShader);\",\r\n\t\t\t\"gl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"gl.linkProgram(program);\",\r\n\t\t\t\"return program;\"\r\n\t\t);\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction generateJsInitLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var canvas=document.getElementById('myCanvas');\",\r\n\t\t\t\"var gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\"\r\n\t\t);\r\n\t\tif (options['elements']=='32') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.getExtension('OES_element_index_uint');\" // TODO check if null is returned and don't allow more elements\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.background=='solid') {\r\n\t\t\tlines.a(\r\n\t\t\t\tbackgroundColorVector.getJsInitLines()\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (shape.dim>2) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.enable(gl.DEPTH_TEST);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=makeProgram(\",\r\n\t\t\t\"\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\t\"\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.useProgram(program);\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsInputHandlerLines() {\r\n\t\tvar writeListenerArgs=[!options.isAnimated(),options.debugInputs];\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction canvasUpdater() {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function updateAspect() {\",\r\n\t\t\t\t\"\tgl.viewport(0,0,canvas.width,canvas.height);\",\r\n\t\t\t\t\"\tgl.uniform1f(aspectLoc,canvas.width/canvas.height);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateAspect();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction canvasListener(wh) {\r\n\t\t\tvar optName='canvas.'+wh;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"canvas.\"+wh+\"=parseInt(this.value);\")\r\n\t\t\t\t\t.post(\"updateAspect();\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.hasInputsFor('canvas')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var aspectLoc=gl.getUniformLocation(program,'aspect');\"\r\n\t\t\t);\r\n\t\t\tcanvasUpdater();\r\n\t\t\tcanvasListener('width');\r\n\t\t\tcanvasListener('height');\r\n\t\t}\r\n\t\tif (options.background=='solid') {\r\n\t\t\tlines.a(\r\n\t\t\t\tbackgroundColorVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener)\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='single') {\r\n\t\t\tlines.a(\r\n\t\t\t\tcolorVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener)\r\n\t\t\t);\r\n\t\t} else if (options.shader=='light') {\r\n\t\t\tlines.a(\r\n\t\t\t\tlightDirectionVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener)\r\n\t\t\t);\r\n\t\t}\r\n\t\toptions.getInputsFor('shape').forEach(function(option){\r\n\t\t\tfunction varName(prefix) {\r\n\t\t\t\tvar i=option.name.lastIndexOf('.');\r\n\t\t\t\tvar s=option.name.substring(i+1);\r\n\t\t\t\tvar S=s.charAt(0).toUpperCase()+s.slice(1);\r\n\t\t\t\tif (prefix!==undefined) {\r\n\t\t\t\t\treturn prefix+'Shape'+S;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 'shape'+S;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[option.name+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(option.name);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"storeShape(parseInt(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(option.name)) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.newVarInt(options[option.name+'.input'],varName())\r\n\t\t\t\t\t.cond(varName('new')+\"!=\"+varName())\r\n\t\t\t\t\t.log(\"console.log('\"+option.name+\" input value:',\"+varName('new')+\");\")\r\n\t\t\t\t\t.post(\"storeShape(\"+varName('new')+\");\");\r\n\t\t\t}\r\n\t\t});\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\" // have to initialize the uniform even if default value is zero because the browser may keep prev value of slider on page reload\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.minMaxVarFloat(options[optName+'.input'],varName,'-180','+180')\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.minMaxFloat(options[optName+'.input'],varName,'-180','+180')\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.minMaxFloat(options[optName+'.speed.input'],varName+'Speed','-360','+360')\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=new Lines;\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tif (options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=new Lines;\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\tinnerTransformsLines,\r\n\t\t\t\tshape.writeDraw()\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=new Lines;\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// wrap inner render lines in function if needed\r\n\t\tif (options.isAnimated()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function renderFrame(time) {\",\r\n\t\t\t\tinnerLines.indent()\r\n\t\t\t);\r\n\t\t\tif (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\trequestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"requestAnimationFrame(renderFrame);\"\r\n\t\t\t);\r\n\t\t} else if (options.hasInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var frameId=null;\",\r\n\t\t\t\t\"function renderFrame() {\",\r\n\t\t\t\tinnerLines.indent(),\r\n\t\t\t\t\"\tframeId=null;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"function scheduleFrame() {\",\r\n\t\t\t\t\"\tif (frameId===null) {\",\r\n\t\t\t\t\"\t\tframeId=requestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"scheduleFrame();\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\tvar scriptLines=new Lines;\r\n\tscriptLines.interleave(\r\n\t\tgenerateJsMakeProgramLines(),\r\n\t\tgenerateJsInitLines(),\r\n\t\tshape.writeInit(options.debugArrays),\r\n\t\tgenerateJsInputHandlerLines(),\r\n\t\tgenerateJsRenderLines()\r\n\t).wrap(\r\n\t\t\"<script>\",\r\n\t\t\"</script>\"\r\n\t);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t\tgenerateHtmlStyleLines(),\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t\tgenerateVertexShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\tgenerateFragmentShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='\"+intOptionValue('canvas.width')+\"' height='\"+intOptionValue('canvas.height')+\"'></canvas>\",\r\n\t\t\"</div>\",\r\n\t\tgenerateHtmlControlMessageLines(),\r\n\t\tgenerateHtmlInputLines(),\r\n\t\tscriptLines,\r\n\t\t\"</body>\",\r\n\t\t\"</html>\"\r\n\t);\r\n\treturn lines.join(\r\n\t\toptions.indent=='tab' ? '\\t' : Array(parseInt(options.indent)+1).join(' ')\r\n\t);\r\n};\r\n","var Lines=require('./lines.js');\r\nvar Vector=require('./vector.js');\r\n\r\nvar GlslVector=function(varName,optName,components,options){\r\n\tVector.call(this,varName,optName,components,options);\r\n};\r\nGlslVector.prototype=Object.create(Vector.prototype);\r\nGlslVector.prototype.constructor=GlslVector;\r\n// public:\r\nGlslVector.prototype.getGlslDeclarationLines=function(){\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t} else if (this.modeFloats) {\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"uniform float \"+this.varNameC(c)+\";\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t} else {\r\n\t\treturn new Lines(\r\n\t\t\t\"uniform vec\"+this.nVars+\" \"+this.varName+\";\"\r\n\t\t);\r\n\t}\r\n};\r\nGlslVector.prototype.getGlslValue=function(){\r\n\tvar vecType=\"vec\"+this.values.length;\r\n\tfunction varComponentMap(c,i) {\r\n\t\tif (this.inputs[i]=='constant') {\r\n\t\t\treturn this.formatValue(this.values[i]);\r\n\t\t} else {\r\n\t\t\treturn this.varNameC(c);\r\n\t\t}\r\n\t}\r\n\tvar vs=this.components.map(varComponentMap,this);\r\n\tif (this.modeConstant) {\r\n\t\tvar equalValues=vs.every(function(v){\r\n\t\t\treturn v==vs[0];\r\n\t\t});\r\n\t\tif (equalValues) {\r\n\t\t\treturn vecType+\"(\"+vs[0]+\")\"; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n\t\t}\r\n\t} else if (!this.modeFloats) {\r\n\t\tvs=vs.slice(this.nVars);\r\n\t\tif (vs.length==0) {\r\n\t\t\treturn this.varName;\r\n\t\t}\r\n\t\tvs.unshift(this.varName);\r\n\t}\r\n\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n};\r\n// private:\r\nGlslVector.prototype.writeJsInterfaceGlslLines=function(){\r\n\tlines=new Lines;\r\n\tif (this.modeFloats) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var \"+this.varNameC(c)+\"Loc=gl.getUniformLocation(program,'\"+this.varNameC(c)+\"');\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var \"+this.varName+\"Loc=gl.getUniformLocation(program,'\"+this.varName+\"');\"\r\n\t\t);\r\n\t}\r\n\tif (this.nSliders==0 && this.modeVector) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.uniform\"+this.nVars+\"f(\"+this.varName+\"Loc\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='constant') {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\",\"+this.formatValue(this.values[i])\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tlines.t(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t} else if (this.nSliders==0) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='constant') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.formatValue(this.values[i])+\");\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t}\r\n\treturn lines;\r\n};\r\nGlslVector.prototype.writeJsInterfaceUpdateFnLines=function() {\r\n\tvar updateFnLines=new Lines;\r\n\tif (this.modeFloats) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tupdateFnLines.a(\r\n\t\t\t\t\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.componentValue(c,i)+\");\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t} else {\r\n\t\tupdateFnLines.a(\r\n\t\t\t\"gl.uniform\"+this.nVars+\"f(\"+this.varName+\"Loc\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tupdateFnLines.t(\r\n\t\t\t\t\",\",\r\n\t\t\t\t\"\t\"+this.componentValue(c,i)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\tupdateFnLines.a(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\treturn updateFnLines;\r\n};\r\nGlslVector.prototype.addPostToEntryForComponent=function(entry,c){\r\n\tif (this.nSliders==0 && this.modeVector) {\r\n\t\t// written at the end as a vector\r\n\t} else if (this.nSliders==0) {\r\n\t\tentry.post(\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.varNameC(c)+\");\");\r\n\t} else {\r\n\t\tentry.post(this.updateFnName()+\"();\");\r\n\t}\r\n};\r\nGlslVector.prototype.addPostToEntryAfterComponents=function(entry){\r\n\tif (this.nSliders==0 && this.modeVector) {\r\n\t\tvar vs=[];\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (i<this.nVars) {\r\n\t\t\t\tvs.push(this.varNameC(c));\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tentry.post(\"gl.uniform\"+this.nVars+\"f(\"+this.varName+\"Loc,\"+vs.join(\",\")+\");\");\r\n\t}\r\n};\r\n\r\nmodule.exports=GlslVector;\r\n","module.exports=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\t\t'message.elements': \"choosing 8- or 16-bit index may limit available shape detail levels\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shader.face': 'One color per face',\r\n\t\t'options.shader.light': 'Directional light',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'Cube',\r\n\t\t'options.shape.hat': 'Mexican hat function', // wp: Mexican hat wavelet\r\n\t\t'options.shape.terrain': 'Diamond-square fractal terrain', // wp: Diamond-square algorithm\r\n\t\t'options.elements': 'Element array',\r\n\t\t'options.elements.0': 'not used',\r\n\t\t'options.elements.8': 'with 8-bit index',\r\n\t\t'options.elements.16': 'with 16-bit index',\r\n\t\t'options.elements.32': 'with 32-bit index',\r\n\t\t'options.projection': 'Projection',\r\n\t\t'options.projection.ortho': 'Orthogonal',\r\n\t\t'options.projection.perspective': 'Perspective',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.canvas.width': 'Canvas width',\r\n\t\t'options.canvas.height': 'Canvas height',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shader.light.direction.x': 'Light direction x component',\r\n\t\t'options.shader.light.direction.y': 'Light direction y component',\r\n\t\t'options.shader.light.direction.z': 'Light direction z component',\r\n\t\t'options.shape.lodShape.lod': 'Shape detail level', // recursion depth for fractal shapes\r\n\t\t'options.*.input': 'Input method',\r\n\t\t'options.*.input.constant': 'none',\r\n\t\t'options.*.input.slider': 'slider',\r\n\t\t'options.*.input.mousemovex': 'mouse x axis',\r\n\t\t'options.*.input.mousemovey': 'mouse y axis',\r\n\t\t'options.*.input.animated': 'animated',\r\n\t\t'options.*.range': 'with range',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShaders': 'Log shader compilation errors',\r\n\t\t'options.debugArrays': 'Log allocated array sizes',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'options.formatting': 'Code formatting options',\r\n\t\t'options.indent': 'Indent',\r\n\t\t'options.indent.tab': 'Tab',\r\n\t\t'options.indent.2': '2 spaces',\r\n\t\t'options.indent.4': '4 spaces',\r\n\t\t'options.indent.8': '8 spaces',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n","/*\r\n.a = add AFTER last line\r\n.t = add TO last line\r\n*/\r\n\r\nvar Lines=function(){\r\n\tthis.data=[];\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n};\r\n\r\n// private\r\nLines.prototype.flattenArgs=function(s){\r\n\tvar r=[];\r\n\tfor (var i=0;i<s.length;i++) {\r\n\t\tif (typeof s[i] == 'string') {\r\n\t\t\tr.push(s[i]);\r\n\t\t} else if (Array.isArray(s[i])) {\r\n\t\t\tArray.prototype.push.apply(r,s[i]);\r\n\t\t} else if (s[i] instanceof Lines) {\r\n\t\t\tArray.prototype.push.apply(r,s[i].data);\r\n\t\t}\r\n\t}\r\n\treturn r;\r\n};\r\nLines.prototype.addFlattenedArgs=function(s){\r\n\tArray.prototype.push.apply(this.data,s);\r\n};\r\n\r\n// public\r\nLines.prototype.a=function(){\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n\treturn this;\r\n};\r\nLines.prototype.t=function(){\r\n\tvar lastLine=this.data.pop();\r\n\tvar s=this.flattenArgs(arguments);\r\n\ts[0]=lastLine+s[0];\r\n\tthis.addFlattenedArgs(s);\r\n\treturn this;\r\n};\r\nLines.prototype.indent=function(level){\r\n\tif (level===undefined) {\r\n\t\tlevel=1;\r\n\t}\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn Array(level+1).join('\\t')+line;\r\n\t});\r\n\treturn this;\r\n};\r\nLines.prototype.isEmpty=function(){\r\n\treturn this.data.length<=0;\r\n};\r\nLines.prototype.interleave=function(){\r\n\tvar first=true;\r\n\tfor (var i=0;i<arguments.length;i++) {\r\n\t\tvar r=this.flattenArgs([arguments[i]]);\r\n\t\tif (r.length>0) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst=false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.data.push('');\r\n\t\t\t}\r\n\t\t\tthis.addFlattenedArgs(r);\r\n\t\t}\r\n\t}\r\n\treturn this;\r\n};\r\nLines.prototype.wrap=function(begin,end){\r\n\tthis.indent();\r\n\tthis.data.unshift(begin);\r\n\tthis.data.push(end);\r\n\treturn this;\r\n};\r\nLines.prototype.wrapIfNotEmpty=function(begin,end){\r\n\tif (!this.isEmpty()) {\r\n\t\tthis.wrap(begin,end);\r\n\t}\r\n\treturn this;\r\n};\r\n/*\r\nLines.prototype.wrapEachLine=function(begin,end){\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn begin+line+end;\r\n\t});\r\n\treturn this;\r\n};\r\n*/\r\nLines.prototype.join=function(indent){\r\n\treturn this.data.map(function(line){\r\n\t\treturn line.replace(/^(\\t)+/,function(match){\r\n\t\t\treturn Array(match.length+1).join(indent);\r\n\t\t});\r\n\t}).join('\\n');\r\n};\r\n\r\nmodule.exports=Lines;\r\n","var Lines=require('./lines.js');\r\n\r\nvar Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tvar outerLines=new Lines;\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push('\\t'+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn new Lines(lines);\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines.a(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"scheduleFrame();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (!innerLines.isEmpty()) {\r\n\t\tinnerLines=new Lines(\r\n\t\t\tthis.innerPrependedLines(),\r\n\t\t\tinnerLines\r\n\t\t);\r\n\t}\r\n\tif (innerLines.data.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines.data[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.a(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\tnew Lines(\r\n\t\t\t\t\t\tbr[0]+match[1]+br[1]\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t// TODO what if no match?\r\n\t}\r\n\tif (innerLines.data.length) {\r\n\t\treturn outerLines.a(\r\n\t\t\tthis.wrapCall(\r\n\t\t\t\tinnerLines.wrap(\r\n\t\t\t\t\tbr[0]+\"function(\"+this.bracketFnArg()+\"){\",\r\n\t\t\t\t\t\"}\"+br[1]\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn lines.wrap(\r\n\t\t\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\",\r\n\t\t\"});\"\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tfunction floatHelper(minMaxFlag,varFlag,inputType,varName,minValue,maxValue){\r\n\t\tvar VarName=varName.charAt(0).toUpperCase()+varName.slice(1);\r\n\t\tif (minValue==0 && maxValue==1) {\r\n\t\t\tvar dest=(varFlag?\"var \":\"\")+varName+\"=\";\r\n\t\t} else {\r\n\t\t\tproxy.pre(\"var min\"+VarName+\"=\"+minValue+\";\");\r\n\t\t\tproxy.pre(\"var max\"+VarName+\"=\"+maxValue+\";\");\r\n\t\t\tvar dest=(varFlag?\"var \":\"\")+varName+\"=min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\")*\";\r\n\t\t}\r\n\t\treturn proxy.prexy(\r\n\t\t\tinputType,\r\n\t\t\tdest+\"(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\tdest+\"(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t);\r\n\t}\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\tproxy.minMaxFloat=function(inputType,varName,minValue,maxValue){\r\n\t\treturn floatHelper(true,false,inputType,varName,minValue,maxValue);\r\n\t};\r\n\tproxy.minMaxVarFloat=function(inputType,varName,minValue,maxValue){\r\n\t\treturn floatHelper(true,true,inputType,varName,minValue,maxValue);\r\n\t};\r\n\tproxy.newVarInt=function(inputType,varName){\r\n\t\tvar VarName=varName.charAt(0).toUpperCase()+varName.slice(1);\r\n\t\treturn proxy.prexy(\r\n\t\t\tinputType,\r\n\t\t\t\"var new\"+VarName+\"=Math.floor(min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\"+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\"var new\"+VarName+\"=Math.floor(min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\"+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t);\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar i18n=require('./i18n.js');\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar $container=$(this);\r\n\t\tvar $options;\r\n\t\tvar $code;\r\n\t\tvar options=new Options();\r\n\t\tvar codeUpdateTimeoutId=null;\r\n\t\tvar codeUpdateDelay=200;\r\n\r\n\t\tfunction showHideSuboptionInputs(option,optionValue) {\r\n\t\t\t$options.find(\"[data-option^='\"+option.getSuboptionScopePrefix()+\"']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+option.getSuboptionHitPrefix(optionValue)+\"']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tclearTimeout(codeUpdateTimeoutId);\r\n\t\t\tcodeUpdateTimeoutId=setTimeout(function(){\r\n\t\t\t\t$code.text(generateCode(options.fix(),i18n));\r\n\t\t\t\tif (window.hljs) hljs.highlightBlock($code[0]);\r\n\t\t\t},codeUpdateDelay);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar $option=$(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tif (option.name=='elements') {\r\n\t\t\t\t$option.append(\" \"+i18n('message.elements'));\r\n\t\t\t}\r\n\t\t\treturn $option;\r\n\t\t}\r\n\t\tfunction writeInputOption(option,withRange) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar $sliderInput,$numberInput;\r\n\t\t\tvar $inputSelect;\r\n\t\t\tvar $rangeSpan,$rangeMinInput,$rangeMaxInput;\r\n\t\t\tfunction inputListener(that) {\r\n\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\tthat.val(this.value);\r\n\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\tupdateCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction minMaxInput(minOrMax) {\r\n\t\t\t\treturn $(\"<input type='number' required>\")\r\n\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t.val(options[option.name+'.'+minOrMax])\r\n\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\t\t\toptions[option.name+'.'+minOrMax]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tvar $optionDiv=$(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$sliderInput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,$numberInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$numberInput=$(\"<input type='number' required>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,$sliderInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\":</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$inputSelect=$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tif (withRange) {\r\n\t\t\t\t\t\t\tif (this.value=='constant') {\r\n\t\t\t\t\t\t\t\t$rangeSpan.hide();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$rangeSpan.show();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tif (withRange) {\r\n\t\t\t\t$optionDiv.append(\" \").append(\r\n\t\t\t\t\t$rangeSpan=$(\"<span class='range'>\")\r\n\t\t\t\t\t\t.append(i18n('options.*.range')+\" \")\r\n\t\t\t\t\t\t.append($rangeMinInput=minMaxInput('min'))\r\n\t\t\t\t\t\t.append(\" .. \")\r\n\t\t\t\t\t\t.append($rangeMaxInput=minMaxInput('max'))\r\n\t\t\t\t);\r\n\t\t\t\tif ($inputSelect.val()=='constant') {\r\n\t\t\t\t\t$rangeSpan.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$optionDiv.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tif (withRange) {\r\n\t\t\t\t\t\t\t$rangeMinInput.val(option.getMin());\r\n\t\t\t\t\t\t\t$rangeMaxInput.val(option.getMax());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$sliderInput.val(option.defaultValue).change();\r\n\t\t\t\t\t\t$inputSelect.val('constant').change();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\treturn $optionDiv;\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction makeSortable($sortableRoot,callback) {\r\n\t\t\t// have to make drag handler 'draggable', not the whole item\r\n\t\t\t// because inputs and labels don't like to be inside 'draggable'\r\n\t\t\t// http://stackoverflow.com/questions/13017177/selection-disabled-while-using-html5-drag-and-drop\r\n\t\t\tvar $dragged=null;\r\n\t\t\t$sortableRoot.children().prepend(\r\n\t\t\t\t$(\"<div draggable='true' tabindex='0' title='Drag or press up/down while in focus to reorder transforms'>\").on('dragstart',function(ev){\r\n\t\t\t\t\t$dragged=$(this).parent();\r\n\t\t\t\t\tev.originalEvent.dataTransfer.effectAllowed='move';\r\n\t\t\t\t\tev.originalEvent.dataTransfer.setData('Text',name);\r\n\t\t\t\t\tif (ev.originalEvent.dataTransfer.setDragImage) { // doesn't work in IE\r\n\t\t\t\t\t\tev.originalEvent.dataTransfer.setDragImage($dragged[0],0,0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$dragged.addClass('ghost');\r\n\t\t\t\t\t},0);\r\n\t\t\t\t})\r\n\t\t\t\t.keydown(function(ev){\r\n\t\t\t\t\tvar $handle=$(this);\r\n\t\t\t\t\tvar $sorted=$handle.parent();\r\n\t\t\t\t\tif (ev.keyCode==38) {\r\n\t\t\t\t\t\t$sorted.prev().before($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (ev.keyCode==40) {\r\n\t\t\t\t\t\t$sorted.next().after($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t).on('dragover',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.originalEvent.dataTransfer.dropEffect='move';\r\n\t\t\t\tvar $target=$(this);\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\tif ($target.nextAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.before($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t} else if ($target.prevAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.after($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).on('drop',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}).on('dragend',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\t$dragged.removeClass('ghost');\r\n\t\t\t\t\t$dragged=null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\tvar $transforms;\r\n\t\t\tvar $options=$(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(function(option){\r\n\t\t\t\t\t\treturn writeInputOption(option,true)\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\t$transforms=$(\"<div>\").append(\r\n\t\t\t\t\t\toptions.transforms.map(function(transform){\r\n\t\t\t\t\t\t\treturn $(\"<div class='transform' data-transform='\"+transform.name+\"'>\").append(\r\n\t\t\t\t\t\t\t\ttransform.options.map(function(option){\r\n\t\t\t\t\t\t\t\t\treturn writeInputOption(option,false)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.formatting')+\"</legend>\").append(\r\n\t\t\t\t\toptions.formattingOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tmakeSortable($transforms,function(){\r\n\t\t\t\toptions.transformOrder=$transforms.children().map(function(){\r\n\t\t\t\t\treturn $(this).attr('data-transform');\r\n\t\t\t\t}).get();\r\n\t\t\t\tupdateCode();\r\n\t\t\t});\r\n\t\t\treturn $options;\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri($code.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri($code.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t$container.empty().append($options=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\t$container.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append($code=$(\"<code>\").text(generateCode(options.fix(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock($code[0]);\r\n\t\t} else {\r\n\t\t\t$container.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\t$container.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.getSuboptionScopePrefix=function(){\r\n\treturn this.name+'.';\r\n}\r\nOption.prototype.getSuboptionHitPrefix=function(value){\r\n\tif (this.name=='shape' && ['gasket','hat','terrain'].indexOf(value)>=0) {\r\n\t\tvalue='lodShape';\r\n\t}\r\n\treturn this.getSuboptionScopePrefix()+value+'.';\r\n}\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(\r\n\t\tthis.getSuboptionScopePrefix()\r\n\t) && !optionStartsWith(\r\n\t\tthis.getSuboptionHitPrefix(value)\r\n\t);\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getMinLabel=function(value){\r\n\tif (value===undefined) value=this.getMin();\r\n\treturn value.toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(value){\r\n\tif (value===undefined) value=this.getMax();\r\n\treturn value.toString().replace('-','−');\r\n};\r\n\r\nvar FloatInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nFloatInputOption.prototype=Object.create(InputOption.prototype);\r\nFloatInputOption.prototype.constructor=FloatInputOption;\r\nFloatInputOption.prototype.getStep=function(){\r\n\treturn 'any';\r\n};\r\nFloatInputOption.prototype.getSetupStep=function(){\r\n\tif (this.getMax()>=100) {\r\n\t\treturn '0.1';\r\n\t} else if (this.getMax()>=10) {\r\n\t\treturn '0.01';\r\n\t} else {\r\n\t\treturn '0.001';\r\n\t}\r\n};\r\n\r\nvar IntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nIntInputOption.prototype=Object.create(InputOption.prototype);\r\nIntInputOption.prototype.constructor=IntInputOption;\r\nIntInputOption.prototype.getStep=function(){\r\n\treturn 1;\r\n};\r\nIntInputOption.prototype.getSetupStep=function(){\r\n\treturn 1;\r\n};\r\n\r\nvar CanvasIntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tIntInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nCanvasIntInputOption.prototype=Object.create(IntInputOption.prototype);\r\nCanvasIntInputOption.prototype.constructor=CanvasIntInputOption;\r\nCanvasIntInputOption.prototype.availableInputTypes=['constant','slider']; // can't change canvas size by moving mouse over canvas\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar OptionsBlueprint=function(){\r\n\tthis.reset();\r\n};\r\nOptionsBlueprint.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex','face','light']),\r\n\tnew Option('shape',['square','triangle','gasket','cube','hat','terrain']),\r\n\tnew Option('elements',['0','8','16','32']),\r\n\tnew Option('projection',['ortho','perspective']),\r\n];\r\nOptionsBlueprint.prototype.inputOptions=[\r\n\tnew CanvasIntInputOption('canvas.width',[1,1024],512),\r\n\tnew CanvasIntInputOption('canvas.height',[1,1024],512),\r\n\tnew FloatInputOption('background.solid.color.r',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.g',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.b',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.r',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.g',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.b',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.light.direction.x',[-4,+4],-1),\r\n\tnew FloatInputOption('shader.light.direction.y',[-4,+4],+1),\r\n\tnew FloatInputOption('shader.light.direction.z',[-4,+4],+1),\r\n\tnew IntInputOption('shape.lodShape.lod',[0,10],6),\r\n];\r\nOptionsBlueprint.prototype.transformOptions=[];\r\nOptionsBlueprint.prototype.transforms=[];\r\n['rotate.x','rotate.y','rotate.z'].forEach(function(name){\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tvar valueOption=new FloatInputOption(name,[-180,180],0);\r\n\tvar speedOption=new FloatInputOption(name+'.speed',[-360,360],0);\r\n\tOptionsBlueprint.prototype.transformOptions.push(valueOption);\r\n\tOptionsBlueprint.prototype.transformOptions.push(speedOption);\r\n\tOptionsBlueprint.prototype.transforms.push({\r\n\t\tname:name,\r\n\t\toptions:[valueOption,speedOption]\r\n\t});\r\n});\r\nOptionsBlueprint.prototype.debugOptions=[\r\n\tnew DebugOption('debugShaders',true),\r\n\tnew DebugOption('debugArrays'),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptionsBlueprint.prototype.formattingOptions=[\r\n\tnew Option('indent',['tab','2','4','8']),\r\n];\r\nOptionsBlueprint.prototype.groupNames=['generalOptions','inputOptions','transformOptions','debugOptions','formattingOptions'];\r\nOptionsBlueprint.prototype.reset=function(){\r\n\tthis.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName].forEach(function(option){\r\n\t\t\tthis[option.name]=option.defaultValue;\r\n\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\tthis[option.name+'.input']='constant';\r\n\t\t\t\tthis[option.name+'.min']=option.getMin();\r\n\t\t\t\tthis[option.name+'.max']=option.getMax();\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=this.transforms.map(function(transform){\r\n\t\treturn transform.name;\r\n\t});\r\n};\r\nOptionsBlueprint.prototype.fix=function(){\r\n\treturn new OptionsInstance(this);\r\n};\r\n\r\nvar OptionsInstance=function(blueprint){\r\n\tblueprint.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName]=[];\r\n\t\tblueprint[groupName].forEach(function(option){\r\n\t\t\tvar isHidden=blueprint.generalOptions.some(function(generalOption){\r\n\t\t\t\treturn generalOption.doesValueHideOption(blueprint[generalOption.name],option);\r\n\t\t\t});\r\n\t\t\tif (!isHidden) {\r\n\t\t\t\tthis[groupName].push(option);\r\n\t\t\t\tthis[option.name]=blueprint[option.name];\r\n\t\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\t\tthis[option.name+'.input']=blueprint[option.name+'.input'];\r\n\t\t\t\t\tthis[option.name+'.min']=blueprint[option.name+'.min'];\r\n\t\t\t\t\tthis[option.name+'.max']=blueprint[option.name+'.max'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=blueprint.transformOrder;\r\n};\r\nOptionsInstance.prototype.getInputOptionsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.getInputsFor(prefix);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptionsInstance.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasInputsFor=function(prefix){\r\n\treturn this.getInputsFor(prefix).length>0;\r\n};\r\nOptionsInstance.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.getInputOptionsFor(prefix).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptionsInstance.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nmodule.exports=OptionsBlueprint;\r\n","exports.Square=require('./shapes/square.js');\r\nexports.Triangle=require('./shapes/triangle.js');\r\nexports.Gasket=require('./shapes/gasket.js');\r\nexports.Cube=require('./shapes/cube.js');\r\nexports.Hat=require('./shapes/hat.js');\r\nexports.Terrain=require('./shapes/terrain.js');\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Cube=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nCube.prototype=Object.create(Shape.prototype);\r\nCube.prototype.constructor=Cube;\r\nCube.prototype.dim=3;\r\nCube.prototype.twoSided=false;\r\nCube.prototype.writeArrays=function(c,cv){\r\n\tvar nCubeVertices=8;\r\n\tvar cubeVertexPositions=[\r\n\t\t\"-0.5,-0.5,-0.5,\",\r\n\t\t\"+0.5,-0.5,-0.5,\",\r\n\t\t\"-0.5,+0.5,-0.5,\",\r\n\t\t\"+0.5,+0.5,-0.5,\",\r\n\t\t\"-0.5,-0.5,+0.5,\",\r\n\t\t\"+0.5,-0.5,+0.5,\",\r\n\t\t\"-0.5,+0.5,+0.5,\",\r\n\t\t\"+0.5,+0.5,+0.5,\",\r\n\t];\r\n\tvar cubeVertexColors=[\r\n\t\t\" 0.0, 0.0, 0.0,\",\r\n\t\t\" 1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0, 1.0, 0.0,\",\r\n\t\t\" 1.0, 1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0, 1.0,\",\r\n\t\t\" 1.0, 0.0, 1.0,\",\r\n\t\t\" 0.0, 1.0, 1.0,\",\r\n\t\t\" 1.0, 1.0, 1.0,\",\r\n\t];\r\n\tvar nCubeFaces=6;\r\n\tvar cubeFaceNames=[\r\n\t\t\"left\",\r\n\t\t\"right\",\r\n\t\t\"bottom\",\r\n\t\t\"top\",\r\n\t\t\"back\",\r\n\t\t\"front\",\r\n\t];\r\n\tvar cubeFaceNormals=[\r\n\t\t\"-1.0, 0.0, 0.0,\",\r\n\t\t\"+1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0,-1.0, 0.0,\",\r\n\t\t\" 0.0,+1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0,-1.0,\",\r\n\t\t\" 0.0, 0.0,+1.0,\",\r\n\t];\r\n\tvar cubeFaceColors=[\r\n\t\t\" 1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0, 1.0, 0.0,\",\r\n\t\t\" 1.0, 1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0, 1.0,\",\r\n\t\t\" 1.0, 0.0, 1.0,\",\r\n\t\t\" 0.0, 1.0, 1.0,\",\r\n\t];\r\n\tvar cubeFaceVertices=[\r\n\t\t[4, 6, 0, 2],\r\n\t\t[1, 3, 5, 7],\r\n\t\t[0, 1, 4, 5],\r\n\t\t[2, 6, 3, 7],\r\n\t\t[0, 2, 1, 3],\r\n\t\t[5, 7, 4, 6],\r\n\t];\r\n\tvar quadToTriangleMap=[0, 1, 2, 2, 1, 3];\r\n\tvar vertexLines=new Lines;\r\n\tvertexLines.a(\"// x    y    z\");\r\n\tif (this.shaderType=='light') {\r\n\t\tvertexLines.t(\"  n.x  n.y  n.z\");\r\n\t}\r\n\tif (c) {\r\n\t\tvertexLines.t(\"    r    g    b\");\r\n\t}\r\n\tfunction appendVertex(iFace,iVertex,firstInFace) {\r\n\t\tvertexLines.a(cubeVertexPositions[iVertex]);\r\n\t\tif (this.shaderType=='light') {\r\n\t\t\tvertexLines.t(cubeFaceNormals[iFace]);\r\n\t\t}\r\n\t\tif (this.shaderType=='vertex') {\r\n\t\t\tvertexLines.t(cubeVertexColors[iVertex]);\r\n\t\t}\r\n\t\tif (this.shaderType=='face') {\r\n\t\t\tvertexLines.t(cubeFaceColors[iFace]);\r\n\t\t}\r\n\t\tif (firstInFace) {\r\n\t\t\tvertexLines.t(\" // \"+cubeFaceNames[iFace]+\" face\");\r\n\t\t}\r\n\t}\r\n\tif (!this.usesElements()) {\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tquadToTriangleMap.forEach(function(j,k){\r\n\t\t\t\tappendVertex.call(this,i,cubeFaceVertices[i][j],k==0);\r\n\t\t\t},this);\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\t\"var nVertices=36;\",\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t} else if (this.shaderType=='face' || this.shaderType=='light') {\r\n\t\t// elements, face data\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tcubeFaceVertices[i].forEach(function(j,k){\r\n\t\t\t\tappendVertex.call(this,i,j,k==0);\r\n\t\t\t},this);\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\"]);\"\r\n\t\t);\r\n\t} else {\r\n\t\t// elements, no face data\r\n\t\tfor (var i=0;i<nCubeVertices;i++) {\r\n\t\t\tvertexLines.a(cubeVertexPositions[i]);\r\n\t\t\tif (c) {\r\n\t\t\t\tvertexLines.t(cubeVertexColors[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar elementLines=new Lines;\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\telementLines.a(\"\");\r\n\t\t\tquadToTriangleMap.forEach(function(j){\r\n\t\t\t\telementLines.t(cubeFaceVertices[i][j]+\", \");\r\n\t\t\t});\r\n\t\t\telementLines.t(\"// \"+cubeFaceNames[i]+\" face\");\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\telementLines.wrap(\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmodule.exports=Cube;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Gasket=function(elementIndexBits,shaderType,lod){\r\n\tLodShape.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nGasket.prototype=Object.create(LodShape.prototype);\r\nGasket.prototype.constructor=Gasket;\r\nGasket.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"(Math.pow(3,\"+lodSymbol+\"+1)+3)/2\";\r\n};\r\nGasket.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.writeStoreShape=function(c,cv){\r\n\tfunction writePushVertex() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[0];\",\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[1];\"\r\n\t\t);\r\n\t\tif (c) {\r\n\t\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var c=colors[nextIndexIntoColors];\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var c=colors[nextElement%colors.length];\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[0];\",\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[1];\",\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[2];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"return nextElement++;\"\r\n\t\t\t);\r\n\t\t} else if (this.shaderType=='vertex') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"nextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function pushVertex(p) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction writeTriangle() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"if (depth<=0) {\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tif (this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p0));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p1));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p2));\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (es[0]===null) es[0]=pushVertex(p0);\",\r\n\t\t\t\t\t\"\tif (es[1]===null) es[1]=pushVertex(p1);\",\r\n\t\t\t\t\t\"\tif (es[2]===null) es[2]=pushVertex(p2);\",\r\n\t\t\t\t\t\"\tpushElement(es[0]);\",\r\n\t\t\t\t\t\"\tpushElement(es[1]);\",\r\n\t\t\t\t\t\"\tpushElement(es[2]);\",\r\n\t\t\t\t\t\"\treturn es;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"} else {\",\r\n\t\t\t\"\tvar p01=mix(p0,p1);\",\r\n\t\t\t\"\tvar p12=mix(p1,p2);\",\r\n\t\t\t\"\tvar p20=mix(p2,p0);\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\ttriangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else if (this.shaderType=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20,[es[0],null,null]);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01,[es[1],null,es0[1]]);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12,[es[2],es0[2],es1[1]]);\",\r\n\t\t\t\t\"\treturn [es0[0],es1[0],es2[0]];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2,es) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tfunction writeInitialTriangleCall() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"shapeLod,\",\r\n\t\t\t\"[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\"\r\n\t\t);\r\n\t\tif (this.usesElements() && this.shaderType!='face') {\r\n\t\t\tlines.t(\r\n\t\t\t\t\",\",\"[null,null,null]\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"triangle(\",\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var nextIndexIntoVertices=0;\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\tlines.a(\r\n\t\t\t\"var nextIndexIntoElements=0;\",\r\n\t\t\t\"var nextElement=0;\"\r\n\t\t);\r\n\t}\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"// p = position, c = color, e = element, es = elements\",\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nextIndexIntoColors=0;\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"// p = position, e = element, es = elements\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\twritePushVertex.call(this)\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function pushElement(e) {\",\r\n\t\t\t\"\telements[nextIndexIntoElements++]=e;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\t\"function mix(pa,pb) {\",\r\n\t\t\"\treturn [\",\r\n\t\t\"\t\t(pa[0]+pb[0])/2,\",\r\n\t\t\"\t\t(pa[1]+pb[1])/2,\",\r\n\t\t\"\t];\",\r\n\t\t\"}\",\r\n\t\twriteTriangle.call(this),\r\n\t\twriteInitialTriangleCall.call(this)\r\n\t);\r\n\treturn lines;\r\n}\r\n\r\nmodule.exports=Gasket;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Hat=function(elementIndexBits,shaderType,lod){\r\n\tMesh.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nHat.prototype=Object.create(Mesh.prototype);\r\nHat.prototype.constructor=Hat;\r\nHat.prototype.writeMeshInit=function(){\r\n\treturn new Lines(\r\n\t\t\"var xyRange=4;\",\r\n\t\t\"var xyScale=1/(4*Math.sqrt(2));\"\r\n\t);\r\n};\r\nHat.prototype.writeMeshVertex=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var r2=(x*x+y*y)/2;\",\r\n\t\t\"var A=Math.exp(-r2)/Math.PI;\",\r\n\t\t\"var z=A*(1-r2);\",\r\n\t\t\"vertices[vertexOffset+0]=x*xyScale;\",\r\n\t\t\"vertices[vertexOffset+1]=y*xyScale;\",\r\n\t\t\"vertices[vertexOffset+2]=z;\"\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var normal=normalize([(z+A)*x/xyScale,(z+A)*y/xyScale,1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t((!this.usesElements() && this.shaderType!='face')\r\n\t\t\t\t?\"var ic=((i+di)&1)*2+((j+dj)&1);\"\r\n\t\t\t\t:\"var ic=(i&1)*2+(j&1);\"\r\n\t\t\t),\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Hat;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar LodShape=function(elementIndexBits,shaderType,lod){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n\tthis.lod=lod;\r\n\tvar maxLod=this.getMaxPossibleLod();\r\n\tif (this.lod.value>maxLod) this.lod.value=maxLod;\r\n\tif (this.lod.max>maxLod) this.lod.max=maxLod;\r\n};\r\nLodShape.prototype=Object.create(Shape.prototype);\r\nLodShape.prototype.constructor=LodShape;\r\nLodShape.prototype.getMaxPossibleLod=function(){ // due to element index type\r\n\tif (!this.usesElements() || this.elementIndexBits>=31) { // 1<<31 is a negative number, can't compare with it\r\n\t\treturn this.lod.max; // no need to limit lod if elements are not used or index type is large enough\r\n\t}\r\n\tvar nVerticesFn = this.shaderType=='face'\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar indexLimit=1<<this.elementIndexBits;\r\n\tfor (var m=this.lod.max;m>=0;m--) {\r\n\t\tvar n=eval(nVerticesFn(m));\r\n\t\tif (n<=indexLimit) {\r\n\t\t\treturn m;\r\n\t\t}\r\n\t}\r\n\t// TODO fail here\r\n};\r\n// abstract LodShape.prototype.getDistinctVertexCount=function(lodSymbol){}; // # of distinct vertices where one vertex can be shared between different faces and output primitives\r\n// abstract LodShape.prototype.getFaceVertexCount=function(lodSymbol){}; // # of distinct (vertex,face) pairs that still can be shared between output primitives\r\n// abstract LodShape.prototype.getTotalVertexCount=function(lodSymbol){}; // # of vertices in output primitives = # of elements when element arrays are in use\r\n// abstract LodShape.prototype.writeStoreShape=function(c,cv){};\r\nLodShape.prototype.writeArraysAndBufferData=function(debugArrays,c,cv){\r\n\tvar nVerticesFn = this.shaderType=='face'\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar lines=new Lines;\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"var minShapeLod=\"+this.lod.min+\";\",\r\n\t\t\t\"var maxShapeLod=\"+this.lod.max+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+nVerticesFn(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nMaxElements=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nMaxElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices,nElements;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"\tnElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var shapeLod=\"+this.lod.value+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeStoreShape(c,cv).indent(),\r\n\t\tthis.writeBufferData().indent(),\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape(\"+this.lod.value+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape();\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=LodShape;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Mesh=function(elementIndexBits,shaderType,lod){\r\n\tLodShape.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nMesh.prototype=Object.create(LodShape.prototype);\r\nMesh.prototype.constructor=Mesh;\r\nMesh.prototype.dim=3;\r\nMesh.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\")+1,2)\";\r\n};\r\nMesh.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*4\";\r\n};\r\nMesh.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*6\";\r\n};\r\n// abstract Mesh.prototype.writeMeshInit=function(){};\r\n// abstract Mesh.prototype.writeMeshVertex=function(c,cv){};\r\nMesh.prototype.writeStoreShape=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var res=(1<<shapeLod);\"\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*6+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*4+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j) {\",\r\n\t\t\t\"\treturn i*(res+1)+j;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"function normalize(v) {\",\r\n\t\t\t\"\tvar l=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);\",\r\n\t\t\t\"\treturn [v[0]/l,v[1]/l,v[2]/l];\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeMeshInit()\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"for (var i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (var j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<6;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<4;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i,j,0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i,j,3);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<=res;i++) {\",\r\n\t\t\t\"\tvar y=i/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\tfor (j=0;j<=res;j++) {\",\r\n\t\t\t\"\t\tvar x=j/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\tvar vertexOffset=vertexElement(i,j)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(2),\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i+0,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i+1,j+1);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Mesh;\r\n","var Lines=require('../lines.js');\r\n\r\nvar Shape=function(elementIndexBits,shaderType){\r\n\tthis.elementIndexBits=elementIndexBits; // 0 if don't want element arrays; 8, 16 or 32 bits per element index, limits lod of shape\r\n\tthis.shaderType=shaderType; // 'vertex' or 'face' for colors, 'light' for normals, anything else for no colors/normals\r\n};\r\nShape.prototype.dim=2;\r\nShape.prototype.twoSided=true; // triangles can be viewed from both sides\r\nShape.prototype.glPrimitive='TRIANGLES';\r\nShape.prototype.usesElements=function(){\r\n\treturn this.elementIndexBits>0;\r\n};\r\nShape.prototype.getNumbersPerPosition=function(){\r\n\treturn this.dim;\r\n};\r\nShape.prototype.getNumbersPerNormal=function(){\r\n\treturn (this.shaderType=='light' && this.dim==3) ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerColor=function(){\r\n\treturn (this.shaderType=='vertex' || this.shaderType=='face') ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerVertex=function(){\r\n\treturn this.getNumbersPerPosition()+this.getNumbersPerNormal()+this.getNumbersPerColor();\r\n};\r\nShape.prototype.getElementIndexJsArray=function(){\r\n\treturn \"Uint\"+this.elementIndexBits+\"Array\";\r\n};\r\nShape.prototype.getElementIndexGlType=function(){\r\n\tif (this.elementIndexBits==8) {\r\n\t\treturn \"gl.UNSIGNED_BYTE\"; // not recommended by ms [https://msdn.microsoft.com/en-us/library/dn798776%28v=vs.85%29.aspx]\r\n\t} else if (this.elementIndexBits==16) {\r\n\t\treturn \"gl.UNSIGNED_SHORT\"; // mozilla examples use this\r\n\t} else if (this.elementIndexBits==32) {\r\n\t\treturn \"gl.UNSIGNED_INT\"; // needs extension\r\n\t}\r\n};\r\nShape.prototype.writeDebug=function(debugArrays){\r\n\tvar lines=new Lines;\r\n\tif (debugArrays) {\r\n\t\tlines.a(\"console.log('vertex array byte length:',vertices.byteLength);\");\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\"console.log('element array byte length:',elements.byteLength);\");\r\n\t\t\tlines.a(\"console.log('vertex+element array byte length:',vertices.byteLength+elements.byteLength);\");\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeBufferData=function(){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeArraysAndBufferData=function(debugArrays,c,cv){\r\n\treturn new Lines(\r\n\t\tthis.writeArrays(c,cv),\r\n\t\tthis.writeDebug(debugArrays),\r\n\t\tthis.writeBufferData()\r\n\t);\r\n};\r\n// public fn for init\r\nShape.prototype.writeInit=function(debugArrays){\r\n\tvar c=(this.shaderType=='vertex' || this.shaderType=='face');\r\n\tvar cv=this.shaderType=='vertex';\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeArraysAndBufferData(debugArrays,c,cv),\r\n\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\"\r\n\t);\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t);\r\n\t} else if (this.dim>2 && this.shaderType=='light') {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var normalLoc=gl.getAttribLocation(program,'normal');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tnormalLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(normalLoc);\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+this.dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n// public fn for render\r\nShape.prototype.writeDraw=function(){\r\n\tif (this.usesElements()) {\r\n\t\treturn new Lines(\"gl.drawElements(gl.\"+this.glPrimitive+\",nElements,\"+this.getElementIndexGlType()+\",0);\");\r\n\t} else {\r\n\t\treturn new Lines(\"gl.drawArrays(gl.\"+this.glPrimitive+\",0,nVertices);\");\r\n\t}\r\n};\r\n\r\nmodule.exports=Shape;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Square=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nSquare.prototype=Object.create(Shape.prototype);\r\nSquare.prototype.constructor=Square;\r\nSquare.prototype.glPrimitive='TRIANGLE_FAN';\r\nSquare.prototype.writeArrays=function(c,cv){\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=4;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t// x    y\"+(c?   \"    r    g    b\":\"\"),\r\n\t\t\"\t-0.5,-0.5,\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,-0.5,\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,+0.5,\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-0.5,+0.5,\"+(c?cv?\" 1.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=4;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2,3]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Square;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Terrain=function(elementIndexBits,shaderType,lod){\r\n\tMesh.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nTerrain.prototype=Object.create(Mesh.prototype);\r\nTerrain.prototype.constructor=Terrain;\r\nTerrain.prototype.writeMeshInit=function(){\r\n\tvar noFaces=(this.usesElements()&&this.shaderType!='face');\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var xyRange=1/Math.sqrt(2);\",\r\n\t\t\"var zRange=xyRange;\",\r\n\t\t\"var mask=res-1;\",\r\n\t\t\"function zOffset(i,j) {\",\r\n\t\t\"\treturn vertexElement(i,j\"+(noFaces?\"\":\",0\")+\")*\"+this.getNumbersPerVertex()+\"+2;\",\r\n\t\t\"}\",\r\n\t\t\"function noise(depth) {\",\r\n\t\t\"\tvar r=zRange/Math.pow(2,shapeLod-depth-1);\",\r\n\t\t\"\treturn Math.random()*2*r-r;\",\r\n\t\t\"}\",\r\n\t\t\"vertices[2]=0.0;\",\r\n\t\t\"var i0,i1,i2,i3;\",\r\n\t\t\"var j0,j1,j2,j3;\",\r\n\t\t\"for (var depth=shapeLod-1;depth>=0;depth--) {\",\r\n\t\t\"\tvar d=1<<depth;\",\r\n\t\t\"\t// diamond step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti1=i2-d;\",\r\n\t\t\"\t\t\tj1=j2-d;\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i1,j1)]+vertices[zOffset(i1,j3)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i3,j1)]+vertices[zOffset(i3,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"\t// square step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti0=(i2-2*d)&mask;\",\r\n\t\t\"\t\t\tj0=(j2-2*d)&mask;\",\r\n\t\t\"\t\t\ti1=(i2-d);\",\r\n\t\t\"\t\t\tj1=(j2-d);\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j1)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j0)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i3,j1)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t\tvertices[zOffset(i1,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i0,j2)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i1,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"}\"\r\n\t);\r\n\tif (noFaces) {\r\n\t\tlines.a(\r\n\t\t\t\"for (i0=0;i0<res;i0++) vertices[zOffset(i0,res)]=vertices[zOffset(i0,0)];\",\r\n\t\t\t\"for (j0=0;j0<res;j0++) vertices[zOffset(res,j0)]=vertices[zOffset(0,j0)];\",\r\n\t\t\t\"vertices[zOffset(res,res)]=vertices[zOffset(0,0)];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nTerrain.prototype.writeMeshVertex=function(c,cv){\r\n\tvar noFaces=(this.usesElements()&&this.shaderType!='face');\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"vertices[vertexOffset+0]=x;\",\r\n\t\t\"vertices[vertexOffset+1]=y;\",\r\n\t\t(noFaces\r\n\t\t\t?\"// vertices[vertexOffset+2] already written\"\r\n\t\t\t:\"vertices[vertexOffset+2]=vertices[zOffset((i+di)&mask,(j+dj)&mask)];\"\r\n\t\t)\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var d=4*xyRange/res;\",\r\n\t\t\t\"var normal=normalize([\",\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset(i,(j-1)&mask)]-vertices[zOffset(i,(j+1)&mask)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di)&mask,(j+dj-1)&mask)]-vertices[zOffset((i+di)&mask,(j+dj+1)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset((i-1)&mask,j)]-vertices[zOffset((i+1)&mask,j)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di-1)&mask,(j+dj)&mask)]-vertices[zOffset((i+di+1)&mask,(j+dj)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t\"1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t((!this.usesElements() && this.shaderType!='face')\r\n\t\t\t\t?\"var ic=((i+di)&1)*2+((j+dj)&1);\"\r\n\t\t\t\t:\"var ic=(i&1)*2+(j&1);\"\r\n\t\t\t),\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Terrain;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Triangle=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nTriangle.prototype=Object.create(Shape.prototype);\r\nTriangle.prototype.constructor=Triangle;\r\nTriangle.prototype.writeArrays=function(c,cv){\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=3;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=3;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Triangle;\r\n","var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\n\r\nvar Vector=function(varName,optName,components,options){\r\n\tthis.varName=varName;\r\n\tthis.optName=optName;\r\n\tthis.components=components.split('');\r\n\tthis.values=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c];\r\n\t});\r\n\tthis.inputs=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.input'];\r\n\t});\r\n\tthis.minValues=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.min'];\r\n\t});\r\n\tthis.maxValues=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.max'];\r\n\t});\r\n\tthis.nVars=0;\r\n\tthis.nSliders=0; // sliders are <input> elements with values that can be populated by the browser, disregarding default value\r\n\tthis.nMousemoves=0;\r\n\tthis.modeConstant=true;\r\n\tthis.modeFloats=false;\r\n\tthis.components.forEach(function(c,i){\r\n\t\tvar inputType=options[optName+'.'+c+'.input'];\r\n\t\tif (inputType!='constant') {\r\n\t\t\tthis.modeConstant=false;\r\n\t\t\tif (this.nVars++!=i) {\r\n\t\t\t\tthis.modeFloats=true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.nSliders+=inputType=='slider';\r\n\t\tthis.nMousemoves+=(inputType=='mousemovex' || inputType=='mousemovey');\r\n\t},this);\r\n\tif (this.nVars==1) {\r\n\t\tthis.modeFloats=true;\r\n\t}\r\n\tthis.modeVector= !this.modeConstant && !this.modeFloats;\r\n\tvar nonnegativeLimits=this.minValues.every(function(v){return v>=0}) && this.maxValues.every(function(v){return v>=0});\r\n\tif (nonnegativeLimits) {\r\n\t\tthis.formatValue=function(value){\r\n\t\t\treturn value.toFixed(3);\r\n\t\t};\r\n\t} else {\r\n\t\tthis.formatValue=function(value){\r\n\t\t\treturn (value<=0 ? value<0 ? '' /* - */ : ' ' : '+')+value.toFixed(3);\r\n\t\t};\r\n\t}\r\n};\r\nVector.prototype.updateFnName=function(){\r\n\tfunction capitalize(s) {\r\n\t\treturn s.charAt(0).toUpperCase()+s.slice(1);\r\n\t}\r\n\treturn 'update'+capitalize(this.varName);\r\n};\r\n// fns that can be mapped over components:\r\nVector.prototype.varNameC=function(c){\r\n\treturn this.varName+c.toUpperCase();\r\n};\r\nVector.prototype.componentValue=function(c,i){\r\n\tif (this.inputs[i]=='constant') {\r\n\t\treturn this.formatValue(this.values[i]);\r\n\t} else if (this.inputs[i]=='slider') {\r\n\t\treturn \"parseFloat(document.getElementById('\"+this.optName+\".\"+c+\"').value)\";\r\n\t} else if (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\treturn this.varNameC(c);\r\n\t}\r\n}\r\n// public:\r\nVector.prototype.getJsInterfaceLines=function(writeListenerArgs,canvasMousemoveListener){\r\n\tfunction writeManyListenersLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='slider') return;\r\n\t\t\tvar listener=new listeners.SliderListener(this.optName+'.'+c);\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(this.updateFnName()+\"();\");\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction writeOneListenerLines() {\r\n\t\tvar listener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+this.optName+\".\\\"]\");\r\n\t\tlistener.enter()\r\n\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t.post(this.updateFnName()+\"();\");\r\n\t\treturn new Lines(\r\n\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t);\r\n\t}\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t}\r\n\tvar lines=new Lines;\r\n\tvar manyListenersLines=writeManyListenersLines.call(this);\r\n\tvar oneListenerLines=writeOneListenerLines.call(this);\r\n\tlines.a(\r\n\t\tthis.writeJsInterfaceGlslLines()\r\n\t);\r\n\tif (this.nSliders>0) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var \"+this.varNameC(c)+\"=\"+this.formatValue(this.values[i])+\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tlines.a(\r\n\t\t\tthis.writeJsInterfaceUpdateFnLines().wrap(\r\n\t\t\t\t\"function \"+this.updateFnName()+\"() {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t),\r\n\t\t\tthis.updateFnName()+\"();\",\r\n\t\t\tmanyListenersLines.data.length<=oneListenerLines.data.length ? manyListenersLines : oneListenerLines\r\n\t\t);\r\n\t}\r\n\tif (this.nMousemoves>0) {\r\n\t\tvar entry=canvasMousemoveListener.enter();\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\tif (this.nSliders==0) {\r\n\t\t\t\t\tentry.minMaxVarFloat(this.inputs[i],this.varNameC(c),\r\n\t\t\t\t\t\tthis.formatValue(this.minValues[i]),\r\n\t\t\t\t\t\tthis.formatValue(this.maxValues[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tentry.minMaxFloat(this.inputs[i],this.varNameC(c),\r\n\t\t\t\t\t\tthis.formatValue(this.minValues[i]),\r\n\t\t\t\t\t\tthis.formatValue(this.maxValues[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tentry.log(\"console.log('\"+this.optName+\".\"+c+\" input value:',\"+this.varNameC(c)+\");\");\r\n\t\t\t\tthis.addPostToEntryForComponent(entry,c);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tthis.addPostToEntryAfterComponents(entry);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Vector;\r\n"],"sourceRoot":"."}