{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/code.js","webgl-starter.js","src/i18n.js","src/lines.js","src/listeners.js","src/main.js","src/options.js","src/shapes.js","src/shapes/cube.js","src/shapes/gasket.js","src/shapes/hat.js","src/shapes/lodshape.js","src/shapes/mesh.js","src/shapes/shape.js","src/shapes/square.js","src/shapes/terrain.js","src/shapes/triangle.js","src/uniform.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Lines","listeners","shapes","Uniform","options","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","colorValue","prefix","glslColorValue","g","b","isMousemoveInput","indexOf","makeShape","className","shape","charAt","toUpperCase","slice","shapeParams","getInputOptionsFor","map","option","value","changes","min","max","shapeCtorArgs","elements","shader","concat","Function","prototype","bind","apply","generateHtmlStyleLines","lines","hasSliderInputs","wrapIfNotEmpty","generateVertexShaderLines","generateMain","forEach","d","D","optName","varName","needsTransform","needsUniform","needAspectConstant","projection","needTransformedPosition","use2dTransform","transformOrder","transformName","rotate.x","rotate.y","rotate.z","needAspectUniform","dim","hasInputsFor","indent","generateFragmentShaderLines","lightDirectionUniform","getGlslDeclarationLines","twoSided","getGlslValue","generateHtmlControlMessageLines","writeOptionGroup","group","filter","inputOptions","transformOptions","generateHtmlInputLines","getMinLabel","getStep","getMaxLabel","lod","generateJsMakeProgramLines","debugShaders","wrap","generateJsInitLines","background","generateJsInputHandlerLines","writeListener","listener","write","writeListenerArgs","canvasUpdater","canvasListener","wh","SliderListener","enter","log","post","colorStates","optionPrefix","updateFnName","stateVarPrefix","c","colorUpdater","allInputsPre","allInputsPost","someInputsPre","someInputsPost","hasAllSliderInputsFor","join","colorSingleListener","onlyInput","getOnlyInputFor","MultipleSliderListener","colorMultipleListeners","canvasMousemoveListener","minMaxFloat","colorListeners","needOnlyOneListener","every","inputType","colorStatesAndUpdaterAndListeners","isAnimated","debugInputs","CanvasMousemoveListener","getJsInterfaceLines","getInputsFor","lastIndexOf","substring","S","undefined","newVarInt","cond","updateName","entry","minMaxVarFloat","state","generateJsRenderLines","renderInner","renderInnerTransforms","needStartTime","needPrevTime","needWrap","innerTransformsLines","writeDraw","innerLines","hasInputs","scriptLines","interleave","writeInit","debugArrays","Array","./lines.js","./listeners.js","./shapes.js","./uniform.js",2,"id","message.hljs","message.elements","options.general","options.background","options.background.none","options.background.solid","options.shader","options.shader.single","options.shader.vertex","options.shader.face","options.shader.light","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.shape.hat","options.shape.terrain","options.elements","options.elements.0","options.elements.8","options.elements.16","options.elements.32","options.projection","options.projection.ortho","options.projection.perspective","options.input","options.canvas.width","options.canvas.height","options.background.solid.color.r","options.background.solid.color.g","options.background.solid.color.b","options.background.solid.color.a","options.shader.single.color.r","options.shader.single.color.g","options.shader.single.color.b","options.shader.single.color.a","options.shader.light.direction.x","options.shader.light.direction.y","options.shader.light.direction.z","options.shape.lodShape.lod","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.animated","options.*.range","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShaders","options.debugArrays","options.debugInputs","options.formatting","options.indent","options.indent.tab","options.indent.2","options.indent.4","options.indent.8","controls.type.mousemovex","controls.type.mousemovey","controls.to",3,"this","data","addFlattenedArgs","flattenArgs","arguments","push","isArray","lastLine","pop","level","line","isEmpty","first","begin","end","unshift","replace","match",4,"Listener","entries","makePushArgs","where","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","exec","Object","create","constructor","query","floatHelper","minMaxFlag","varFlag","minValue","maxValue","VarName","dest","prexy","xLine","yLine",5,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","$","each","showHideSuboptionInputs","optionValue","$options","find","getSuboptionScopePrefix","show","not","getSuboptionHitPrefix","hide","updateCode","clearTimeout","codeUpdateTimeoutId","setTimeout","$code","text","fix","window","hljs","highlightBlock","codeUpdateDelay","writeGeneralOption","$option","append","availableValues","availableValue","val","change","writeInputOption","withRange","inputListener","that","checkValidity","parseFloat","minMaxInput","minOrMax","attr","getMin","getMax","getSetupStep","on","$sliderInput","$numberInput","$inputSelect","$rangeSpan","$rangeMinInput","$rangeMaxInput","inputId","$optionDiv","availableInputTypes","availableInputType","click","defaultValue","writeDebugOption","prop","makeSortable","$sortableRoot","callback","$dragged","children","prepend","ev","parent","originalEvent","dataTransfer","effectAllowed","setData","setDragImage","addClass","keydown","$handle","$sorted","keyCode","prev","before","focus","next","after","preventDefault","dropEffect","$target","nextAll","is","prevAll","removeClass","writeOptions","$transforms","generalOptions","transforms","transform","debugOptions","formattingOptions","get","hideSuboptionInputs","writeButtons","open","$container","empty","./code.js","./i18n.js","./options.js",6,"Option","doesValueHideOption","optionStartsWith","InputOption","rangeOfValues","toString","FloatInputOption","IntInputOption","CanvasIntInputOption","DebugOption","OptionsBlueprint","reset","valueOption","speedOption","groupNames","groupName","OptionsInstance","blueprint","isHidden","some","generalOption","matchedOptions","endsWith","suffix",7,"Square","Triangle","Gasket","Cube","Hat","Terrain","./shapes/cube.js","./shapes/gasket.js","./shapes/hat.js","./shapes/square.js","./shapes/terrain.js","./shapes/triangle.js",8,"Shape","elementIndexBits","shaderType","writeArrays","cv","appendVertex","iFace","iVertex","firstInFace","vertexLines","cubeVertexPositions","cubeFaceNormals","cubeVertexColors","cubeFaceColors","cubeFaceNames","nCubeVertices","nCubeFaces","cubeFaceVertices","quadToTriangleMap","usesElements","j","k","getElementIndexJsArray","elementLines","../lines.js","./shape.js",9,"LodShape","getDistinctVertexCount","lodSymbol","getFaceVertexCount","getTotalVertexCount","writeStoreShape","writePushVertex","writeTriangle","writeInitialTriangleCall","./lodshape.js",10,"Mesh","writeMeshInit","writeMeshVertex","getNumbersPerNormal","./mesh.js",11,"maxLod","getMaxPossibleLod","nVerticesFn","indexLimit","m","eval","writeArraysAndBufferData","getNumbersPerVertex","writeDebug","writeBufferData",12,13,"glPrimitive","getNumbersPerPosition","getNumbersPerColor","getElementIndexGlType",14,15,"noFaces",16,17,"components","split","values","inputs","minValues","maxValues","modeNoSliders","modeConstant","modeFloats","modeDim","modeVector","formatSignedValue","varNameC","varComponentMap","vecType","vs","equalValues","v","capitalize","writeManyListenersLines","writeOneListenerLines","writeUpdateFnLines","componentValue","updateFnLines","manyListenersLines","oneListenerLines"],"mappings":"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","file":"webgl-starter.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\nvar shapes=require('./shapes.js');\r\nvar Uniform=require('./uniform.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction colorValue(prefix) {\r\n\t\treturn floatOptionValue(prefix+'.r')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.g')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.b')+\",\"+\r\n\t\t       floatOptionValue(prefix+'.a');\r\n\t}\r\n\tfunction glslColorValue(prefix) {\r\n\t\tvar r=floatOptionValue(prefix+'.r');\r\n\t\tvar g=floatOptionValue(prefix+'.g');\r\n\t\tvar b=floatOptionValue(prefix+'.b');\r\n\t\tvar a=floatOptionValue(prefix+'.a');\r\n\t\tif (r==a && g==a && b==a) {\r\n\t\t\treturn a; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn r+\",\"+g+\",\"+b+\",\"+a;\r\n\t\t}\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\r\n\tfunction makeShape() {\r\n\t\tvar className=options.shape.charAt(0).toUpperCase()+options.shape.slice(1);\r\n\t\tvar shapeParams=options.getInputOptionsFor('shape').map(function(option){\r\n\t\t\treturn {\r\n\t\t\t\tvalue: intOptionValue(option.name),\r\n\t\t\t\tchanges: options[option.name+'.input']!='constant',\r\n\t\t\t\tmin: intOptionValue(option.name+'.min'),\r\n\t\t\t\tmax: intOptionValue(option.name+'.max')\r\n\t\t\t};\r\n\t\t});\r\n\t\tvar shapeCtorArgs=[null,parseInt(options.elements),options.shader].concat(shapeParams);\r\n\t\treturn new (Function.prototype.bind.apply(shapes[className],shapeCtorArgs));\r\n\t}\r\n\tvar shape=makeShape();\r\n\tif (options.shader=='light') {\r\n\t\tvar lightDirectionUniform=new Uniform('lightDirection','shader.light.direction','xyz',options);\r\n\t}\r\n\r\n\tfunction generateHtmlStyleLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tif (options.hasSliderInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"label {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 15em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".min {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".max {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: left;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<style>\",\r\n\t\t\t\"</style>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\tshape.dim==2 &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar needAspectUniform=options.hasInputsFor('canvas');\r\n\t\tvar needAspectConstant=!needAspectUniform && options['canvas.width']!=options['canvas.height'];\r\n\t\tvar needTransformedPosition=options.shader=='light' && options.projection=='perspective';\r\n\r\n\t\tfunction generateMain() {\r\n\t\t\tvar lines=new Lines();\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needAspectConstant) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float aspect=\"+intOptionValue('canvas.width')+\".0/\"+intOptionValue('canvas.height')+\".0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float fovy=45.0;\",\r\n\t\t\t\t\t\"float near=1.0/tan(radians(fovy)/2.0);\",\r\n\t\t\t\t\t\"float far=near+2.0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"vec4 transformedPosition=\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (use2dTransform) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"vec4(position*mat2(\",\r\n\t\t\t\t\t\"\tcz, -sz,\",\r\n\t\t\t\t\t\"\tsz,  cz\",\r\n\t\t\t\t\t\"),0,1)\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"position\"\r\n\t\t\t\t);\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4( // move center of coords inside view\",\r\n\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, -(near+far)/2.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=transformedPosition\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0/aspect,1.0,-1.0,1.0)\" // correct aspect ratio and make coords right-handed\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (shape.dim>2) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0,1.0,-1.0,1.0)\" // make coords right-handed for 3d shapes\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear/aspect, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlines.t(\r\n\t\t\t\t\";\"\r\n\t\t\t);\r\n\t\t\tif (options.shader=='light') {\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedView=-vec3(transformedPosition);\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (shape.dim>2) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=normal\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"interpolatedNormal=vec3(0.0,0.0,1.0)\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"interpolatedColor=color;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn lines;\r\n\t\t}\r\n\r\n\t\tvar lines=new Lines();\r\n\t\tif (needAspectUniform) {\r\n\t\t\tlines.a(\"uniform float aspect;\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.a(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.a(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.a(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tif (options.shader=='light') {\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\"varying vec3 interpolatedView;\");\r\n\t\t\t}\r\n\t\t\tif (shape.dim>2) {\r\n\t\t\t\tlines.a(\"attribute vec3 normal;\");\r\n\t\t\t}\r\n\t\t\tlines.a(\"varying vec3 interpolatedNormal;\");\r\n\t\t}\r\n\t\tif (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"attribute vec4 color;\",\r\n\t\t\t\t\"varying vec4 interpolatedColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"void main() {\",\r\n\t\t\tgenerateMain().indent(),\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"precision mediump float;\"\r\n\t\t);\r\n\t\tif (options.shader=='single') {\r\n\t\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"uniform vec4 color;\",\r\n\t\t\t\t\t\"void main() {\",\r\n\t\t\t\t\t\"\tgl_FragColor=color;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"void main() {\",\r\n\t\t\t\t\t\"\tgl_FragColor=vec4(\"+glslColorValue('shader.single.color')+\");\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else if (options.shader=='vertex' || options.shader=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec4 interpolatedColor;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tgl_FragColor=interpolatedColor;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else if (options.shader=='light') {\r\n\t\t\tlines.a(\r\n\t\t\t\tlightDirectionUniform.getGlslDeclarationLines()\r\n\t\t\t);\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"varying vec3 interpolatedView;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec3 interpolatedNormal;\",\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"\tvec3 ambientColor=vec3(0.2,0.2,0.2);\",\r\n\t\t\t\t\"\tvec3 diffuseColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tvec3 specularColor=vec3(0.4,0.4,0.4);\",\r\n\t\t\t\t\"\tfloat shininess=100.0;\"\r\n\t\t\t);\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=vec3( 0.0, 0.0,+1.0);\"\r\n\t\t\t\t);\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tvec3 V=normalize(interpolatedView);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 N=normalize(interpolatedNormal);\"\r\n\t\t\t);\r\n\t\t\tif (shape.twoSided) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (!gl_FrontFacing) N=-N;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvec3 L=normalize(\"+lightDirectionUniform.getGlslValue()+\");\",\r\n\t\t\t\t\"\tvec3 H=normalize(L+V);\",\r\n\t\t\t\t\"\tgl_FragColor=vec4(\",\r\n\t\t\t\t\"\t\tambientColor\",\r\n\t\t\t\t\"\t\t+diffuseColor*max(0.0,dot(L,N))\",\r\n\t\t\t\t\"\t\t+specularColor*pow(max(0.0,dot(H,N)),shininess)\",\r\n\t\t\t\t\"\t,1.0);\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateHtmlControlMessageLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<ul>\",\r\n\t\t\t\"</ul>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateHtmlInputLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\"\r\n\t\t\t\t);\r\n\t\t\t\tif (option.name!='shape.lodShape.lod') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel(options[option.name+'.min'])+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (option.getStep()==1) {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+intOptionValue(option.name+'.min')+\"' max='\"+intOptionValue(option.name+'.max')+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+floatOptionValue(option.name+'.min')+\"' max='\"+floatOptionValue(option.name+'.max')+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel(options[option.name+'.max'])+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel(shape.lod.min)+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+shape.lod.min+\"' max='\"+shape.lod.max+\"' value='\"+shape.lod.value+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel(shape.lod.max)+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsMakeProgramLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"gl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"gl.compileShader(vertexShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"gl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"gl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=gl.createProgram();\",\r\n\t\t\t\"gl.attachShader(program,vertexShader);\",\r\n\t\t\t\"gl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"gl.linkProgram(program);\",\r\n\t\t\t\"return program;\"\r\n\t\t);\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction generateJsInitLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var canvas=document.getElementById('myCanvas');\",\r\n\t\t\t\"var gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\"\r\n\t\t);\r\n\t\tif (options['elements']=='32') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.getExtension('OES_element_index_uint');\" // TODO check if null is returned and don't allow more elements\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.background=='solid' && !options.hasInputsFor('background.solid.color') && !(\r\n\t\t\t// default clear color in OpenGL\r\n\t\t\toptions['background.solid.color.r']==0 &&\r\n\t\t\toptions['background.solid.color.g']==0 &&\r\n\t\t\toptions['background.solid.color.b']==0 &&\r\n\t\t\toptions['background.solid.color.a']==0\r\n\t\t)) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.clearColor(\"+colorValue('background.solid.color')+\");\"\r\n\t\t\t)\r\n\t\t}\r\n\t\tif (shape.dim>2) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.enable(gl.DEPTH_TEST);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=makeProgram(\",\r\n\t\t\t\"\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\t\"\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.useProgram(program);\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsInputHandlerLines() {\r\n\t\tvar writeListenerArgs=[!options.isAnimated(),options.debugInputs];\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction canvasUpdater() {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function updateAspect() {\",\r\n\t\t\t\t\"\tgl.viewport(0,0,canvas.width,canvas.height);\",\r\n\t\t\t\t\"\tgl.uniform1f(aspectLoc,canvas.width/canvas.height);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateAspect();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction canvasListener(wh) {\r\n\t\t\tvar optName='canvas.'+wh;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"canvas.\"+wh+\"=parseInt(this.value);\")\r\n\t\t\t\t\t.post(\"updateAspect();\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStates(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tif (isMousemoveInput(name)) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+stateVarPrefix+c.toUpperCase()+'='+floatOptionValue(name)+';'\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\"\r\n\t\t\t);\r\n\t\t\tif (options.hasAllSliderInputsFor(optionPrefix)) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\t\"+allInputsPre+\"['r','g','b','a'].map(function(c){\",\r\n\t\t\t\t\t\"\t\treturn parseFloat(document.getElementById('\"+optionPrefix+\".'+c).value);\",\r\n\t\t\t\t\t\"\t})\"+allInputsPost\r\n\t\t\t\t);\r\n\t\t\t// TODO hasAllStateInputsFor(optionPrefix)\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\t\"+someInputsPre+['r','g','b','a'].map(function(c){\r\n\t\t\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\t\t\treturn \"parseFloat(document.getElementById('\"+name+\"').value)\";\r\n\t\t\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\t\t\treturn stateVarPrefix+c.toUpperCase();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn floatOptionValue(name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).join()+someInputsPost\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"}\",\r\n\t\t\t\tupdateFnName+\"();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction colorSingleListener(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar onlyInput=options.getOnlyInputFor(optionPrefix);\r\n\t\t\tvar listener;\r\n\t\t\tif (onlyInput===null) {\r\n\t\t\t\tlistener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+optionPrefix+\".\\\"]\");\r\n\t\t\t} else {\r\n\t\t\t\tlistener=new listeners.SliderListener(onlyInput.name);\r\n\t\t\t}\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\twriteListener(listener);\r\n\t\t}\r\n\t\tfunction colorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\t['r','g','b','a'].forEach(function(c){\r\n\t\t\t\tvar name=optionPrefix+'.'+c;\r\n\t\t\t\tvar varName=stateVarPrefix+c.toUpperCase();\r\n\t\t\t\tif (options[name+'.input']=='slider') {\r\n\t\t\t\t\tvar listener=new listeners.SliderListener(name);\r\n\t\t\t\t\tlistener.enter()\r\n\t\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t\twriteListener(listener);\r\n\t\t\t\t} else if (isMousemoveInput(name)) {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.minMaxFloat(options[name+'.input'],varName,floatOptionValue(name+'.min'),floatOptionValue(name+'.max'))\r\n\t\t\t\t\t\t.log(\"console.log('\"+name+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction colorListeners(optionPrefix,updateFnName,stateVarPrefix) {\r\n\t\t\tvar needOnlyOneListener=['r','g','b','a'].every(function(c){\r\n\t\t\t\tvar inputType=options[optionPrefix+'.'+c+'.input'];\r\n\t\t\t\treturn inputType=='constant' || inputType=='slider';\r\n\t\t\t});\r\n\t\t\tif (needOnlyOneListener) {\r\n\t\t\t\tcolorSingleListener(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t} else {\r\n\t\t\t\tcolorMultipleListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction colorStatesAndUpdaterAndListeners(\r\n\t\t\toptionPrefix,updateFnName,stateVarPrefix,\r\n\t\t\tallInputsPre,allInputsPost,\r\n\t\t\tsomeInputsPre,someInputsPost\r\n\t\t) {\r\n\t\t\tcolorStates(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t\tcolorUpdater(optionPrefix,updateFnName,stateVarPrefix,allInputsPre,allInputsPost,someInputsPre,someInputsPost);\r\n\t\t\tcolorListeners(optionPrefix,updateFnName,stateVarPrefix);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('canvas')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var aspectLoc=gl.getUniformLocation(program,'aspect');\"\r\n\t\t\t);\r\n\t\t\tcanvasUpdater();\r\n\t\t\tcanvasListener('width');\r\n\t\t\tcanvasListener('height');\r\n\t\t}\r\n\t\tif (options.hasInputsFor('background.solid.color')) {\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'background.solid.color','updateClearColor','clearColor',\r\n\t\t\t\t'gl.clearColor.apply(gl,',');',\r\n\t\t\t\t'gl.clearColor(',');'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.hasInputsFor('shader.single.color')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var colorLoc=gl.getUniformLocation(program,'color');\"\r\n\t\t\t);\r\n\t\t\tcolorStatesAndUpdaterAndListeners(\r\n\t\t\t\t'shader.single.color','updateColor','color',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,',');',\r\n\t\t\t\t'gl.uniform4fv(colorLoc,[',']);'\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.shader=='light') {\r\n\t\t\tlines.a(\r\n\t\t\t\tlightDirectionUniform.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener)\r\n\t\t\t);\r\n\t\t}\r\n\t\toptions.getInputsFor('shape').forEach(function(option){\r\n\t\t\tfunction varName(prefix) {\r\n\t\t\t\tvar i=option.name.lastIndexOf('.');\r\n\t\t\t\tvar s=option.name.substring(i+1);\r\n\t\t\t\tvar S=s.charAt(0).toUpperCase()+s.slice(1);\r\n\t\t\t\tif (prefix!==undefined) {\r\n\t\t\t\t\treturn prefix+'Shape'+S;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn 'shape'+S;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[option.name+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(option.name);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"storeShape(parseInt(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(option.name)) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.newVarInt(options[option.name+'.input'],varName())\r\n\t\t\t\t\t.cond(varName('new')+\"!=\"+varName())\r\n\t\t\t\t\t.log(\"console.log('\"+option.name+\" input value:',\"+varName('new')+\");\")\r\n\t\t\t\t\t.post(\"storeShape(\"+varName('new')+\");\");\r\n\t\t\t}\r\n\t\t});\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\" // have to initialize the uniform even if default value is zero because the browser may keep prev value of slider on page reload\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.minMaxVarFloat(options[optName+'.input'],varName,'-180','+180')\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.minMaxFloat(options[optName+'.input'],varName,'-180','+180')\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.minMaxFloat(options[optName+'.speed.input'],varName+'Speed','-360','+360')\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=new Lines;\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tif (options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=new Lines;\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\tinnerTransformsLines,\r\n\t\t\t\tshape.writeDraw()\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=new Lines;\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// wrap inner render lines in function if needed\r\n\t\tif (options.isAnimated()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function renderFrame(time) {\",\r\n\t\t\t\tinnerLines.indent()\r\n\t\t\t);\r\n\t\t\tif (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\trequestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"requestAnimationFrame(renderFrame);\"\r\n\t\t\t);\r\n\t\t} else if (options.hasInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var frameId=null;\",\r\n\t\t\t\t\"function renderFrame() {\",\r\n\t\t\t\tinnerLines.indent(),\r\n\t\t\t\t\"\tframeId=null;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"function scheduleFrame() {\",\r\n\t\t\t\t\"\tif (frameId===null) {\",\r\n\t\t\t\t\"\t\tframeId=requestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"scheduleFrame();\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\tvar scriptLines=new Lines;\r\n\tscriptLines.interleave(\r\n\t\tgenerateJsMakeProgramLines(),\r\n\t\tgenerateJsInitLines(),\r\n\t\tshape.writeInit(options.debugArrays),\r\n\t\tgenerateJsInputHandlerLines(),\r\n\t\tgenerateJsRenderLines()\r\n\t).wrap(\r\n\t\t\"<script>\",\r\n\t\t\"</script>\"\r\n\t);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t\tgenerateHtmlStyleLines(),\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t\tgenerateVertexShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\tgenerateFragmentShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='\"+intOptionValue('canvas.width')+\"' height='\"+intOptionValue('canvas.height')+\"'></canvas>\",\r\n\t\t\"</div>\",\r\n\t\tgenerateHtmlControlMessageLines(),\r\n\t\tgenerateHtmlInputLines(),\r\n\t\tscriptLines,\r\n\t\t\"</body>\",\r\n\t\t\"</html>\"\r\n\t);\r\n\treturn lines.join(\r\n\t\toptions.indent=='tab' ? '\\t' : Array(parseInt(options.indent)+1).join(' ')\r\n\t);\r\n};\r\n",null,"module.exports=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\t\t'message.elements': \"choosing 8- or 16-bit index may limit available shape detail levels\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'None (transparent)',\r\n\t\t'options.background.solid': 'Solid color',\r\n\t\t'options.shader': 'Shader',\r\n\t\t'options.shader.single': 'Single color',\r\n\t\t'options.shader.vertex': 'One color per vertex',\r\n\t\t'options.shader.face': 'One color per face',\r\n\t\t'options.shader.light': 'Directional light',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'Square',\r\n\t\t'options.shape.triangle': 'Triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'Cube',\r\n\t\t'options.shape.hat': 'Mexican hat function', // wp: Mexican hat wavelet\r\n\t\t'options.shape.terrain': 'Diamond-square fractal terrain', // wp: Diamond-square algorithm\r\n\t\t'options.elements': 'Element array',\r\n\t\t'options.elements.0': 'not used',\r\n\t\t'options.elements.8': 'with 8-bit index',\r\n\t\t'options.elements.16': 'with 16-bit index',\r\n\t\t'options.elements.32': 'with 32-bit index',\r\n\t\t'options.projection': 'Projection',\r\n\t\t'options.projection.ortho': 'Orthogonal',\r\n\t\t'options.projection.perspective': 'Perspective',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.canvas.width': 'Canvas width',\r\n\t\t'options.canvas.height': 'Canvas height',\r\n\t\t'options.background.solid.color.r': 'Background color red component',\r\n\t\t'options.background.solid.color.g': 'Background color green component',\r\n\t\t'options.background.solid.color.b': 'Background color blue component',\r\n\t\t'options.background.solid.color.a': 'Background color alpha component',\r\n\t\t'options.shader.single.color.r': 'Fragment color red component',\r\n\t\t'options.shader.single.color.g': 'Fragment color green component',\r\n\t\t'options.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'options.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'options.shader.light.direction.x': 'Light direction x component',\r\n\t\t'options.shader.light.direction.y': 'Light direction y component',\r\n\t\t'options.shader.light.direction.z': 'Light direction z component',\r\n\t\t'options.shape.lodShape.lod': 'Shape detail level', // recursion depth for fractal shapes\r\n\t\t'options.*.input': 'Input method',\r\n\t\t'options.*.input.constant': 'none',\r\n\t\t'options.*.input.slider': 'slider',\r\n\t\t'options.*.input.mousemovex': 'mouse x axis',\r\n\t\t'options.*.input.mousemovey': 'mouse y axis',\r\n\t\t'options.*.input.animated': 'animated',\r\n\t\t'options.*.range': 'with range',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShaders': 'Log shader compilation errors',\r\n\t\t'options.debugArrays': 'Log allocated array sizes',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'options.formatting': 'Code formatting options',\r\n\t\t'options.indent': 'Indent',\r\n\t\t'options.indent.tab': 'Tab',\r\n\t\t'options.indent.2': '2 spaces',\r\n\t\t'options.indent.4': '4 spaces',\r\n\t\t'options.indent.8': '8 spaces',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n","/*\r\n.a = add AFTER last line\r\n.t = add TO last line\r\n*/\r\n\r\nvar Lines=function(){\r\n\tthis.data=[];\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n};\r\n\r\n// private\r\nLines.prototype.flattenArgs=function(s){\r\n\tvar r=[];\r\n\tfor (var i=0;i<s.length;i++) {\r\n\t\tif (typeof s[i] == 'string') {\r\n\t\t\tr.push(s[i]);\r\n\t\t} else if (Array.isArray(s[i])) {\r\n\t\t\tArray.prototype.push.apply(r,s[i]);\r\n\t\t} else if (s[i] instanceof Lines) {\r\n\t\t\tArray.prototype.push.apply(r,s[i].data);\r\n\t\t}\r\n\t}\r\n\treturn r;\r\n};\r\nLines.prototype.addFlattenedArgs=function(s){\r\n\tArray.prototype.push.apply(this.data,s);\r\n};\r\n\r\n// public\r\nLines.prototype.a=function(){\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n\treturn this;\r\n};\r\nLines.prototype.t=function(){\r\n\tvar lastLine=this.data.pop();\r\n\tvar s=this.flattenArgs(arguments);\r\n\ts[0]=lastLine+s[0];\r\n\tthis.addFlattenedArgs(s);\r\n\treturn this;\r\n};\r\nLines.prototype.indent=function(level){\r\n\tif (level===undefined) {\r\n\t\tlevel=1;\r\n\t}\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn Array(level+1).join('\\t')+line;\r\n\t});\r\n\treturn this;\r\n};\r\nLines.prototype.isEmpty=function(){\r\n\treturn this.data.length<=0;\r\n};\r\nLines.prototype.interleave=function(){\r\n\tvar first=true;\r\n\tfor (var i=0;i<arguments.length;i++) {\r\n\t\tvar r=this.flattenArgs([arguments[i]]);\r\n\t\tif (r.length>0) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst=false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.data.push('');\r\n\t\t\t}\r\n\t\t\tthis.addFlattenedArgs(r);\r\n\t\t}\r\n\t}\r\n\treturn this;\r\n};\r\nLines.prototype.wrap=function(begin,end){\r\n\tthis.indent();\r\n\tthis.data.unshift(begin);\r\n\tthis.data.push(end);\r\n\treturn this;\r\n};\r\nLines.prototype.wrapIfNotEmpty=function(begin,end){\r\n\tif (!this.isEmpty()) {\r\n\t\tthis.wrap(begin,end);\r\n\t}\r\n\treturn this;\r\n};\r\n/*\r\nLines.prototype.wrapEachLine=function(begin,end){\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn begin+line+end;\r\n\t});\r\n\treturn this;\r\n};\r\n*/\r\nLines.prototype.join=function(indent){\r\n\treturn this.data.map(function(line){\r\n\t\treturn line.replace(/^(\\t)+/,function(match){\r\n\t\t\treturn Array(match.length+1).join(indent);\r\n\t\t});\r\n\t}).join('\\n');\r\n};\r\n\r\nmodule.exports=Lines;\r\n","var Lines=require('./lines.js');\r\n\r\nvar Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tvar outerLines=new Lines;\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push('\\t'+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn new Lines(lines);\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines.a(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"scheduleFrame();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (!innerLines.isEmpty()) {\r\n\t\tinnerLines=new Lines(\r\n\t\t\tthis.innerPrependedLines(),\r\n\t\t\tinnerLines\r\n\t\t);\r\n\t}\r\n\tif (innerLines.data.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines.data[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.a(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\tnew Lines(\r\n\t\t\t\t\t\tbr[0]+match[1]+br[1]\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t// TODO what if no match?\r\n\t}\r\n\tif (innerLines.data.length) {\r\n\t\treturn outerLines.a(\r\n\t\t\tthis.wrapCall(\r\n\t\t\t\tinnerLines.wrap(\r\n\t\t\t\t\tbr[0]+\"function(\"+this.bracketFnArg()+\"){\",\r\n\t\t\t\t\t\"}\"+br[1]\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn lines.wrap(\r\n\t\t\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\",\r\n\t\t\"});\"\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tfunction floatHelper(minMaxFlag,varFlag,inputType,varName,minValue,maxValue){\r\n\t\tvar VarName=varName.charAt(0).toUpperCase()+varName.slice(1);\r\n\t\tif (minValue==0 && maxValue==1) {\r\n\t\t\tvar dest=(varFlag?\"var \":\"\")+varName+\"=\";\r\n\t\t} else {\r\n\t\t\tproxy.pre(\"var min\"+VarName+\"=\"+minValue+\";\");\r\n\t\t\tproxy.pre(\"var max\"+VarName+\"=\"+maxValue+\";\");\r\n\t\t\tvar dest=(varFlag?\"var \":\"\")+varName+\"=min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\")*\";\r\n\t\t}\r\n\t\treturn proxy.prexy(\r\n\t\t\tinputType,\r\n\t\t\tdest+\"(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\tdest+\"(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t);\r\n\t}\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\tproxy.minMaxFloat=function(inputType,varName,minValue,maxValue){\r\n\t\treturn floatHelper(true,false,inputType,varName,minValue,maxValue);\r\n\t};\r\n\tproxy.minMaxVarFloat=function(inputType,varName,minValue,maxValue){\r\n\t\treturn floatHelper(true,true,inputType,varName,minValue,maxValue);\r\n\t};\r\n\tproxy.newVarInt=function(inputType,varName){\r\n\t\tvar VarName=varName.charAt(0).toUpperCase()+varName.slice(1);\r\n\t\treturn proxy.prexy(\r\n\t\t\tinputType,\r\n\t\t\t\"var new\"+VarName+\"=Math.floor(min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\"+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\"var new\"+VarName+\"=Math.floor(min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\"+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t);\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar i18n=require('./i18n.js');\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar $container=$(this);\r\n\t\tvar $options;\r\n\t\tvar $code;\r\n\t\tvar options=new Options();\r\n\t\tvar codeUpdateTimeoutId=null;\r\n\t\tvar codeUpdateDelay=200;\r\n\r\n\t\tfunction showHideSuboptionInputs(option,optionValue) {\r\n\t\t\t$options.find(\"[data-option^='\"+option.getSuboptionScopePrefix()+\"']\").show()\r\n\t\t\t\t.not(\"[data-option^='\"+option.getSuboptionHitPrefix(optionValue)+\"']\").hide();\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tclearTimeout(codeUpdateTimeoutId);\r\n\t\t\tcodeUpdateTimeoutId=setTimeout(function(){\r\n\t\t\t\t$code.text(generateCode(options.fix(),i18n));\r\n\t\t\t\tif (window.hljs) hljs.highlightBlock($code[0]);\r\n\t\t\t},codeUpdateDelay);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar $option=$(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option,this.value);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tif (option.name=='elements') {\r\n\t\t\t\t$option.append(\" \"+i18n('message.elements'));\r\n\t\t\t}\r\n\t\t\treturn $option;\r\n\t\t}\r\n\t\tfunction writeInputOption(option,withRange) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar $sliderInput,$numberInput;\r\n\t\t\tvar $inputSelect;\r\n\t\t\tvar $rangeSpan,$rangeMinInput,$rangeMaxInput;\r\n\t\t\tfunction inputListener(that) {\r\n\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\tthat.val(this.value);\r\n\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\tupdateCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction minMaxInput(minOrMax) {\r\n\t\t\t\treturn $(\"<input type='number' required>\")\r\n\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t.val(options[option.name+'.'+minOrMax])\r\n\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\t\t\toptions[option.name+'.'+minOrMax]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tvar $optionDiv=$(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$sliderInput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,$numberInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$numberInput=$(\"<input type='number' required>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,$sliderInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\":</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$inputSelect=$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\toption.availableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tif (withRange) {\r\n\t\t\t\t\t\t\tif (this.value=='constant') {\r\n\t\t\t\t\t\t\t\t$rangeSpan.hide();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$rangeSpan.show();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tif (withRange) {\r\n\t\t\t\t$optionDiv.append(\" \").append(\r\n\t\t\t\t\t$rangeSpan=$(\"<span class='range'>\")\r\n\t\t\t\t\t\t.append(i18n('options.*.range')+\" \")\r\n\t\t\t\t\t\t.append($rangeMinInput=minMaxInput('min'))\r\n\t\t\t\t\t\t.append(\" .. \")\r\n\t\t\t\t\t\t.append($rangeMaxInput=minMaxInput('max'))\r\n\t\t\t\t);\r\n\t\t\t\tif ($inputSelect.val()=='constant') {\r\n\t\t\t\t\t$rangeSpan.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$optionDiv.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tif (withRange) {\r\n\t\t\t\t\t\t\t$rangeMinInput.val(option.getMin());\r\n\t\t\t\t\t\t\t$rangeMaxInput.val(option.getMax());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$sliderInput.val(option.defaultValue).change();\r\n\t\t\t\t\t\t$inputSelect.val('constant').change();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\treturn $optionDiv;\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction makeSortable($sortableRoot,callback) {\r\n\t\t\t// have to make drag handler 'draggable', not the whole item\r\n\t\t\t// because inputs and labels don't like to be inside 'draggable'\r\n\t\t\t// http://stackoverflow.com/questions/13017177/selection-disabled-while-using-html5-drag-and-drop\r\n\t\t\tvar $dragged=null;\r\n\t\t\t$sortableRoot.children().prepend(\r\n\t\t\t\t$(\"<div draggable='true' tabindex='0' title='Drag or press up/down while in focus to reorder transforms'>\").on('dragstart',function(ev){\r\n\t\t\t\t\t$dragged=$(this).parent();\r\n\t\t\t\t\tev.originalEvent.dataTransfer.effectAllowed='move';\r\n\t\t\t\t\tev.originalEvent.dataTransfer.setData('Text',name);\r\n\t\t\t\t\tif (ev.originalEvent.dataTransfer.setDragImage) { // doesn't work in IE\r\n\t\t\t\t\t\tev.originalEvent.dataTransfer.setDragImage($dragged[0],0,0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$dragged.addClass('ghost');\r\n\t\t\t\t\t},0);\r\n\t\t\t\t})\r\n\t\t\t\t.keydown(function(ev){\r\n\t\t\t\t\tvar $handle=$(this);\r\n\t\t\t\t\tvar $sorted=$handle.parent();\r\n\t\t\t\t\tif (ev.keyCode==38) {\r\n\t\t\t\t\t\t$sorted.prev().before($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (ev.keyCode==40) {\r\n\t\t\t\t\t\t$sorted.next().after($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t).on('dragover',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.originalEvent.dataTransfer.dropEffect='move';\r\n\t\t\t\tvar $target=$(this);\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\tif ($target.nextAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.before($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t} else if ($target.prevAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.after($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).on('drop',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}).on('dragend',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\t$dragged.removeClass('ghost');\r\n\t\t\t\t\t$dragged=null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\tvar $transforms;\r\n\t\t\tvar $options=$(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(function(option){\r\n\t\t\t\t\t\treturn writeInputOption(option,true)\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\t$transforms=$(\"<div>\").append(\r\n\t\t\t\t\t\toptions.transforms.map(function(transform){\r\n\t\t\t\t\t\t\treturn $(\"<div class='transform' data-transform='\"+transform.name+\"'>\").append(\r\n\t\t\t\t\t\t\t\ttransform.options.map(function(option){\r\n\t\t\t\t\t\t\t\t\treturn writeInputOption(option,false)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.formatting')+\"</legend>\").append(\r\n\t\t\t\t\toptions.formattingOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tmakeSortable($transforms,function(){\r\n\t\t\t\toptions.transformOrder=$transforms.children().map(function(){\r\n\t\t\t\t\treturn $(this).attr('data-transform');\r\n\t\t\t\t}).get();\r\n\t\t\t\tupdateCode();\r\n\t\t\t});\r\n\t\t\treturn $options;\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.generalOptions.forEach(function(option){\r\n\t\t\t\tshowHideSuboptionInputs(option,options[option.name]);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri($code.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri($code.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t$container.empty().append($options=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\t$container.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append($code=$(\"<code>\").text(generateCode(options.fix(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock($code[0]);\r\n\t\t} else {\r\n\t\t\t$container.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\t$container.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n};\r\nOption.prototype.getSuboptionScopePrefix=function(){\r\n\treturn this.name+'.';\r\n}\r\nOption.prototype.getSuboptionHitPrefix=function(value){\r\n\tif (this.name=='shape' && ['gasket','hat','terrain'].indexOf(value)>=0) {\r\n\t\tvalue='lodShape';\r\n\t}\r\n\treturn this.getSuboptionScopePrefix()+value+'.';\r\n}\r\nOption.prototype.doesValueHideOption=function(value,option){\r\n\tfunction optionStartsWith(prefix) {\r\n\t\treturn option.name.indexOf(prefix)===0;\r\n\t}\r\n\treturn optionStartsWith(\r\n\t\tthis.getSuboptionScopePrefix()\r\n\t) && !optionStartsWith(\r\n\t\tthis.getSuboptionHitPrefix(value)\r\n\t);\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue){\r\n\tOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getMinLabel=function(value){\r\n\tif (value===undefined) value=this.getMin();\r\n\treturn value.toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(value){\r\n\tif (value===undefined) value=this.getMax();\r\n\treturn value.toString().replace('-','−');\r\n};\r\n\r\nvar FloatInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nFloatInputOption.prototype=Object.create(InputOption.prototype);\r\nFloatInputOption.prototype.constructor=FloatInputOption;\r\nFloatInputOption.prototype.getStep=function(){\r\n\treturn 'any';\r\n};\r\nFloatInputOption.prototype.getSetupStep=function(){\r\n\tif (this.getMax()>=100) {\r\n\t\treturn '0.1';\r\n\t} else if (this.getMax()>=10) {\r\n\t\treturn '0.01';\r\n\t} else {\r\n\t\treturn '0.001';\r\n\t}\r\n};\r\n\r\nvar IntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nIntInputOption.prototype=Object.create(InputOption.prototype);\r\nIntInputOption.prototype.constructor=IntInputOption;\r\nIntInputOption.prototype.getStep=function(){\r\n\treturn 1;\r\n};\r\nIntInputOption.prototype.getSetupStep=function(){\r\n\treturn 1;\r\n};\r\n\r\nvar CanvasIntInputOption=function(name,rangeOfValues,defaultValue){\r\n\tIntInputOption.call(this,name,rangeOfValues,defaultValue);\r\n};\r\nCanvasIntInputOption.prototype=Object.create(IntInputOption.prototype);\r\nCanvasIntInputOption.prototype.constructor=CanvasIntInputOption;\r\nCanvasIntInputOption.prototype.availableInputTypes=['constant','slider']; // can't change canvas size by moving mouse over canvas\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar OptionsBlueprint=function(){\r\n\tthis.reset();\r\n};\r\nOptionsBlueprint.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('shader',['single','vertex','face','light']),\r\n\tnew Option('shape',['square','triangle','gasket','cube','hat','terrain']),\r\n\tnew Option('elements',['0','8','16','32']),\r\n\tnew Option('projection',['ortho','perspective']),\r\n];\r\nOptionsBlueprint.prototype.inputOptions=[\r\n\tnew CanvasIntInputOption('canvas.width',[1,1024],512),\r\n\tnew CanvasIntInputOption('canvas.height',[1,1024],512),\r\n\tnew FloatInputOption('background.solid.color.r',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.g',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.b',[0,1],1),\r\n\tnew FloatInputOption('background.solid.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.r',[0,1],1),\r\n\tnew FloatInputOption('shader.single.color.g',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.b',[0,1]),\r\n\tnew FloatInputOption('shader.single.color.a',[0,1],1),\r\n\tnew FloatInputOption('shader.light.direction.x',[-4,+4],-1),\r\n\tnew FloatInputOption('shader.light.direction.y',[-4,+4],+1),\r\n\tnew FloatInputOption('shader.light.direction.z',[-4,+4],+1),\r\n\tnew IntInputOption('shape.lodShape.lod',[0,10],6),\r\n];\r\nOptionsBlueprint.prototype.transformOptions=[];\r\nOptionsBlueprint.prototype.transforms=[];\r\n['rotate.x','rotate.y','rotate.z'].forEach(function(name){\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tvar valueOption=new FloatInputOption(name,[-180,180],0);\r\n\tvar speedOption=new FloatInputOption(name+'.speed',[-360,360],0);\r\n\tOptionsBlueprint.prototype.transformOptions.push(valueOption);\r\n\tOptionsBlueprint.prototype.transformOptions.push(speedOption);\r\n\tOptionsBlueprint.prototype.transforms.push({\r\n\t\tname:name,\r\n\t\toptions:[valueOption,speedOption]\r\n\t});\r\n});\r\nOptionsBlueprint.prototype.debugOptions=[\r\n\tnew DebugOption('debugShaders',true),\r\n\tnew DebugOption('debugArrays'),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptionsBlueprint.prototype.formattingOptions=[\r\n\tnew Option('indent',['tab','2','4','8']),\r\n];\r\nOptionsBlueprint.prototype.groupNames=['generalOptions','inputOptions','transformOptions','debugOptions','formattingOptions'];\r\nOptionsBlueprint.prototype.reset=function(){\r\n\tthis.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName].forEach(function(option){\r\n\t\t\tthis[option.name]=option.defaultValue;\r\n\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\tthis[option.name+'.input']='constant';\r\n\t\t\t\tthis[option.name+'.min']=option.getMin();\r\n\t\t\t\tthis[option.name+'.max']=option.getMax();\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=this.transforms.map(function(transform){\r\n\t\treturn transform.name;\r\n\t});\r\n};\r\nOptionsBlueprint.prototype.fix=function(){\r\n\treturn new OptionsInstance(this);\r\n};\r\n\r\nvar OptionsInstance=function(blueprint){\r\n\tblueprint.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName]=[];\r\n\t\tblueprint[groupName].forEach(function(option){\r\n\t\t\tvar isHidden=blueprint.generalOptions.some(function(generalOption){\r\n\t\t\t\treturn generalOption.doesValueHideOption(blueprint[generalOption.name],option);\r\n\t\t\t});\r\n\t\t\tif (!isHidden) {\r\n\t\t\t\tthis[groupName].push(option);\r\n\t\t\t\tthis[option.name]=blueprint[option.name];\r\n\t\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\t\tthis[option.name+'.input']=blueprint[option.name+'.input'];\r\n\t\t\t\t\tthis[option.name+'.min']=blueprint[option.name+'.min'];\r\n\t\t\t\t\tthis[option.name+'.max']=blueprint[option.name+'.max'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=blueprint.transformOrder;\r\n};\r\nOptionsInstance.prototype.getInputOptionsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.getInputsFor(prefix);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptionsInstance.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasInputsFor=function(prefix){\r\n\treturn this.getInputsFor(prefix).length>0;\r\n};\r\nOptionsInstance.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.getInputOptionsFor(prefix).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant');\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptionsInstance.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nmodule.exports=OptionsBlueprint;\r\n","exports.Square=require('./shapes/square.js');\r\nexports.Triangle=require('./shapes/triangle.js');\r\nexports.Gasket=require('./shapes/gasket.js');\r\nexports.Cube=require('./shapes/cube.js');\r\nexports.Hat=require('./shapes/hat.js');\r\nexports.Terrain=require('./shapes/terrain.js');\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Cube=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nCube.prototype=Object.create(Shape.prototype);\r\nCube.prototype.constructor=Cube;\r\nCube.prototype.dim=3;\r\nCube.prototype.twoSided=false;\r\nCube.prototype.writeArrays=function(c,cv){\r\n\tvar nCubeVertices=8;\r\n\tvar cubeVertexPositions=[\r\n\t\t\"-0.5,-0.5,-0.5,\",\r\n\t\t\"+0.5,-0.5,-0.5,\",\r\n\t\t\"-0.5,+0.5,-0.5,\",\r\n\t\t\"+0.5,+0.5,-0.5,\",\r\n\t\t\"-0.5,-0.5,+0.5,\",\r\n\t\t\"+0.5,-0.5,+0.5,\",\r\n\t\t\"-0.5,+0.5,+0.5,\",\r\n\t\t\"+0.5,+0.5,+0.5,\",\r\n\t];\r\n\tvar cubeVertexColors=[\r\n\t\t\" 0.0, 0.0, 0.0,\",\r\n\t\t\" 1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0, 1.0, 0.0,\",\r\n\t\t\" 1.0, 1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0, 1.0,\",\r\n\t\t\" 1.0, 0.0, 1.0,\",\r\n\t\t\" 0.0, 1.0, 1.0,\",\r\n\t\t\" 1.0, 1.0, 1.0,\",\r\n\t];\r\n\tvar nCubeFaces=6;\r\n\tvar cubeFaceNames=[\r\n\t\t\"left\",\r\n\t\t\"right\",\r\n\t\t\"bottom\",\r\n\t\t\"top\",\r\n\t\t\"back\",\r\n\t\t\"front\",\r\n\t];\r\n\tvar cubeFaceNormals=[\r\n\t\t\"-1.0, 0.0, 0.0,\",\r\n\t\t\"+1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0,-1.0, 0.0,\",\r\n\t\t\" 0.0,+1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0,-1.0,\",\r\n\t\t\" 0.0, 0.0,+1.0,\",\r\n\t];\r\n\tvar cubeFaceColors=[\r\n\t\t\" 1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0, 1.0, 0.0,\",\r\n\t\t\" 1.0, 1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0, 1.0,\",\r\n\t\t\" 1.0, 0.0, 1.0,\",\r\n\t\t\" 0.0, 1.0, 1.0,\",\r\n\t];\r\n\tvar cubeFaceVertices=[\r\n\t\t[4, 6, 0, 2],\r\n\t\t[1, 3, 5, 7],\r\n\t\t[0, 1, 4, 5],\r\n\t\t[2, 6, 3, 7],\r\n\t\t[0, 2, 1, 3],\r\n\t\t[5, 7, 4, 6],\r\n\t];\r\n\tvar quadToTriangleMap=[0, 1, 2, 2, 1, 3];\r\n\tvar vertexLines=new Lines;\r\n\tvertexLines.a(\"// x    y    z\");\r\n\tif (this.shaderType=='light') {\r\n\t\tvertexLines.t(\"  n.x  n.y  n.z\");\r\n\t}\r\n\tif (c) {\r\n\t\tvertexLines.t(\"    r    g    b\");\r\n\t}\r\n\tfunction appendVertex(iFace,iVertex,firstInFace) {\r\n\t\tvertexLines.a(cubeVertexPositions[iVertex]);\r\n\t\tif (this.shaderType=='light') {\r\n\t\t\tvertexLines.t(cubeFaceNormals[iFace]);\r\n\t\t}\r\n\t\tif (this.shaderType=='vertex') {\r\n\t\t\tvertexLines.t(cubeVertexColors[iVertex]);\r\n\t\t}\r\n\t\tif (this.shaderType=='face') {\r\n\t\t\tvertexLines.t(cubeFaceColors[iFace]);\r\n\t\t}\r\n\t\tif (firstInFace) {\r\n\t\t\tvertexLines.t(\" // \"+cubeFaceNames[iFace]+\" face\");\r\n\t\t}\r\n\t}\r\n\tif (!this.usesElements()) {\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tquadToTriangleMap.forEach(function(j,k){\r\n\t\t\t\tappendVertex.call(this,i,cubeFaceVertices[i][j],k==0);\r\n\t\t\t},this);\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\t\"var nVertices=36;\",\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t} else if (this.shaderType=='face' || this.shaderType=='light') {\r\n\t\t// elements, face data\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tcubeFaceVertices[i].forEach(function(j,k){\r\n\t\t\t\tappendVertex.call(this,i,j,k==0);\r\n\t\t\t},this);\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\"]);\"\r\n\t\t);\r\n\t} else {\r\n\t\t// elements, no face data\r\n\t\tfor (var i=0;i<nCubeVertices;i++) {\r\n\t\t\tvertexLines.a(cubeVertexPositions[i]);\r\n\t\t\tif (c) {\r\n\t\t\t\tvertexLines.t(cubeVertexColors[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar elementLines=new Lines;\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\telementLines.a(\"\");\r\n\t\t\tquadToTriangleMap.forEach(function(j){\r\n\t\t\t\telementLines.t(cubeFaceVertices[i][j]+\", \");\r\n\t\t\t});\r\n\t\t\telementLines.t(\"// \"+cubeFaceNames[i]+\" face\");\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\telementLines.wrap(\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmodule.exports=Cube;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Gasket=function(elementIndexBits,shaderType,lod){\r\n\tLodShape.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nGasket.prototype=Object.create(LodShape.prototype);\r\nGasket.prototype.constructor=Gasket;\r\nGasket.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"(Math.pow(3,\"+lodSymbol+\"+1)+3)/2\";\r\n};\r\nGasket.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.writeStoreShape=function(c,cv){\r\n\tfunction writePushVertex() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[0];\",\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[1];\"\r\n\t\t);\r\n\t\tif (c) {\r\n\t\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var c=colors[nextIndexIntoColors];\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var c=colors[nextElement%colors.length];\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[0];\",\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[1];\",\r\n\t\t\t\t\"vertices[nextIndexIntoVertices++]=c[2];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"return nextElement++;\"\r\n\t\t\t);\r\n\t\t} else if (this.shaderType=='vertex') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"nextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function pushVertex(p) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction writeTriangle() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"if (depth<=0) {\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tif (this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.shaderType=='face') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p0));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p1));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p2));\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (es[0]===null) es[0]=pushVertex(p0);\",\r\n\t\t\t\t\t\"\tif (es[1]===null) es[1]=pushVertex(p1);\",\r\n\t\t\t\t\t\"\tif (es[2]===null) es[2]=pushVertex(p2);\",\r\n\t\t\t\t\t\"\tpushElement(es[0]);\",\r\n\t\t\t\t\t\"\tpushElement(es[1]);\",\r\n\t\t\t\t\t\"\tpushElement(es[2]);\",\r\n\t\t\t\t\t\"\treturn es;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"} else {\",\r\n\t\t\t\"\tvar p01=mix(p0,p1);\",\r\n\t\t\t\"\tvar p12=mix(p1,p2);\",\r\n\t\t\t\"\tvar p20=mix(p2,p0);\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\ttriangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else if (this.shaderType=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20,[es[0],null,null]);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01,[es[1],null,es0[1]]);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12,[es[2],es0[2],es1[1]]);\",\r\n\t\t\t\t\"\treturn [es0[0],es1[0],es2[0]];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2,es) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tfunction writeInitialTriangleCall() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"shapeLod,\",\r\n\t\t\t\"[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\"\r\n\t\t);\r\n\t\tif (this.usesElements() && this.shaderType!='face') {\r\n\t\t\tlines.t(\r\n\t\t\t\t\",\",\"[null,null,null]\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"triangle(\",\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var nextIndexIntoVertices=0;\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\tlines.a(\r\n\t\t\t\"var nextIndexIntoElements=0;\",\r\n\t\t\t\"var nextElement=0;\"\r\n\t\t);\r\n\t}\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"// p = position, c = color, e = element, es = elements\",\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t\tif (!this.usesElements() || this.shaderType=='face') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nextIndexIntoColors=0;\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"// p = position, e = element, es = elements\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\twritePushVertex.call(this)\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function pushElement(e) {\",\r\n\t\t\t\"\telements[nextIndexIntoElements++]=e;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\t\"function mix(pa,pb) {\",\r\n\t\t\"\treturn [\",\r\n\t\t\"\t\t(pa[0]+pb[0])/2,\",\r\n\t\t\"\t\t(pa[1]+pb[1])/2,\",\r\n\t\t\"\t];\",\r\n\t\t\"}\",\r\n\t\twriteTriangle.call(this),\r\n\t\twriteInitialTriangleCall.call(this)\r\n\t);\r\n\treturn lines;\r\n}\r\n\r\nmodule.exports=Gasket;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Hat=function(elementIndexBits,shaderType,lod){\r\n\tMesh.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nHat.prototype=Object.create(Mesh.prototype);\r\nHat.prototype.constructor=Hat;\r\nHat.prototype.writeMeshInit=function(){\r\n\treturn new Lines(\r\n\t\t\"var xyRange=4;\",\r\n\t\t\"var xyScale=1/(4*Math.sqrt(2));\"\r\n\t);\r\n};\r\nHat.prototype.writeMeshVertex=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var r2=(x*x+y*y)/2;\",\r\n\t\t\"var A=Math.exp(-r2)/Math.PI;\",\r\n\t\t\"var z=A*(1-r2);\",\r\n\t\t\"vertices[vertexOffset+0]=x*xyScale;\",\r\n\t\t\"vertices[vertexOffset+1]=y*xyScale;\",\r\n\t\t\"vertices[vertexOffset+2]=z;\"\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var normal=normalize([(z+A)*x/xyScale,(z+A)*y/xyScale,1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t((!this.usesElements() && this.shaderType!='face')\r\n\t\t\t\t?\"var ic=((i+di)&1)*2+((j+dj)&1);\"\r\n\t\t\t\t:\"var ic=(i&1)*2+(j&1);\"\r\n\t\t\t),\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Hat;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar LodShape=function(elementIndexBits,shaderType,lod){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n\tthis.lod=lod;\r\n\tvar maxLod=this.getMaxPossibleLod();\r\n\tif (this.lod.value>maxLod) this.lod.value=maxLod;\r\n\tif (this.lod.max>maxLod) this.lod.max=maxLod;\r\n};\r\nLodShape.prototype=Object.create(Shape.prototype);\r\nLodShape.prototype.constructor=LodShape;\r\nLodShape.prototype.getMaxPossibleLod=function(){ // due to element index type\r\n\tif (!this.usesElements() || this.elementIndexBits>=31) { // 1<<31 is a negative number, can't compare with it\r\n\t\treturn this.lod.max; // no need to limit lod if elements are not used or index type is large enough\r\n\t}\r\n\tvar nVerticesFn = this.shaderType=='face'\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar indexLimit=1<<this.elementIndexBits;\r\n\tfor (var m=this.lod.max;m>=0;m--) {\r\n\t\tvar n=eval(nVerticesFn(m));\r\n\t\tif (n<=indexLimit) {\r\n\t\t\treturn m;\r\n\t\t}\r\n\t}\r\n\t// TODO fail here\r\n};\r\n// abstract LodShape.prototype.getDistinctVertexCount=function(lodSymbol){}; // # of distinct vertices where one vertex can be shared between different faces and output primitives\r\n// abstract LodShape.prototype.getFaceVertexCount=function(lodSymbol){}; // # of distinct (vertex,face) pairs that still can be shared between output primitives\r\n// abstract LodShape.prototype.getTotalVertexCount=function(lodSymbol){}; // # of vertices in output primitives = # of elements when element arrays are in use\r\n// abstract LodShape.prototype.writeStoreShape=function(c,cv){};\r\nLodShape.prototype.writeArraysAndBufferData=function(debugArrays,c,cv){\r\n\tvar nVerticesFn = this.shaderType=='face'\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar lines=new Lines;\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"var minShapeLod=\"+this.lod.min+\";\",\r\n\t\t\t\"var maxShapeLod=\"+this.lod.max+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+nVerticesFn(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nMaxElements=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nMaxElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices,nElements;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"\tnElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var shapeLod=\"+this.lod.value+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeStoreShape(c,cv).indent(),\r\n\t\tthis.writeBufferData().indent(),\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape(\"+this.lod.value+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape();\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=LodShape;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Mesh=function(elementIndexBits,shaderType,lod){\r\n\tLodShape.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nMesh.prototype=Object.create(LodShape.prototype);\r\nMesh.prototype.constructor=Mesh;\r\nMesh.prototype.dim=3;\r\nMesh.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\")+1,2)\";\r\n};\r\nMesh.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*4\";\r\n};\r\nMesh.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*6\";\r\n};\r\n// abstract Mesh.prototype.writeMeshInit=function(){};\r\n// abstract Mesh.prototype.writeMeshVertex=function(c,cv){};\r\nMesh.prototype.writeStoreShape=function(c,cv){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var res=(1<<shapeLod);\"\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*6+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*4+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j) {\",\r\n\t\t\t\"\treturn i*(res+1)+j;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"function normalize(v) {\",\r\n\t\t\t\"\tvar l=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);\",\r\n\t\t\t\"\treturn [v[0]/l,v[1]/l,v[2]/l];\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"var colors=[\",\r\n\t\t\t\"\t[1.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[1.0, 0.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 1.0, 0.0],\",\r\n\t\t\t\"\t[0.0, 0.0, 1.0],\",\r\n\t\t\t\"];\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeMeshInit()\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"for (var i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (var j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<6;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.shaderType=='face') {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<4;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i,j,0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i,j,3);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<=res;i++) {\",\r\n\t\t\t\"\tvar y=i/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\tfor (j=0;j<=res;j++) {\",\r\n\t\t\t\"\t\tvar x=j/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\tvar vertexOffset=vertexElement(i,j)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex(c,cv).indent(2),\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i+0,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i+1,j+1);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Mesh;\r\n","var Lines=require('../lines.js');\r\n\r\nvar Shape=function(elementIndexBits,shaderType){\r\n\tthis.elementIndexBits=elementIndexBits; // 0 if don't want element arrays; 8, 16 or 32 bits per element index, limits lod of shape\r\n\tthis.shaderType=shaderType; // 'vertex' or 'face' for colors, 'light' for normals, anything else for no colors/normals\r\n};\r\nShape.prototype.dim=2;\r\nShape.prototype.twoSided=true; // triangles can be viewed from both sides\r\nShape.prototype.glPrimitive='TRIANGLES';\r\nShape.prototype.usesElements=function(){\r\n\treturn this.elementIndexBits>0;\r\n};\r\nShape.prototype.getNumbersPerPosition=function(){\r\n\treturn this.dim;\r\n};\r\nShape.prototype.getNumbersPerNormal=function(){\r\n\treturn (this.shaderType=='light' && this.dim==3) ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerColor=function(){\r\n\treturn (this.shaderType=='vertex' || this.shaderType=='face') ? 3 : 0;\r\n};\r\nShape.prototype.getNumbersPerVertex=function(){\r\n\treturn this.getNumbersPerPosition()+this.getNumbersPerNormal()+this.getNumbersPerColor();\r\n};\r\nShape.prototype.getElementIndexJsArray=function(){\r\n\treturn \"Uint\"+this.elementIndexBits+\"Array\";\r\n};\r\nShape.prototype.getElementIndexGlType=function(){\r\n\tif (this.elementIndexBits==8) {\r\n\t\treturn \"gl.UNSIGNED_BYTE\"; // not recommended by ms [https://msdn.microsoft.com/en-us/library/dn798776%28v=vs.85%29.aspx]\r\n\t} else if (this.elementIndexBits==16) {\r\n\t\treturn \"gl.UNSIGNED_SHORT\"; // mozilla examples use this\r\n\t} else if (this.elementIndexBits==32) {\r\n\t\treturn \"gl.UNSIGNED_INT\"; // needs extension\r\n\t}\r\n};\r\nShape.prototype.writeDebug=function(debugArrays){\r\n\tvar lines=new Lines;\r\n\tif (debugArrays) {\r\n\t\tlines.a(\"console.log('vertex array byte length:',vertices.byteLength);\");\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\"console.log('element array byte length:',elements.byteLength);\");\r\n\t\t\tlines.a(\"console.log('vertex+element array byte length:',vertices.byteLength+elements.byteLength);\");\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeBufferData=function(){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeArraysAndBufferData=function(debugArrays,c,cv){\r\n\treturn new Lines(\r\n\t\tthis.writeArrays(c,cv),\r\n\t\tthis.writeDebug(debugArrays),\r\n\t\tthis.writeBufferData()\r\n\t);\r\n};\r\n// public fn for init\r\nShape.prototype.writeInit=function(debugArrays){\r\n\tvar c=(this.shaderType=='vertex' || this.shaderType=='face');\r\n\tvar cv=this.shaderType=='vertex';\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeArraysAndBufferData(debugArrays,c,cv),\r\n\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\"\r\n\t);\r\n\tif (c) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var colorLoc=gl.getAttribLocation(program,'color');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tcolorLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(colorLoc);\"\r\n\t\t);\r\n\t} else if (this.dim>2 && this.shaderType=='light') {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tpositionLoc,\"+this.dim+\",gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*0\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\",\r\n\t\t\t\"var normalLoc=gl.getAttribLocation(program,'normal');\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tnormalLoc,3,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+(this.dim+3)+\",\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*\"+this.dim,\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(normalLoc);\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+this.dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n// public fn for render\r\nShape.prototype.writeDraw=function(){\r\n\tif (this.usesElements()) {\r\n\t\treturn new Lines(\"gl.drawElements(gl.\"+this.glPrimitive+\",nElements,\"+this.getElementIndexGlType()+\",0);\");\r\n\t} else {\r\n\t\treturn new Lines(\"gl.drawArrays(gl.\"+this.glPrimitive+\",0,nVertices);\");\r\n\t}\r\n};\r\n\r\nmodule.exports=Shape;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Square=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nSquare.prototype=Object.create(Shape.prototype);\r\nSquare.prototype.constructor=Square;\r\nSquare.prototype.glPrimitive='TRIANGLE_FAN';\r\nSquare.prototype.writeArrays=function(c,cv){\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=4;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t// x    y\"+(c?   \"    r    g    b\":\"\"),\r\n\t\t\"\t-0.5,-0.5,\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,-0.5,\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t+0.5,+0.5,\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-0.5,+0.5,\"+(c?cv?\" 1.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=4;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2,3]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Square;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Terrain=function(elementIndexBits,shaderType,lod){\r\n\tMesh.call(this,elementIndexBits,shaderType,lod);\r\n};\r\nTerrain.prototype=Object.create(Mesh.prototype);\r\nTerrain.prototype.constructor=Terrain;\r\nTerrain.prototype.writeMeshInit=function(){\r\n\tvar noFaces=(this.usesElements()&&this.shaderType!='face');\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var xyRange=1/Math.sqrt(2);\",\r\n\t\t\"var zRange=xyRange;\",\r\n\t\t\"var mask=res-1;\",\r\n\t\t\"function zOffset(i,j) {\",\r\n\t\t\"\treturn vertexElement(i,j\"+(noFaces?\"\":\",0\")+\")*\"+this.getNumbersPerVertex()+\"+2;\",\r\n\t\t\"}\",\r\n\t\t\"function noise(depth) {\",\r\n\t\t\"\tvar r=zRange/Math.pow(2,shapeLod-depth-1);\",\r\n\t\t\"\treturn Math.random()*2*r-r;\",\r\n\t\t\"}\",\r\n\t\t\"vertices[2]=0.0;\",\r\n\t\t\"var i0,i1,i2,i3;\",\r\n\t\t\"var j0,j1,j2,j3;\",\r\n\t\t\"for (var depth=shapeLod-1;depth>=0;depth--) {\",\r\n\t\t\"\tvar d=1<<depth;\",\r\n\t\t\"\t// diamond step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti1=i2-d;\",\r\n\t\t\"\t\t\tj1=j2-d;\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i1,j1)]+vertices[zOffset(i1,j3)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i3,j1)]+vertices[zOffset(i3,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"\t// square step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti0=(i2-2*d)&mask;\",\r\n\t\t\"\t\t\tj0=(j2-2*d)&mask;\",\r\n\t\t\"\t\t\ti1=(i2-d);\",\r\n\t\t\"\t\t\tj1=(j2-d);\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j1)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j0)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i3,j1)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t\tvertices[zOffset(i1,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i0,j2)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i1,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"}\"\r\n\t);\r\n\tif (noFaces) {\r\n\t\tlines.a(\r\n\t\t\t\"for (i0=0;i0<res;i0++) vertices[zOffset(i0,res)]=vertices[zOffset(i0,0)];\",\r\n\t\t\t\"for (j0=0;j0<res;j0++) vertices[zOffset(res,j0)]=vertices[zOffset(0,j0)];\",\r\n\t\t\t\"vertices[zOffset(res,res)]=vertices[zOffset(0,0)];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nTerrain.prototype.writeMeshVertex=function(c,cv){\r\n\tvar noFaces=(this.usesElements()&&this.shaderType!='face');\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"vertices[vertexOffset+0]=x;\",\r\n\t\t\"vertices[vertexOffset+1]=y;\",\r\n\t\t(noFaces\r\n\t\t\t?\"// vertices[vertexOffset+2] already written\"\r\n\t\t\t:\"vertices[vertexOffset+2]=vertices[zOffset((i+di)&mask,(j+dj)&mask)];\"\r\n\t\t)\r\n\t);\r\n\tif (this.getNumbersPerNormal()) {\r\n\t\tlines.a(\r\n\t\t\t\"var d=4*xyRange/res;\",\r\n\t\t\t\"var normal=normalize([\",\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset(i,(j-1)&mask)]-vertices[zOffset(i,(j+1)&mask)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di)&mask,(j+dj-1)&mask)]-vertices[zOffset((i+di)&mask,(j+dj+1)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset((i-1)&mask,j)]-vertices[zOffset((i+1)&mask,j)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di-1)&mask,(j+dj)&mask)]-vertices[zOffset((i+di+1)&mask,(j+dj)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t\"1]);\",\r\n\t\t\t\"vertices[vertexOffset+3]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=normal[2];\"\r\n\t\t);\r\n\t} else if (c) {\r\n\t\tlines.a(\r\n\t\t\t((!this.usesElements() && this.shaderType!='face')\r\n\t\t\t\t?\"var ic=((i+di)&1)*2+((j+dj)&1);\"\r\n\t\t\t\t:\"var ic=(i&1)*2+(j&1);\"\r\n\t\t\t),\r\n\t\t\t\"vertices[vertexOffset+3]=colors[ic][0];\",\r\n\t\t\t\"vertices[vertexOffset+4]=colors[ic][1];\",\r\n\t\t\t\"vertices[vertexOffset+5]=colors[ic][2];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Terrain;\r\n","var Lines=require('../lines.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Triangle=function(elementIndexBits,shaderType){\r\n\tShape.call(this,elementIndexBits,shaderType);\r\n};\r\nTriangle.prototype=Object.create(Shape.prototype);\r\nTriangle.prototype.constructor=Triangle;\r\nTriangle.prototype.writeArrays=function(c,cv){\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=3;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t//                   x                      y\"+(c?\"    r    g    b\":\"\"),\r\n\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+(c?cv?\" 1.0, 0.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+(c?cv?\" 0.0, 1.0, 0.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+(c?cv?\" 0.0, 0.0, 1.0,\":\" 1.0, 0.0, 0.0,\":\"\"),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=3;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Triangle;\r\n","var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\n\r\nvar Uniform=function(varName,optName,components,options){\r\n\tthis.varName=varName;\r\n\tthis.optName=optName;\r\n\tthis.components=components.split('');\r\n\tthis.values=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c];\r\n\t});\r\n\tthis.inputs=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.input'];\r\n\t});\r\n\tthis.minValues=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.min'];\r\n\t});\r\n\tthis.maxValues=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.max'];\r\n\t});\r\n\tthis.modeNoSliders=true; // no <input> elements with values that can be populated by the browser, disregarding default value\r\n\tthis.modeConstant=true;\r\n\tthis.modeFloats=false;\r\n\tthis.modeDim=0;\r\n\tthis.components.forEach(function(c,i){\r\n\t\tvar inputType=options[optName+'.'+c+'.input'];\r\n\t\tif (inputType!='constant') {\r\n\t\t\tthis.modeConstant=false;\r\n\t\t\tif (this.modeDim++!=i) {\r\n\t\t\t\tthis.modeFloats=true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (inputType=='slider') {\r\n\t\t\tthis.modeNoSliders=false;\r\n\t\t}\r\n\t},this);\r\n\tif (this.modeDim==1) {\r\n\t\tthis.modeFloats=true;\r\n\t}\r\n\tthis.modeVector= !this.modeConstant && !this.modeFloats;\r\n};\r\nUniform.prototype.formatSignedValue=function(value){\r\n\treturn (value<=0 ? value<0 ? '' /* - */ : ' ' : '+')+value.toFixed(3);\r\n};\r\nUniform.prototype.varNameC=function(c){\r\n\treturn this.varName+c.toUpperCase();\r\n};\r\n// public:\r\nUniform.prototype.getGlslDeclarationLines=function(){\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t} else if (this.modeFloats) {\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"uniform float \"+this.varNameC(c)+\";\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t} else {\r\n\t\treturn new Lines(\r\n\t\t\t\"uniform vec\"+this.modeDim+\" \"+this.varName+\";\"\r\n\t\t);\r\n\t}\r\n};\r\nUniform.prototype.getGlslValue=function(){\r\n\tvar vecType=\"vec\"+this.values.length;\r\n\tfunction varComponentMap(c,i) {\r\n\t\tif (this.inputs[i]=='constant') {\r\n\t\t\treturn this.formatSignedValue(this.values[i]);\r\n\t\t} else {\r\n\t\t\treturn this.varNameC(c);\r\n\t\t}\r\n\t}\r\n\tvar vs=this.components.map(varComponentMap,this);\r\n\tif (this.modeConstant) {\r\n\t\tvar equalValues=vs.every(function(v){\r\n\t\t\treturn v==vs[0];\r\n\t\t});\r\n\t\tif (equalValues) {\r\n\t\t\treturn vecType+\"(\"+vs[0]+\")\"; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n\t\t}\r\n\t} else if (!this.modeFloats) {\r\n\t\tvs=vs.slice(this.modeDim);\r\n\t\tif (vs.length==0) {\r\n\t\t\treturn this.varName;\r\n\t\t}\r\n\t\tvs.unshift(this.varName);\r\n\t}\r\n\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n};\r\nUniform.prototype.getJsInterfaceLines=function(writeListenerArgs,canvasMousemoveListener){\r\n\tfunction capitalize(s) {\r\n\t\treturn s.charAt(0).toUpperCase()+s.slice(1);\r\n\t}\r\n\tvar updateFnName='update'+capitalize(this.varName);\r\n\tfunction writeManyListenersLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='slider') return;\r\n\t\t\tvar listener=new listeners.SliderListener(this.optName+'.'+c);\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(updateFnName+\"();\");\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction writeOneListenerLines() {\r\n\t\tvar listener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+this.optName+\".\\\"]\");\r\n\t\tlistener.enter()\r\n\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t.post(updateFnName+\"();\");\r\n\t\treturn new Lines(\r\n\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t);\r\n\t}\r\n\tfunction writeUpdateFnLines() {\r\n\t\tvar updateFnLines=new Lines;\r\n\t\tfunction componentValue(c,i) {\r\n\t\t\tif (this.inputs[i]=='slider') {\r\n\t\t\t\treturn \"parseFloat(document.getElementById('\"+this.optName+\".\"+c+\"').value)\";\r\n\t\t\t} else if (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\treturn this.varNameC(c);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.modeFloats) {\r\n\t\t\tthis.components.forEach(function(c,i){\r\n\t\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\t\tupdateFnLines.a(\r\n\t\t\t\t\t\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+componentValue.call(this,c,i)+\");\"\r\n\t\t\t\t);\r\n\t\t\t},this);\r\n\t\t} else {\r\n\t\t\tupdateFnLines.a(\r\n\t\t\t\t\"gl.uniform\"+this.modeDim+\"f(\"+this.varName+\"Loc\"\r\n\t\t\t);\r\n\t\t\tthis.components.forEach(function(c,i){\r\n\t\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\t\tupdateFnLines.t(\r\n\t\t\t\t\t\",\",\r\n\t\t\t\t\t\"\t\"+componentValue.call(this,c,i)\r\n\t\t\t\t);\r\n\t\t\t},this);\r\n\t\t\tupdateFnLines.a(\r\n\t\t\t\t\");\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn updateFnLines;\r\n\t}\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t}\r\n\tvar lines=new Lines;\r\n\tvar manyListenersLines=writeManyListenersLines.call(this);\r\n\tvar oneListenerLines=writeOneListenerLines.call(this);\r\n\tif (this.modeFloats) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var \"+this.varNameC(c)+\"Loc=gl.getUniformLocation(program,'\"+this.varNameC(c)+\"');\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var \"+this.varName+\"Loc=gl.getUniformLocation(program,'\"+this.varName+\"');\"\r\n\t\t);\r\n\t}\r\n\tif (this.modeNoSliders && this.modeDim==1) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='constant') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.formatSignedValue(this.values[i])+\");\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t} else if (this.modeNoSliders && this.modeVector) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.uniform\"+this.modeDim+\"f(\"+this.varName+\"Loc\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='constant') {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\",\"+this.formatSignedValue(this.values[i])\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tlines.t(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var \"+this.varNameC(c)+\"=\"+this.formatSignedValue(this.values[i])+\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tlines.a(\r\n\t\t\twriteUpdateFnLines.call(this).wrap(\r\n\t\t\t\t\"function \"+updateFnName+\"() {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t),\r\n\t\t\tupdateFnName+\"();\",\r\n\t\t\tmanyListenersLines.data.length<=oneListenerLines.data.length ? manyListenersLines : oneListenerLines\r\n\t\t);\r\n\t}\r\n\tif (canvasMousemoveListener) {\r\n\t\tvar entry=canvasMousemoveListener.enter();\r\n\t\tvar vs=[];\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\tif (this.modeNoSliders && (this.modeDim==1 || this.modeVector)) {\r\n\t\t\t\t\tentry.minMaxVarFloat(this.inputs[i],this.varNameC(c),\r\n\t\t\t\t\t\tthis.formatSignedValue(this.minValues[i]),\r\n\t\t\t\t\t\tthis.formatSignedValue(this.maxValues[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tentry.minMaxFloat(this.inputs[i],this.varNameC(c),\r\n\t\t\t\t\t\tthis.formatSignedValue(this.minValues[i]),\r\n\t\t\t\t\t\tthis.formatSignedValue(this.maxValues[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tentry.log(\"console.log('\"+this.optName+\".\"+c+\" input value:',\"+this.varNameC(c)+\");\");\r\n\t\t\t\tif (this.modeNoSliders && this.modeDim==1) {\r\n\t\t\t\t\tentry.post(\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.varNameC(c)+\");\");\r\n\t\t\t\t} else if (this.modeNoSliders && this.modeVector) {\r\n\t\t\t\t\tvs.push(this.varNameC(c));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tentry.post(updateFnName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tif (this.modeNoSliders && this.modeVector) {\r\n\t\t\tentry.post(\"gl.uniform\"+this.modeDim+\"f(\"+this.varName+\"Loc,\"+vs.join(\",\")+\");\");\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Uniform;\r\n"],"sourceRoot":"."}