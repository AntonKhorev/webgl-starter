{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","src/call-vector.js","webgl-starter.js","src/code.js","src/colorgen.js","src/glsl-vector.js","src/i18n.js","src/illumination.js","src/lines.js","src/listeners.js","src/main.js","src/options.js","src/shapes.js","src/shapes/cube.js","src/shapes/gasket.js","src/shapes/hat.js","src/shapes/lodshape.js","src/shapes/mesh.js","src/shapes/shape.js","src/shapes/square.js","src/shapes/terrain.js","src/shapes/triangle.js","src/vector.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Lines","Vector","CallVector","varName","optName","components","options","calledFn","calledFnDefaultArgs","this","prototype","Object","create","constructor","getJsInitLines","nSliders","values","every","v","map","formatValue","join","writeJsInterfaceGlslLines","writeJsInterfaceUpdateFnLines","updateFnLines","componentValue","obj","dotIndex","lastIndexOf","slice","c","forEach","addPostToEntryForComponent","entry","addPostToEntryAfterComponents","post","updateFnName","./lines.js","./vector.js",2,"listeners","shapes","Illumination","i18n","intOptionValue","name","parseInt","floatOptionValue","toFixed","isMousemoveInput","indexOf","makeShape","className","shape","charAt","toUpperCase","shapeLod","undefined","value","changes","min","max","elements","light","materialScope","illumination","getColorAttrs","generateHtmlStyleLines","lines","hasSliderInputs","wrapIfNotEmpty","generateVertexShaderLines","generateMain","d","D","needsTransform","needsUniform","needAspectConstant","projection","needTransformedPosition","use2dTransform","transformOrder","transformName","rotate.x","rotate.y","rotate.z","needAspectUniform","dim","writeNormalTransformLines","getGlslVertexOutputLines","eyeAtInfinity","hasNormals","hasInputsFor","wantsTransformedPosition","getGlslVertexDeclarationLines","indent","generateFragmentShaderLines","getGlslFragmentDeclarationLines","getGlslFragmentOutputLines","twoSided","wrap","generateHtmlControlMessageLines","writeOptionGroup","group","filter","option","inputOptions","transformOptions","generateHtmlInputLines","getMinLabel","getStep","getMaxLabel","lod","generateJsMakeProgramLines","debugShaders","generateJsInitLines","background","backgroundColorVector","generateJsInputHandlerLines","writeListener","listener","write","apply","writeListenerArgs","canvasUpdater","canvasListener","wh","SliderListener","enter","log","isAnimated","debugInputs","canvasMousemoveListener","CanvasMousemoveListener","getJsInterfaceLines","newVarInt","cond","updateName","minMaxVarFloat","state","minMaxFloat","generateJsRenderLines","renderInner","renderInnerTransforms","VarName","hasGamepadInput","availableGamepadInputTypes","axis","match","needStartTime","needPrevTime","needWrap","innerTransformsLines","hasGamepadInputs","writeDraw","innerLines","hasInputs","scriptLines","interleave","writeInit","debugArrays","Array","./call-vector.js","./glsl-vector.js","./illumination.js","./listeners.js","./shapes.js",3,"colorgenCounter","SingleColorgen","weight","noise","baseColors","defaultBaseColors","colorgenNumber","nextIndex","getNextColorString","baseColor","ci","Math","sin","co","Colorgen","colorAttrs","singleColorgens","attr","getHeaderString","singleColorgen",4,"GlslVector","arguments","getGlslDeclarationLines","modeConstant","modeFloats","inputs","varNameC","nVars","getGlslValue","vecType","varComponentMap","bind","vs","equalValues","unshift","getGlslComponentsValue","selectedComponents","results","showResult","result","modeVector","allSameConstant","cmp","j","push","prevResult","pop",5,"id","message.hljs","message.elements","options.general","options.background","options.background.none","options.background.solid","options.materialScope","options.materialScope.global","options.materialScope.vertex","options.materialScope.face","options.materialData","options.materialData.one","options.materialData.sda","options.shape","options.shape.square","options.shape.triangle","options.shape.gasket","options.shape.cube","options.shape.hat","options.shape.terrain","options.elements","options.elements.0","options.elements.8","options.elements.16","options.elements.32","options.light","options.light.off","options.light.phong","options.light.blinn","options.projection","options.projection.ortho","options.projection.perspective","options.input","options.canvas.width","options.canvas.height","options.backgroundColor.r","options.backgroundColor.g","options.backgroundColor.b","options.backgroundColor.a","options.materialColor.r","options.materialColor.g","options.materialColor.b","options.materialColor.a","options.materialSpecularColor.r","options.materialSpecularColor.g","options.materialSpecularColor.b","options.materialDiffuseColor.r","options.materialDiffuseColor.g","options.materialDiffuseColor.b","options.materialAmbientColor.r","options.materialAmbientColor.g","options.materialAmbientColor.b","options.lightDirection.x","options.lightDirection.y","options.lightDirection.z","options.shapeLod","options.*.input","options.*.input.constant","options.*.input.slider","options.*.input.mousemovex","options.*.input.mousemovey","options.*.input.gamepad0","options.*.input.gamepad1","options.*.input.gamepad2","options.*.input.gamepad3","options.*.range","options.transform","options.rotate.x","options.rotate.x.speed","options.rotate.y","options.rotate.y.speed","options.rotate.z","options.rotate.z.speed","options.debug","options.debugShaders","options.debugArrays","options.debugInputs","options.formatting","options.indent","options.indent.tab","options.indent.2","options.indent.4","options.indent.8","controls.type.mousemovex","controls.type.mousemovey","controls.to",6,"materialData","colorVector","specularColorVector","diffuseColorVector","ambientColorVector","ExtendedOptions","colorType","extendedOptions","lightDirectionVector","enabled","hasNormalAttr","normalTransformLines","colorRGB","colorA","colorRGBA","vector","specularDotArgs","shininessCorrection",7,"data","addFlattenedArgs","flattenArgs","isArray","lastLine","level","line","isEmpty","first","begin","end","replace",8,"Listener","entries","makePushArgs","where","proxy","pre","innerPrependedLines","bracketFnArg","wrapCall","haveToUpdateCanvas","haveToLogInput","addInnerLine","vertex","innerLinesGraph","prevs","conds","mark","WHITE","innerLinesPrev","closeEntryInnerLines","innerLinesRoot","writeInnerLines","writeLine","newCond","currentCond","recVertex","GRAY","recPrevs","BLACK","outerLines","br","bracketListener","exec","MultipleSliderListener","query","floatHelper","minMaxFlag","varFlag","inputType","minValue","maxValue","dest","prexy","xLine","yLine",9,"generateId","idCounter","getHtmlDataUri","html","encodeURIComponent","Options","generateCode","$","each","showHideSuboptionInputs","changedOption","affectedOption","isVisibilityAffectedBy","$options","find","toggle","isVisible","updateCode","clearTimeout","codeUpdateTimeoutId","setTimeout","$code","text","fix","window","hljs","highlightBlock","codeUpdateDelay","writeGeneralOption","$option","append","availableValues","availableValue","val","change","writeInputOption","withRange","withGamepad","inputListener","that","checkValidity","parseFloat","minMaxInput","minOrMax","getMin","getMax","getSetupStep","on","$sliderInput","$numberInput","$inputSelect","$rangeSpan","$rangeMinInput","$rangeMaxInput","inputId","availableInputTypes","concat","$optionDiv","availableInputType","hide","show","click","defaultValue","writeDebugOption","prop","makeSortable","$sortableRoot","callback","$dragged","children","prepend","ev","parent","originalEvent","dataTransfer","effectAllowed","setData","setDragImage","addClass","keydown","$handle","$sorted","keyCode","prev","before","focus","next","after","preventDefault","dropEffect","$target","nextAll","is","prevAll","removeClass","writeOptions","$transforms","generalOptions","transforms","transform","debugOptions","formattingOptions","get","hideSuboptionInputs","writeButtons","open","$container","empty","./code.js","./i18n.js","./options.js",10,"Option","visibilityData","testName","InputOption","rangeOfValues","toString","FloatInputOption","IntInputOption","CanvasIntInputOption","DebugOption","OptionsBlueprint","reset","valueOption","speedOption","groupNames","groupName","OptionsInstance","blueprint","getInputOptionsFor","prefix","getInputsFor","getOnlyInputFor","matchedOptions","some","hasAllSliderInputsFor","endsWith","suffix",11,"Square","Triangle","Gasket","Cube","Hat","Terrain","./shapes/cube.js","./shapes/gasket.js","./shapes/hat.js","./shapes/square.js","./shapes/terrain.js","./shapes/triangle.js",12,"Shape","elementIndexBits","hasReflections","hasColorsPerVertex","hasColorsPerFace","writeArrays","colorgen","nCubeVertices","cubeColors","cubeVertexPositions","nCubeFaces","cubeFaceNames","cubeFaceNormals","cubeFaceVertices","quadToTriangleMap","vertexLines","appendVertex","iFace","iVertex","firstInFace","usesElements","k","getElementIndexJsArray","elementLines","../colorgen.js","../lines.js","./shape.js",13,"LodShape","getDistinctVertexCount","lodSymbol","getFaceVertexCount","getTotalVertexCount","writeStoreShape","writePushVertex","writeTriangle","writeInitialTriangleCall","writeColorData","./lodshape.js",14,"Mesh","writeMeshInit","writeMeshVertex","iv","writeMeshVertexColors","./mesh.js",15,"maxLod","getMaxPossibleLod","nVerticesFn","indexLimit","m","eval","writeArraysAndBufferData","getNumbersPerVertex","writeDebug","writeBufferData",16,17,"glPrimitive","getElementIndexGlType","writeVertexAttribArrays","attrs","cmpSize","allSameSize","size","allEnabled","arrayLines","foreachEnableLines","foreachLines",18,"colorDataForFace",19,"noFaces",20,21,"split","minValues","maxValues","nMousemoves","nonnegativeLimits","capitalize","writeManyListenersLines","writeOneListenerLines","manyListenersLines","oneListenerLines"],"mappings":"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","file":"webgl-starter.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Lines=require('./lines.js');\r\nvar Vector=require('./vector.js');\r\n\r\nvar CallVector=function(varName,optName,components,options,calledFn,calledFnDefaultArgs){\r\n\tVector.call(this,varName,optName,components,options);\r\n\tthis.calledFn=calledFn;\r\n\tthis.calledFnDefaultArgs=calledFnDefaultArgs;\r\n};\r\nCallVector.prototype=Object.create(Vector.prototype);\r\nCallVector.prototype.constructor=CallVector;\r\n// public:\r\nCallVector.prototype.getJsInitLines=function(){\r\n\tif (this.nSliders>0 || this.values.every(function(v,i){\r\n\t\treturn v==this.calledFnDefaultArgs[i];\r\n\t},this)) {\r\n\t\treturn new Lines;\r\n\t}\r\n\treturn new Lines(\r\n\t\tthis.calledFn+\"(\"+this.values.map(this.formatValue).join(\",\")+\");\"\r\n\t);\r\n};\r\n// private:\r\nCallVector.prototype.writeJsInterfaceGlslLines=function(){\r\n\treturn new Lines;\r\n};\r\nCallVector.prototype.writeJsInterfaceUpdateFnLines=function(){\r\n\tvar updateFnLines=new Lines;\r\n\tif (this.nSliders<=1) {\r\n\t\tupdateFnLines.a(\r\n\t\t\tthis.calledFn+\"(\"+this.components.map(this.componentValue,this).join(\",\")+\");\"\r\n\t\t);\r\n\t} else if (this.nSliders==this.components.length) {\r\n\t\tvar obj=this.calledFn;\r\n\t\tvar dotIndex=obj.lastIndexOf('.');\r\n\t\tif (dotIndex>=0) {\r\n\t\t\tobj=obj.slice(0,dotIndex);\r\n\t\t}\r\n\t\tupdateFnLines.a(\r\n\t\t\tthis.calledFn+\".apply(\"+obj+\",[\"+this.components.map(function(c){return \"'\"+c+\"'\"}).join(\",\")+\"].map(function(c){\",\r\n\t\t\t\"\treturn parseFloat(document.getElementById('\"+this.optName+\".'+c).value);\",\r\n\t\t\t\"}));\"\r\n\t\t);\r\n\t} else {\r\n\t\tupdateFnLines.a(\r\n\t\t\tthis.calledFn+\"(\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (i>0) {\r\n\t\t\t\tupdateFnLines.t(\",\");\r\n\t\t\t}\r\n\t\t\tupdateFnLines.a(\r\n\t\t\t\t\"\t\"+this.componentValue(c,i)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\tupdateFnLines.a(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\treturn updateFnLines;\r\n};\r\nCallVector.prototype.addPostToEntryForComponent=function(entry,c){\r\n};\r\nCallVector.prototype.addPostToEntryAfterComponents=function(entry){\r\n\tif (this.nSliders==0) {\r\n\t\tentry.post(\r\n\t\t\tthis.calledFn+\"(\"+this.components.map(this.componentValue,this).join(\",\")+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tentry.post(this.updateFnName()+\"();\");\r\n\t}\r\n};\r\n\r\nmodule.exports=CallVector;\r\n",null,"var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\nvar shapes=require('./shapes.js');\r\nvar CallVector=require('./call-vector.js');\r\nvar GlslVector=require('./glsl-vector.js');\r\nvar Illumination=require('./illumination.js');\r\n\r\nmodule.exports=function(options,i18n){\r\n\tfunction intOptionValue(name) {\r\n\t\treturn parseInt(options[name]);\r\n\t}\r\n\tfunction floatOptionValue(name) {\r\n\t\treturn options[name].toFixed(3);\r\n\t}\r\n\tfunction isMousemoveInput(name) {\r\n\t\treturn ['mousemovex','mousemovey'].indexOf(options[name+'.input'])>=0;\r\n\t}\r\n\r\n\tvar illumination=new Illumination(options);\r\n\tfunction makeShape() {\r\n\t\tvar className=options.shape.charAt(0).toUpperCase()+options.shape.slice(1);\r\n\t\tvar shapeLod=undefined;\r\n\t\tif (options.shapeLod!==undefined) {\r\n\t\t\tshapeLod={\r\n\t\t\t\tvalue: intOptionValue('shapeLod'),\r\n\t\t\t\tchanges: options['shapeLod.input']!='constant',\r\n\t\t\t\tmin: intOptionValue('shapeLod.min'),\r\n\t\t\t\tmax: intOptionValue('shapeLod.max')\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn new shapes[className](\r\n\t\t\tparseInt(options.elements),\r\n\t\t\toptions.light!='off',\r\n\t\t\toptions.materialScope=='vertex',\r\n\t\t\toptions.materialScope=='face',\r\n\t\t\tillumination.getColorAttrs(),\r\n\t\t\tshapeLod\r\n\t\t);\r\n\t}\r\n\tvar shape=makeShape();\r\n\tif (options.background=='solid') {\r\n\t\tvar backgroundColorVector=new CallVector('backgroundColor','backgroundColor','rgba',options,'gl.clearColor',[0,0,0,0]);\r\n\t}\r\n\r\n\tfunction generateHtmlStyleLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tif (options.hasSliderInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"label {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 15em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".min {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: right;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\".max {\",\r\n\t\t\t\t\"\tdisplay: inline-block;\",\r\n\t\t\t\t\"\twidth: 3em;\",\r\n\t\t\t\t\"\ttext-align: left;\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<style>\",\r\n\t\t\t\"</style>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateVertexShaderLines() {\r\n\t\tvar use2dTransform=(\r\n\t\t\tshape.dim==2 &&\r\n\t\t\t!options.needsTransform('rotate.x') &&\r\n\t\t\t!options.needsTransform('rotate.y') &&\r\n\t\t\t options.needsTransform('rotate.z')\r\n\t\t);\r\n\t\tvar needAspectUniform=options.hasInputsFor('canvas');\r\n\t\tvar needAspectConstant=!needAspectUniform && options['canvas.width']!=options['canvas.height'];\r\n\t\tvar eyeAtInfinity=options.projection=='ortho';\r\n\t\tvar needTransformedPosition=illumination.wantsTransformedPosition(eyeAtInfinity);\r\n\t\tfunction generateMain() {\r\n\t\t\tvar lines=new Lines();\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (options.needsTransform(optName)) {\r\n\t\t\t\t\tif (options.needsUniform('rotate.'+d)) {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+varName+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+varName+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"float c\"+d+\"=cos(radians(\"+floatOptionValue(optName)+\"));\",\r\n\t\t\t\t\t\t\t\"float s\"+d+\"=sin(radians(\"+floatOptionValue(optName)+\"));\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needAspectConstant) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float aspect=\"+intOptionValue('canvas.width')+\".0/\"+intOptionValue('canvas.height')+\".0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"float fovy=45.0;\",\r\n\t\t\t\t\t\"float near=1.0/tan(radians(fovy)/2.0);\",\r\n\t\t\t\t\t\"float far=near+2.0;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"vec4 transformedPosition=\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (use2dTransform) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"vec4(position*mat2(\",\r\n\t\t\t\t\t\"\tcz, -sz,\",\r\n\t\t\t\t\t\"\tsz,  cz\",\r\n\t\t\t\t\t\"),0,1)\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"position\"\r\n\t\t\t\t);\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\tif (options.projection=='perspective') {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4( // move center of coords inside view\",\r\n\t\t\t\t\t\t\"\t1.0, 0.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 1.0, -(near+far)/2.0,\",\r\n\t\t\t\t\t\t\"\t0.0, 0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (needTransformedPosition) {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\";\"\r\n\t\t\t\t);\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl_Position=transformedPosition\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.projection=='ortho') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0/aspect,1.0,-1.0,1.0)\" // correct aspect ratio and make coords right-handed\r\n\t\t\t\t\t);\r\n\t\t\t\t} else if (shape.dim>2) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*vec4(1.0,1.0,-1.0,1.0)\" // make coords right-handed for 3d shapes\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t} else if (options.projection=='perspective') {\r\n\t\t\t\tif (needAspectUniform || needAspectConstant) {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear/aspect, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,         0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\"*mat4(\",\r\n\t\t\t\t\t\t\"\tnear, 0.0,  0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  near, 0.0,                   0.0,\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  (near+far)/(near-far), 2.0*near*far/(near-far),\",\r\n\t\t\t\t\t\t\"\t0.0,  0.0,  -1.0,                  0.0\",\r\n\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlines.t(\r\n\t\t\t\t\";\"\r\n\t\t\t);\r\n\t\t\tvar writeNormalTransformLines=function(){\r\n\t\t\t\tvar lines=new Lines(\"\");\r\n\t\t\t\toptions.transformOrder.forEach(function(transformName){\r\n\t\t\t\t\tif (!options.needsTransform(transformName)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t({\r\n\t\t\t\t\t\t'rotate.x': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t1.0, 0.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  cx, -sx,\",\r\n\t\t\t\t\t\t\t\"\t0.0,  sx,  cx\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.y': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cy, 0.0,  sy,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 1.0, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t-sy, 0.0,  cy\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\t'rotate.z': [\r\n\t\t\t\t\t\t\t\"*mat3(\",\r\n\t\t\t\t\t\t\t\"\t cz, -sz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t sz,  cz, 0.0,\",\r\n\t\t\t\t\t\t\t\"\t0.0, 0.0, 1.0\",\r\n\t\t\t\t\t\t\t\")\"\r\n\t\t\t\t\t\t]\r\n\t\t\t\t\t}[transformName]);\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t};\r\n\t\t\tlines.a(\r\n\t\t\t\tillumination.getGlslVertexOutputLines(eyeAtInfinity,shape.hasNormals,writeNormalTransformLines())\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=new Lines();\r\n\t\tif (needAspectUniform) {\r\n\t\t\tlines.a(\"uniform float aspect;\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tif (options.needsUniform(optName)) {\r\n\t\t\t\tlines.a(\"uniform float \"+varName+\";\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (use2dTransform) {\r\n\t\t\tlines.a(\"attribute vec2 position;\");\r\n\t\t} else {\r\n\t\t\tlines.a(\"attribute vec4 position;\");\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\tillumination.getGlslVertexDeclarationLines(eyeAtInfinity,shape.dim>2),\r\n\t\t\t\"void main() {\",\r\n\t\t\tgenerateMain().indent(),\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateFragmentShaderLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tvar eyeAtInfinity=options.projection=='ortho';\r\n\t\tlines.a(\r\n\t\t\t\"precision mediump float;\"\r\n\t\t);\r\n\t\tlines.a(\r\n\t\t\tillumination.getGlslFragmentDeclarationLines(eyeAtInfinity),\r\n\t\t\tillumination.getGlslFragmentOutputLines(eyeAtInfinity,shape.twoSided).wrap(\r\n\t\t\t\t\"void main() {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t)\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateHtmlControlMessageLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn isMousemoveInput(option.name);\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<li>\"+i18n('controls.type.'+options[option.name+'.input'])+\" \"+i18n('controls.to')+\" <strong>\"+i18n('options.'+option.name)+\"</strong></li>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines.wrapIfNotEmpty(\r\n\t\t\t\"<ul>\",\r\n\t\t\t\"</ul>\"\r\n\t\t);\r\n\t}\r\n\tfunction generateHtmlInputLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeOptionGroup(group) {\r\n\t\t\tgroup.filter(function(option){\r\n\t\t\t\treturn options[option.name+'.input']=='slider';\r\n\t\t\t}).forEach(function(option){\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"<div>\",\r\n\t\t\t\t\t\"\t<label for='\"+option.name+\"'>\"+i18n('options.'+option.name)+\":</label>\"\r\n\t\t\t\t);\r\n\t\t\t\tif (option.name!='shapeLod') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel(options[option.name+'.min'])+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tif (option.getStep()==1) {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+intOptionValue(option.name+'.min')+\"' max='\"+intOptionValue(option.name+'.max')+\"' value='\"+intOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+floatOptionValue(option.name+'.min')+\"' max='\"+floatOptionValue(option.name+'.max')+\"' step='\"+option.getStep()+\"' value='\"+floatOptionValue(option.name)+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel(options[option.name+'.max'])+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"\t<span class='min'>\"+option.getMinLabel(shape.lod.min)+\"</span> \"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\t\"<input type='range' id='\"+option.name+\"' min='\"+shape.lod.min+\"' max='\"+shape.lod.max+\"' value='\"+shape.lod.value+\"' />\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tlines.t(\r\n\t\t\t\t\t\t\" <span class='max'>\"+option.getMaxLabel(shape.lod.max)+\"</span>\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\"</div>\"\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\twriteOptionGroup(options.inputOptions);\r\n\t\twriteOptionGroup(options.transformOptions);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsMakeProgramLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var vertexShader=gl.createShader(gl.VERTEX_SHADER);\",\r\n\t\t\t\"gl.shaderSource(vertexShader,vertexShaderSrc);\",\r\n\t\t\t\"gl.compileShader(vertexShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(vertexShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(vertexShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var fragmentShader=gl.createShader(gl.FRAGMENT_SHADER);\",\r\n\t\t\t\"gl.shaderSource(fragmentShader,fragmentShaderSrc);\",\r\n\t\t\t\"gl.compileShader(fragmentShader);\"\r\n\t\t);\r\n\t\tif (options.debugShaders) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"if (!gl.getShaderParameter(fragmentShader,gl.COMPILE_STATUS)) console.log(gl.getShaderInfoLog(fragmentShader));\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=gl.createProgram();\",\r\n\t\t\t\"gl.attachShader(program,vertexShader);\",\r\n\t\t\t\"gl.attachShader(program,fragmentShader);\",\r\n\t\t\t\"gl.linkProgram(program);\",\r\n\t\t\t\"return program;\"\r\n\t\t);\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function makeProgram(vertexShaderSrc,fragmentShaderSrc) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tfunction generateJsInitLines() {\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"var canvas=document.getElementById('myCanvas');\",\r\n\t\t\t\"var gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');\"\r\n\t\t);\r\n\t\tif (options['elements']=='32') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.getExtension('OES_element_index_uint');\" // TODO check if null is returned and don't allow more elements\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (options.background=='solid') {\r\n\t\t\tlines.a(\r\n\t\t\t\tbackgroundColorVector.getJsInitLines()\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (shape.dim>2) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl.enable(gl.DEPTH_TEST);\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"var program=makeProgram(\",\r\n\t\t\t\"\tdocument.getElementById('myVertexShader').text,\",\r\n\t\t\t\"\tdocument.getElementById('myFragmentShader').text\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.useProgram(program);\"\r\n\t\t);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsInputHandlerLines() {\r\n\t\tvar writeListenerArgs=[!options.isAnimated(),options.debugInputs];\r\n\t\tvar lines=new Lines;\r\n\t\tfunction writeListener(listener) {\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t}\r\n\t\tvar canvasMousemoveListener=new listeners.CanvasMousemoveListener();\r\n\t\tfunction canvasUpdater() {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function updateAspect() {\",\r\n\t\t\t\t\"\tgl.viewport(0,0,canvas.width,canvas.height);\",\r\n\t\t\t\t\"\tgl.uniform1f(aspectLoc,canvas.width/canvas.height);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"updateAspect();\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tfunction canvasListener(wh) {\r\n\t\t\tvar optName='canvas.'+wh;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t\t.post(\"canvas.\"+wh+\"=parseInt(this.value);\")\r\n\t\t\t\t\t.post(\"updateAspect();\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.hasInputsFor('canvas')) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var aspectLoc=gl.getUniformLocation(program,'aspect');\"\r\n\t\t\t);\r\n\t\t\tcanvasUpdater();\r\n\t\t\tcanvasListener('width');\r\n\t\t\tcanvasListener('height');\r\n\t\t}\r\n\t\tif (options.background=='solid') {\r\n\t\t\tlines.a(\r\n\t\t\t\tbackgroundColorVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener)\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\tillumination.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener)\r\n\t\t);\r\n\t\tif (options['shapeLod.input']=='slider') {\r\n\t\t\tvar listener=new listeners.SliderListener('shapeLod');\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseInt(this.value));\")\r\n\t\t\t\t.post(\"storeShape(parseInt(this.value));\");\r\n\t\t\twriteListener(listener);\r\n\t\t} else if (isMousemoveInput('shapeLod')) {\r\n\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t.newVarInt(options['shapeLod.input'],'shapeLod')\r\n\t\t\t\t.cond(\"newShapeLod!=shapeLod\")\r\n\t\t\t\t.log(\"console.log('shapeLod input value:',newShapeLod);\")\r\n\t\t\t\t.post(\"storeShape(newShapeLod);\");\r\n\t\t}\r\n\t\t['x','y','z'].forEach(function(d){\r\n\t\t\tvar D=d.toUpperCase();\r\n\t\t\tvar optName='rotate.'+d;\r\n\t\t\tvar varName='rotate'+D;\r\n\t\t\tvar updateName='updateRotate'+D;\r\n\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName);\r\n\t\t\t\tvar entry=listener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"function \"+updateName+\"() {\",\r\n\t\t\t\t\t\t\"\tgl.uniform1f(\"+varName+\"Loc,parseFloat(document.getElementById('\"+optName+\"').value));\",\r\n\t\t\t\t\t\t\"};\",\r\n\t\t\t\t\t\tupdateName+\"();\" // have to initialize the uniform even if default value is zero because the browser may keep prev value of slider on page reload\r\n\t\t\t\t\t);\r\n\t\t\t\t\tentry.post(updateName+\"();\");\r\n\t\t\t\t}\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName)) {\r\n\t\t\t\tif (options[optName+'.speed']==0 && options[optName+'.speed.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\",\r\n\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+floatOptionValue(optName)+\");\"\r\n\t\t\t\t\t);\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.minMaxVarFloat(options[optName+'.input'],varName,'-180','+180')\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\")\r\n\t\t\t\t\t\t.post(\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t\t.state(\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\")\r\n\t\t\t\t\t\t.minMaxFloat(options[optName+'.input'],varName,'-180','+180')\r\n\t\t\t\t\t\t.log(\"console.log('\"+optName+\" input value:',\"+varName+\");\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\tvar listener=new listeners.SliderListener(optName+'.speed');\r\n\t\t\t\tlistener.enter()\r\n\t\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\");\r\n\t\t\t\twriteListener(listener);\r\n\t\t\t} else if (isMousemoveInput(optName+'.speed')) {\r\n\t\t\t\tcanvasMousemoveListener.enter()\r\n\t\t\t\t\t.state(\"var \"+varName+\"Speed=\"+floatOptionValue(optName+'.speed')+\";\")\r\n\t\t\t\t\t.minMaxFloat(options[optName+'.speed.input'],varName+'Speed','-360','+360')\r\n\t\t\t\t\t.log(\"console.log('\"+optName+\".speed input value:',\"+varName+\"Speed);\");\r\n\t\t\t}\r\n\t\t});\r\n\t\twriteListener(canvasMousemoveListener);\r\n\t\treturn lines;\r\n\t}\r\n\tfunction generateJsRenderLines() {\r\n\t\tvar needStartTime=false; // set by renderInner()\r\n\t\tvar needPrevTime=false; // set by renderInner()\r\n\t\tfunction renderInner() {\r\n\t\t\tvar needWrap=false; // set by renderInnerTransforms()\r\n\t\t\tfunction renderInnerTransforms() {\r\n\t\t\t\tvar lines=new Lines;\r\n\t\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\t\tvar VarName=varName.charAt(0).toUpperCase()+varName.slice(1);\r\n\t\t\t\t\tvar hasGamepadInput=options.inputOptions[0].availableGamepadInputTypes.indexOf(options[optName+'.input'])>=0;\r\n\t\t\t\t\tif (hasGamepadInput || options[optName+'.speed']!=0 || options[optName+'.speed.input']!='constant') {\r\n\t\t\t\t\t\tif (hasGamepadInput) {\r\n\t\t\t\t\t\t\t// no time needed branch\r\n\t\t\t\t\t\t\tvar axis=0;\r\n\t\t\t\t\t\t\tvar match=options[optName+'.input'].match(/\\d/);\r\n\t\t\t\t\t\t\tif (match) axis=match[0];\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\"var min\"+VarName+\"=\"+floatOptionValue(optName+'.min')+\";\",\r\n\t\t\t\t\t\t\t\t\"var max\"+VarName+\"=\"+floatOptionValue(optName+'.max')+\";\",\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\",\r\n\t\t\t\t\t\t\t\t\"if (gamepad) {\",\r\n\t\t\t\t\t\t\t\t\"\t\"+varName+\"=min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\")*(gamepad.axes[\"+axis+\"]+1)/2;\",\r\n\t\t\t\t\t\t\t\t\"}\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else if (options[optName+'.speed.input']=='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\t\t\t// no rotation state branch\r\n\t\t\t\t\t\t\tneedStartTime=true;\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\"var \"+varName+\"=\"+(options[optName]\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName)+\"+\"\r\n\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t)+floatOptionValue(optName+'.speed')+\"*(time-startTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// rotation state branch\r\n\t\t\t\t\t\t\tneedPrevTime=true;\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Input=document.getElementById('\"+optName+\"');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"=parseFloat(\"+varName+\"Input.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (options[optName+'.speed.input']=='slider') {\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"SpeedInput=document.getElementById('\"+optName+\".speed');\",\r\n\t\t\t\t\t\t\t\t\t\"var \"+varName+\"Speed=parseFloat(\"+varName+\"SpeedInput.value);\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\tvarName+\"+=\"+(options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t\t\t\t\t? floatOptionValue(optName+'.speed')\r\n\t\t\t\t\t\t\t\t\t: varName+\"Speed\"\r\n\t\t\t\t\t\t\t\t)+\"*(time-prevTime)/1000;\"\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\tif (options[optName+'.input']=='slider') {\r\n\t\t\t\t\t\t\t\tneedWrap=true;\r\n\t\t\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\t\tvarName+\"=wrap(\"+varName+\",180);\",\r\n\t\t\t\t\t\t\t\t\tvarName+\"Input.value=\"+varName+\";\"\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\t\"gl.uniform1f(\"+varName+\"Loc,\"+varName+\");\"\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn lines;\r\n\t\t\t}\r\n\t\t\tvar innerTransformsLines=renderInnerTransforms();\r\n\t\t\tvar lines=new Lines;\r\n\t\t\tif (needWrap) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"function wrap(v,maxAbsV) {\",\r\n\t\t\t\t\t\"\tv%=maxAbsV*2;\",\r\n\t\t\t\t\t\"\tif (Math.abs(v)<=maxAbsV) return v;\",\r\n\t\t\t\t\t\"\treturn v-(v>0?1:-1)*maxAbsV*2;\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.background=='solid') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.clear(gl.COLOR_BUFFER_BIT);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (options.hasGamepadInputs()) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var gamepad;\",\r\n\t\t\t\t\t\"var gamepads=(navigator.getGamepads ? navigator.getGamepads() : []);\",\r\n\t\t\t\t\t\"for (var i=0;i<gamepads.length;i++) {\",\r\n\t\t\t\t\t\"\tif (gamepads[i]) {\",\r\n\t\t\t\t\t\"\t\tgamepad=gamepads[i];\",\r\n\t\t\t\t\t\"\t\tbreak;\",\r\n\t\t\t\t\t\"\t}\",\r\n\t\t\t\t\t\"}\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\tinnerTransformsLines,\r\n\t\t\t\tshape.writeDraw()\r\n\t\t\t);\r\n\t\t\treturn lines;\r\n\t\t}\r\n\t\tvar lines=new Lines;\r\n\t\tvar innerLines=renderInner();\r\n\t\tif (options.isAnimated()) {\r\n\t\t\t['x','y','z'].forEach(function(d){\r\n\t\t\t\tvar D=d.toUpperCase();\r\n\t\t\t\tvar optName='rotate.'+d;\r\n\t\t\t\tvar varName='rotate'+D;\r\n\t\t\t\tif (\r\n\t\t\t\t\toptions.needsUniform(optName) && !(\r\n\t\t\t\t\t\t// no Loc was generated in generateInputHandlerLines()\r\n\t\t\t\t\t\t(options[optName+'.input']=='slider' || isMousemoveInput(optName)) &&\r\n\t\t\t\t\t\toptions[optName+'.speed']==0 && options[optName+'.speed.input']=='constant'\r\n\t\t\t\t\t)\r\n\t\t\t\t) {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"Loc=gl.getUniformLocation(program,'\"+varName+\"');\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tif (options[optName+'.speed.input']!='constant' && options[optName+'.input']=='constant') {\r\n\t\t\t\t\tlines.a(\r\n\t\t\t\t\t\t\"var \"+varName+\"=\"+floatOptionValue(optName)+\";\"\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (needStartTime && needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\",\r\n\t\t\t\t\t\"var prevTime=startTime;\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needStartTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var startTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t} else if (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var prevTime=performance.now();\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\t// wrap inner render lines in function if needed\r\n\t\tif (options.isAnimated()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"function renderFrame(time) {\",\r\n\t\t\t\tinnerLines.indent()\r\n\t\t\t);\r\n\t\t\tif (needPrevTime) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tprevTime=time;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\trequestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"requestAnimationFrame(renderFrame);\"\r\n\t\t\t);\r\n\t\t} else if (options.hasInputs()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var frameId=null;\",\r\n\t\t\t\t\"function renderFrame() {\",\r\n\t\t\t\tinnerLines.indent(),\r\n\t\t\t\t\"\tframeId=null;\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"function scheduleFrame() {\",\r\n\t\t\t\t\"\tif (frameId===null) {\",\r\n\t\t\t\t\"\t\tframeId=requestAnimationFrame(renderFrame);\",\r\n\t\t\t\t\"\t}\",\r\n\t\t\t\t\"}\",\r\n\t\t\t\t\"scheduleFrame();\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(innerLines);\r\n\t\t}\r\n\t\treturn lines;\r\n\t}\r\n\r\n\tvar scriptLines=new Lines;\r\n\tscriptLines.interleave(\r\n\t\tgenerateJsMakeProgramLines(),\r\n\t\tgenerateJsInitLines(),\r\n\t\tshape.writeInit(options.debugArrays),\r\n\t\tgenerateJsInputHandlerLines(),\r\n\t\tgenerateJsRenderLines()\r\n\t).wrap(\r\n\t\t\"<script>\",\r\n\t\t\"</script>\"\r\n\t);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"<!DOCTYPE html>\",\r\n\t\t\"<html lang='en'>\",\r\n\t\t\"<head>\",\r\n\t\t\"<meta charset='utf-8' />\",\r\n\t\t\"<title>Generated code</title>\",\r\n\t\tgenerateHtmlStyleLines(),\r\n\t\t\"<script id='myVertexShader' type='x-shader/x-vertex'>\",\r\n\t\tgenerateVertexShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"<script id='myFragmentShader' type='x-shader/x-fragment'>\",\r\n\t\tgenerateFragmentShaderLines().indent(),\r\n\t\t\"</script>\",\r\n\t\t\"</head>\",\r\n\t\t\"<body>\",\r\n\t\t\"<div>\",\r\n\t\t\"\t<canvas id='myCanvas' width='\"+intOptionValue('canvas.width')+\"' height='\"+intOptionValue('canvas.height')+\"'></canvas>\",\r\n\t\t\"</div>\",\r\n\t\tgenerateHtmlControlMessageLines(),\r\n\t\tgenerateHtmlInputLines(),\r\n\t\tscriptLines,\r\n\t\t\"</body>\",\r\n\t\t\"</html>\"\r\n\t);\r\n\treturn lines.join(\r\n\t\toptions.indent=='tab' ? '\\t' : Array(parseInt(options.indent)+1).join(' ')\r\n\t);\r\n};\r\n","var colorgenCounter=0;\r\n\r\nvar SingleColorgen=function(weight,noise,baseColors){\r\n\tthis.weight=weight;\r\n\tthis.noise=noise;\r\n\tif (noise===undefined) this.noise=0.4;\r\n\tthis.baseColors=baseColors||this.defaultBaseColors;\r\n\tthis.colorgenNumber=colorgenCounter++;\r\n\tthis.nextIndex=0;\r\n};\r\nSingleColorgen.prototype.defaultBaseColors=[\r\n\t[1.0, 0.0, 0.0], // TODO 'cube' color order, when cube is not ugly\r\n\t[0.0, 1.0, 0.0],\r\n\t[0.0, 0.0, 1.0],\r\n\t[1.0, 1.0, 0.0],\r\n\t[1.0, 0.0, 1.0],\r\n\t[0.0, 1.0, 1.0],\r\n];\r\nSingleColorgen.prototype.getNextColorString=function(){\r\n\tvar baseColor=this.baseColors[this.nextIndex];\r\n\tthis.nextIndex=(this.nextIndex+1)%this.baseColors.length;\r\n\treturn baseColor.map(function(ci,i){\r\n\t\tvar s=Math.sin(this.colorgenNumber*9000+this.nextIndex*400+i*100);\r\n\t\tvar co=(ci*(1-this.noise)+s*s*this.noise)*this.weight;\r\n\t\treturn \" \"+co.toFixed(1)+\",\";\r\n\t},this).join(\"\");\r\n};\r\n\r\nvar Colorgen=function(colorAttrs,noise,baseColors){\r\n\tthis.colorAttrs=colorAttrs;\r\n\tthis.singleColorgens=this.colorAttrs.map(function(attr){\r\n\t\treturn new SingleColorgen(attr.weight,noise,baseColors);\r\n\t});\r\n};\r\nColorgen.prototype.getHeaderString=function(){\r\n\treturn this.colorAttrs.map(function(){\r\n\t\treturn \"    r    g    b\";\r\n\t}).join(\"\");\r\n};\r\nColorgen.prototype.getNextColorString=function(){\r\n\treturn this.singleColorgens.map(function(singleColorgen){\r\n\t\treturn singleColorgen.getNextColorString();\r\n\t}).join(\"\");\r\n};\r\n\r\nmodule.exports=Colorgen;\r\n","var Lines=require('./lines.js');\r\nvar Vector=require('./vector.js');\r\n\r\nvar GlslVector=function(varName,optName,components,options){\r\n\tVector.apply(this,arguments);\r\n};\r\nGlslVector.prototype=Object.create(Vector.prototype);\r\nGlslVector.prototype.constructor=GlslVector;\r\n// public:\r\nGlslVector.prototype.getGlslDeclarationLines=function(){\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t} else if (this.modeFloats) {\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"uniform float \"+this.varNameC(c)+\";\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t} else {\r\n\t\treturn new Lines(\r\n\t\t\t\"uniform vec\"+this.nVars+\" \"+this.varName+\";\"\r\n\t\t);\r\n\t}\r\n};\r\nGlslVector.prototype.getGlslValue=function(){\r\n\tvar vecType=\"vec\"+this.values.length;\r\n\tvarComponentMap=function(c,i) {\r\n\t\tif (this.inputs[i]=='constant') {\r\n\t\t\treturn this.formatValue(this.values[i]);\r\n\t\t} else {\r\n\t\t\treturn this.varNameC(c);\r\n\t\t}\r\n\t}.bind(this);\r\n\tvar vs=this.components.map(varComponentMap);\r\n\tif (this.modeConstant) {\r\n\t\tvar equalValues=vs.every(function(v){\r\n\t\t\treturn v==vs[0];\r\n\t\t});\r\n\t\tif (equalValues) {\r\n\t\t\treturn vecType+\"(\"+vs[0]+\")\"; // see OpenGL ES SL section 5.4.2\r\n\t\t} else {\r\n\t\t\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n\t\t}\r\n\t} else if (!this.modeFloats) {\r\n\t\tvs=vs.slice(this.nVars);\r\n\t\tif (vs.length==0) {\r\n\t\t\treturn this.varName;\r\n\t\t}\r\n\t\tvs.unshift(this.varName);\r\n\t}\r\n\treturn vecType+\"(\"+vs.join(\",\")+\")\";\r\n};\r\nGlslVector.prototype.getGlslComponentsValue=function(selectedComponents){\r\n\tvar results=[]; // [[isConstant,componentLetterOrNumber]]\r\n\tvar showResult=function(result){\r\n\t\tif (result[0]) {\r\n\t\t\treturn this.formatValue(this.values[result[1]]);\r\n\t\t} else {\r\n\t\t\tif (this.modeVector) {\r\n\t\t\t\treturn this.varName+\".\"+result[1];\r\n\t\t\t} else {\r\n\t\t\t\treturn this.varNameC(result[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t}.bind(this);\r\n\tvar allSameConstant=function(){\r\n\t\tif (!results[0][0]) return false;\r\n\t\tvar cmp=this.formatValue(this.values[results[0][1]]);\r\n\t\treturn results.every(function(result){\r\n\t\t\treturn result[0] && this.formatValue(this.values[result[1]])==cmp;\r\n\t\t},this);\r\n\t}.bind(this);\r\n\tfor (var j=0;j<selectedComponents.length;j++) {\r\n\t\tvar c=selectedComponents.charAt(j);\r\n\t\tvar i=this.components.indexOf(c);\r\n\t\tif (this.inputs[i]=='constant') {\r\n\t\t\tresults.push([true,i]);\r\n\t\t} else {\r\n\t\t\tif (this.modeVector && results.length>0) {\r\n\t\t\t\tprevResult=results.pop();\r\n\t\t\t\tif (prevResult[0]) {\r\n\t\t\t\t\tresults.push(prevResult,[false,c]); // prev is constant, don't merge\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresults.push([prevResult[0],prevResult[1]+c]); // merge\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresults.push([false,c]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (results.length==1) {\r\n\t\tif (this.modeVector && selectedComponents==this.components.slice(0,this.nVars).join('')) {\r\n\t\t\treturn this.varName;\r\n\t\t} else {\r\n\t\t\treturn showResult(results[0]);\r\n\t\t}\r\n\t} else {\r\n\t\tif (allSameConstant()) {\r\n\t\t\treturn \"vec\"+selectedComponents.length+\"(\"+showResult(results[0])+\")\";\r\n\t\t} else {\r\n\t\t\treturn \"vec\"+selectedComponents.length+\"(\"+results.map(showResult).join(\",\")+\")\";\r\n\t\t}\r\n\t}\r\n};\r\n// private:\r\nGlslVector.prototype.writeJsInterfaceGlslLines=function(){\r\n\tlines=new Lines;\r\n\tif (this.modeFloats) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var \"+this.varNameC(c)+\"Loc=gl.getUniformLocation(program,'\"+this.varNameC(c)+\"');\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var \"+this.varName+\"Loc=gl.getUniformLocation(program,'\"+this.varName+\"');\"\r\n\t\t);\r\n\t}\r\n\tif (this.nSliders==0 && this.modeVector) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.uniform\"+this.nVars+\"f(\"+this.varName+\"Loc\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='constant') {\r\n\t\t\t\tlines.t(\r\n\t\t\t\t\t\",\"+this.formatValue(this.values[i])\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tlines.t(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t} else if (this.nSliders==0) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='constant') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.formatValue(this.values[i])+\");\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t}\r\n\treturn lines;\r\n};\r\nGlslVector.prototype.writeJsInterfaceUpdateFnLines=function() {\r\n\tvar updateFnLines=new Lines;\r\n\tif (this.modeFloats) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tupdateFnLines.a(\r\n\t\t\t\t\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.componentValue(c,i)+\");\"\r\n\t\t\t);\r\n\t\t},this);\r\n\t} else {\r\n\t\tupdateFnLines.a(\r\n\t\t\t\"gl.uniform\"+this.nVars+\"f(\"+this.varName+\"Loc\"\r\n\t\t);\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='constant') return;\r\n\t\t\tupdateFnLines.t(\r\n\t\t\t\t\",\",\r\n\t\t\t\t\"\t\"+this.componentValue(c,i)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\tupdateFnLines.a(\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}\r\n\treturn updateFnLines;\r\n};\r\nGlslVector.prototype.addPostToEntryForComponent=function(entry,c){\r\n\tif (this.nSliders==0 && this.modeVector) {\r\n\t\t// written at the end as a vector\r\n\t} else if (this.nSliders==0) {\r\n\t\tentry.post(\"gl.uniform1f(\"+this.varNameC(c)+\"Loc,\"+this.varNameC(c)+\");\");\r\n\t} else {\r\n\t\tentry.post(this.updateFnName()+\"();\");\r\n\t}\r\n};\r\nGlslVector.prototype.addPostToEntryAfterComponents=function(entry){\r\n\tif (this.nSliders==0 && this.modeVector) {\r\n\t\tvar vs=[];\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (i<this.nVars) {\r\n\t\t\t\tvs.push(this.varNameC(c));\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tentry.post(\"gl.uniform\"+this.nVars+\"f(\"+this.varName+\"Loc,\"+vs.join(\",\")+\");\");\r\n\t}\r\n};\r\n\r\nmodule.exports=GlslVector;\r\n","module.exports=function(id){ // fake temporary i18n\r\n\treturn {\r\n\t\t'message.hljs': \"<a href='https://highlightjs.org/'>highlight.js</a> (hosted on cdnjs.cloudflare.com) is not loaded. Syntax highlighting is disabled.\",\r\n\t\t'message.elements': \"choosing 8- or 16-bit index may limit available shape detail levels\",\r\n\r\n\t\t'options.general': 'General options',\r\n\t\t'options.background': 'Background',\r\n\t\t'options.background.none': 'none (transparent)',\r\n\t\t'options.background.solid': 'solid color',\r\n\t\t'options.materialScope': 'Set material color for objects',\r\n\t\t'options.materialScope.global': 'entire scene',\r\n\t\t'options.materialScope.vertex': 'shape vertices',\r\n\t\t'options.materialScope.face': 'shape faces',\r\n\t\t'options.materialData': 'For each object have',\r\n\t\t'options.materialData.one': 'one color',\r\n\t\t'options.materialData.sda': 'specular/diffuse/ambient colors',\r\n\t\t'options.shape': 'Shape to draw',\r\n\t\t'options.shape.square': 'square',\r\n\t\t'options.shape.triangle': 'triangle',\r\n\t\t'options.shape.gasket': 'Sierpinski gasket', // wp: Sierpinski triangle\r\n\t\t'options.shape.cube': 'cube',\r\n\t\t'options.shape.hat': 'Mexican hat function', // wp: Mexican hat wavelet\r\n\t\t'options.shape.terrain': 'diamond-square fractal terrain', // wp: Diamond-square algorithm\r\n\t\t'options.elements': 'Element array',\r\n\t\t'options.elements.0': 'not used',\r\n\t\t'options.elements.8': 'with 8-bit index',\r\n\t\t'options.elements.16': 'with 16-bit index',\r\n\t\t'options.elements.32': 'with 32-bit index',\r\n\t\t'options.light': 'Light', // directional if on\r\n\t\t'options.light.off': 'off',\r\n\t\t'options.light.phong': 'on with Phong reflections', // wp: Phong reflection model\r\n\t\t'options.light.blinn': 'on with Blinn–Phong reflections', // wp: Blinn–Phong shading model\r\n\t\t'options.projection': 'Projection',\r\n\t\t'options.projection.ortho': 'orthogonal',\r\n\t\t'options.projection.perspective': 'perspective',\r\n\r\n\t\t'options.input': 'Input options',\r\n\t\t'options.canvas.width': 'Canvas width',\r\n\t\t'options.canvas.height': 'Canvas height',\r\n\t\t'options.backgroundColor.r': 'Background color red component',\r\n\t\t'options.backgroundColor.g': 'Background color green component',\r\n\t\t'options.backgroundColor.b': 'Background color blue component',\r\n\t\t'options.backgroundColor.a': 'Background color alpha component',\r\n\t\t'options.materialColor.r': 'Material color red component',\r\n\t\t'options.materialColor.g': 'Material color green component',\r\n\t\t'options.materialColor.b': 'Material color blue component',\r\n\t\t'options.materialColor.a': 'Material color alpha component',\r\n\t\t'options.materialSpecularColor.r': 'Specular color red component',\r\n\t\t'options.materialSpecularColor.g': 'Specular color green component',\r\n\t\t'options.materialSpecularColor.b': 'Specular color blue component',\r\n\t\t'options.materialDiffuseColor.r': 'Diffuse color red component',\r\n\t\t'options.materialDiffuseColor.g': 'Diffuse color green component',\r\n\t\t'options.materialDiffuseColor.b': 'Diffuse color blue component',\r\n\t\t'options.materialAmbientColor.r': 'Ambient color red component',\r\n\t\t'options.materialAmbientColor.g': 'Ambient color green component',\r\n\t\t'options.materialAmbientColor.b': 'Ambient color blue component',\r\n\t\t'options.lightDirection.x': 'Light direction x component',\r\n\t\t'options.lightDirection.y': 'Light direction y component',\r\n\t\t'options.lightDirection.z': 'Light direction z component',\r\n\t\t'options.shapeLod': 'Shape detail level', // recursion depth for fractal shapes\r\n\t\t'options.*.input': 'Input method',\r\n\t\t'options.*.input.constant': 'none',\r\n\t\t'options.*.input.slider': 'slider',\r\n\t\t'options.*.input.mousemovex': 'mouse x axis',\r\n\t\t'options.*.input.mousemovey': 'mouse y axis',\r\n\t\t'options.*.input.gamepad0': 'gamepad 0 axis',\r\n\t\t'options.*.input.gamepad1': 'gamepad 1 axis',\r\n\t\t'options.*.input.gamepad2': 'gamepad 2 axis',\r\n\t\t'options.*.input.gamepad3': 'gamepad 3 axis',\r\n\t\t'options.*.range': 'with range',\r\n\r\n\t\t'options.transform': 'Transforms',\r\n\t\t'options.rotate.x': 'Angle of rotation around x axis',\r\n\t\t'options.rotate.x.speed': 'Speed of rotation around x axis',\r\n\t\t'options.rotate.y': 'Angle of rotation around y axis',\r\n\t\t'options.rotate.y.speed': 'Speed of rotation around y axis',\r\n\t\t'options.rotate.z': 'Angle of rotation around z axis',\r\n\t\t'options.rotate.z.speed': 'Speed of rotation around z axis',\r\n\r\n\t\t'options.debug': 'Debug options',\r\n\t\t'options.debugShaders': 'Log shader compilation errors',\r\n\t\t'options.debugArrays': 'Log allocated array sizes',\r\n\t\t'options.debugInputs': 'Log input values',\r\n\r\n\t\t'options.formatting': 'Code formatting options',\r\n\t\t'options.indent': 'Indent',\r\n\t\t'options.indent.tab': 'tab',\r\n\t\t'options.indent.2': '2 spaces',\r\n\t\t'options.indent.4': '4 spaces',\r\n\t\t'options.indent.8': '8 spaces',\r\n\r\n\t\t'controls.type.mousemovex': 'Move the mouse pointer horizontally over the canvas',\r\n\t\t'controls.type.mousemovey': 'Move the mouse pointer vertically over the canvas',\r\n\t\t'controls.to': 'to update',\r\n\t\t/*\r\n\t\t// TODO\r\n\t\t'controls.value.background.solid.color.r': 'Background color red component',\r\n\t\t'controls.value.background.solid.color.g': 'Background color green component',\r\n\t\t'controls.value.background.solid.color.b': 'Background color blue component',\r\n\t\t'controls.value.background.solid.color.a': 'Background color alpha component',\r\n\t\t'controls.value.shader.single.color.r': 'Fragment color red component',\r\n\t\t'controls.value.shader.single.color.g': 'Fragment color green component',\r\n\t\t'controls.value.shader.single.color.b': 'Fragment color blue component',\r\n\t\t'controls.value.shader.single.color.a': 'Fragment color alpha component',\r\n\t\t'controls.value.shape.gasket.depth': 'Sierpinski gasket recursion depth',\r\n\t\t'controls.value.animation.rotation.speed': 'Z axis rotation speed',\r\n\t\t*/\r\n\t}[id];\r\n};\r\n","var Lines=require('./lines.js');\r\nvar GlslVector=require('./glsl-vector.js');\r\n\r\nvar Illumination=function(options){\r\n\tthis.options=options;\r\n\t// possible options checks:\r\n\t// options.materialScope=='global': constant or user input -> uniform\r\n\t// options.materialScope!='global': colors in model data -> attribute\r\n\t// options.materialData=='one': one color\r\n\t// options.materialData!='one': s/d/a colors\r\n\t// options.light=='off'\r\n\t// options.light!='off'\r\n\t// options.light=='blinn'\r\n\tif (options.materialScope=='global') {\r\n\t\tif (options.materialData=='one') {\r\n\t\t\tthis.colorVector=new GlslVector('color','materialColor','rgba',options);\r\n\t\t} else if (options.light!='off') {\r\n\t\t\tthis.specularColorVector=new GlslVector('specularColor','materialSpecularColor','rgb',options);\r\n\t\t\tthis.diffuseColorVector =new GlslVector('diffuseColor' ,'materialDiffuseColor' ,'rgb',options);\r\n\t\t\tthis.ambientColorVector =new GlslVector('ambientColor' ,'materialAmbientColor' ,'rgb',options);\r\n\t\t} else {\r\n\t\t\tvar ExtendedOptions=function(){\r\n\t\t\t\t['Specular','Diffuse','Ambient'].forEach(function(colorType){\r\n\t\t\t\t\tthis['material'+colorType+'Color.a']=1;\r\n\t\t\t\t\tthis['material'+colorType+'Color.a.input']='constant';\r\n\t\t\t\t\tthis['material'+colorType+'Color.a.min']=0;\r\n\t\t\t\t\tthis['material'+colorType+'Color.a.max']=1;\r\n\t\t\t\t},this);\r\n\t\t\t};\r\n\t\t\tExtendedOptions.prototype=options;\r\n\t\t\tvar extendedOptions=new ExtendedOptions;\r\n\t\t\tthis.specularColorVector=new GlslVector('specularColor','materialSpecularColor','rgba',extendedOptions);\r\n\t\t\tthis.diffuseColorVector =new GlslVector('diffuseColor' ,'materialDiffuseColor' ,'rgba',extendedOptions);\r\n\t\t\tthis.ambientColorVector =new GlslVector('ambientColor' ,'materialAmbientColor' ,'rgba',extendedOptions);\r\n\t\t}\r\n\t}\r\n\tif (options.light!='off') {\r\n\t\tthis.lightDirectionVector=new GlslVector('lightDirection','lightDirection','xyz',options);\r\n\t}\r\n};\r\nIllumination.prototype.getColorAttrs=function(){\r\n\tvar options=this.options;\r\n\tif (options.materialScope=='global') {\r\n\t\treturn [];\r\n\t} else {\r\n\t\tif (options.materialData=='one') {\r\n\t\t\treturn [\r\n\t\t\t\t{name:\"color\",enabled:true,weight:1.0}\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\t{name:\"specularColor\",enabled:options.light!='off',weight:0.4},\r\n\t\t\t\t{name:\"diffuseColor\" ,enabled:options.light!='off',weight:0.4},\r\n\t\t\t\t{name:\"ambientColor\" ,enabled:true                ,weight:0.2}\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n};\r\nIllumination.prototype.wantsTransformedPosition=function(eyeAtInfinity){\r\n\tvar options=this.options;\r\n\treturn !eyeAtInfinity && options.light!='off' && options.materialData!='one';\r\n};\r\nIllumination.prototype.getGlslVertexDeclarationLines=function(eyeAtInfinity,hasNormalAttr){\r\n\tvar options=this.options;\r\n\tvar lines=new Lines;\r\n\tif (this.wantsTransformedPosition(eyeAtInfinity)) {\r\n\t\tlines.a(\"varying vec3 interpolatedView;\");\r\n\t}\r\n\tif (options.light!='off') {\r\n\t\tif (hasNormalAttr) {\r\n\t\t\tlines.a(\"attribute vec3 normal;\");\r\n\t\t}\r\n\t\tlines.a(\"varying vec3 interpolatedNormal;\");\r\n\t}\r\n\tif (options.materialScope!='global') {\r\n\t\tif (options.materialData=='one') {\r\n\t\t\tlines.a(\"attribute vec4 color;\");\r\n\t\t\tlines.a(\"varying vec4 interpolatedColor;\");\r\n\t\t} else {\r\n\t\t\tif (options.light=='off') {\r\n\t\t\t\tlines.a(\"attribute vec4 ambientColor;\");\r\n\t\t\t\tlines.a(\"varying vec4 interpolatedColor;\");\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"attribute vec3 specularColor;\",\r\n\t\t\t\t\t\"attribute vec3 diffuseColor;\",\r\n\t\t\t\t\t\"attribute vec3 ambientColor;\",\r\n\t\t\t\t\t\"varying vec3 interpolatedSpecularColor;\",\r\n\t\t\t\t\t\"varying vec3 interpolatedDiffuseColor;\",\r\n\t\t\t\t\t\"varying vec3 interpolatedAmbientColor;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nIllumination.prototype.getGlslVertexOutputLines=function(eyeAtInfinity,hasNormalAttr,normalTransformLines){\r\n\tvar options=this.options;\r\n\tvar lines=new Lines;\r\n\tif (this.wantsTransformedPosition(eyeAtInfinity)) {\r\n\t\tlines.a(\"interpolatedView=-transformedPosition.xyz;\");\r\n\t}\r\n\tif (options.light!='off') {\r\n\t\tlines.a(\"interpolatedNormal=\");\r\n\t\tif (hasNormalAttr) {\r\n\t\t\tlines.t(\"normal\");\r\n\t\t} else {\r\n\t\t\tlines.t(\"vec3(0.0,0.0,1.0)\");\r\n\t\t}\r\n\t\tlines.t(normalTransformLines);\r\n\t\tlines.t(\";\");\r\n\t}\r\n\tif (options.materialScope!='global') {\r\n\t\tif (options.materialData=='one') {\r\n\t\t\tlines.a(\"interpolatedColor=color;\");\r\n\t\t} else {\r\n\t\t\tif (options.light=='off') {\r\n\t\t\t\tlines.a(\"interpolatedColor=ambientColor;\");\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"interpolatedSpecularColor=specularColor;\",\r\n\t\t\t\t\t\"interpolatedDiffuseColor=diffuseColor;\",\r\n\t\t\t\t\t\"interpolatedAmbientColor=ambientColor;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nIllumination.prototype.getGlslFragmentDeclarationLines=function(eyeAtInfinity){\r\n\tvar options=this.options;\r\n\tvar lines=new Lines;\r\n\tif (this.wantsTransformedPosition(eyeAtInfinity)) {\r\n\t\tlines.a(\"varying vec3 interpolatedView;\");\r\n\t}\r\n\tif (options.light!='off') {\r\n\t\tlines.a(\r\n\t\t\tthis.lightDirectionVector.getGlslDeclarationLines(),\r\n\t\t\t\"varying vec3 interpolatedNormal;\"\r\n\t\t);\r\n\t}\r\n\tif (options.materialScope=='global') {\r\n\t\tif (options.materialData=='one') {\r\n\t\t\tlines.a(this.colorVector.getGlslDeclarationLines());\r\n\t\t} else {\r\n\t\t\tif (options.light!='off') {\r\n\t\t\t\tlines.a(this.specularColorVector.getGlslDeclarationLines());\r\n\t\t\t\tlines.a(this.diffuseColorVector.getGlslDeclarationLines());\r\n\t\t\t}\r\n\t\t\tlines.a(this.ambientColorVector.getGlslDeclarationLines());\r\n\t\t}\r\n\t} else {\r\n\t\tif (options.materialData=='one' || options.light=='off') {\r\n\t\t\tlines.a(\"varying vec4 interpolatedColor;\");\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"varying vec3 interpolatedSpecularColor;\",\r\n\t\t\t\t\"varying vec3 interpolatedDiffuseColor;\",\r\n\t\t\t\t\"varying vec3 interpolatedAmbientColor;\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nIllumination.prototype.getGlslFragmentOutputLines=function(eyeAtInfinity,twoSided){\r\n\tvar options=this.options;\r\n\tvar lines=new Lines;\r\n\tvar colorRGB,colorA,colorRGBA;\r\n\tif (options.materialScope=='global') {\r\n\t\tvar vector=(options.materialData=='one'\r\n\t\t\t? this.colorVector\r\n\t\t\t: this.ambientColorVector\r\n\t\t);\r\n\t\tcolorRGB=vector.getGlslComponentsValue('rgb');\r\n\t\tcolorA=vector.getGlslComponentsValue('a');\r\n\t\tcolorRGBA=vector.getGlslValue();\r\n\t} else {\r\n\t\tcolorRGB=\"interpolatedColor.rgb\"; // TODO don't pass it as vec4 if light is on\r\n\t\tcolorA=\"interpolatedColor.a\";\r\n\t\tcolorRGBA=\"interpolatedColor\";\r\n\t}\r\n\tif (options.light=='off') {\r\n\t\tlines.a(\"gl_FragColor=\"+colorRGBA+\";\");\r\n\t} else {\r\n\t\tlines.a(\"vec3 N=normalize(interpolatedNormal);\");\r\n\t\tif (twoSided) {\r\n\t\t\tlines.a(\"if (!gl_FrontFacing) N=-N;\");\r\n\t\t}\r\n\t\tlines.a(\"vec3 L=normalize(\"+this.lightDirectionVector.getGlslValue()+\");\");\r\n\t\tif (options.materialData=='one') {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"gl_FragColor=vec4(\"+colorRGB+\"*max(0.0,dot(L,N)),\"+colorA+\");\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tif (this.wantsTransformedPosition(eyeAtInfinity)) {\r\n\t\t\t\tlines.a(\"vec3 V=normalize(interpolatedView);\");\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\"vec3 V=vec3(0.0,0.0,1.0);\");\r\n\t\t\t}\r\n\t\t\tvar specularDotArgs=\"H,N\";\r\n\t\t\tvar shininessCorrection=\"\";\r\n\t\t\tif (options.light=='blinn') {\r\n\t\t\t\tlines.a(\"vec3 H=normalize(L+V);\");\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\"vec3 R=reflect(-L,N);\");\r\n\t\t\t\tspecularDotArgs=\"R,V\";\r\n\t\t\t\tshininessCorrection=\"/4.0\";\r\n\t\t\t}\r\n\t\t\tlines.a(\"float shininess=100.0;\");\r\n\t\t\tlines.a((options.materialScope=='global'\r\n\t\t\t\t? new Lines(\r\n\t\t\t\t\t\"+\"+this.specularColorVector.getGlslValue()+\"*pow(max(0.0,dot(\"+specularDotArgs+\")),shininess\"+shininessCorrection+\")\",\r\n\t\t\t\t\t\"+\"+this.diffuseColorVector.getGlslValue()+\"*max(0.0,dot(L,N))\",\r\n\t\t\t\t\t\"+\"+this.ambientColorVector.getGlslValue()\r\n\t\t\t\t)\r\n\t\t\t\t: new Lines(\r\n\t\t\t\t\t\"+interpolatedSpecularColor*pow(max(0.0,dot(\"+specularDotArgs+\")),shininess\"+shininessCorrection+\")\",\r\n\t\t\t\t\t\"+interpolatedDiffuseColor*max(0.0,dot(L,N))\",\r\n\t\t\t\t\t\"+interpolatedAmbientColor\"\r\n\t\t\t\t)\r\n\t\t\t).wrap(\r\n\t\t\t\t\"gl_FragColor=vec4(\",\r\n\t\t\t\t\",1.0);\"\r\n\t\t\t));\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nIllumination.prototype.getJsInterfaceLines=function(writeListenerArgs,canvasMousemoveListener){\r\n\tvar options=this.options;\r\n\tvar lines=new Lines;\r\n\tif (options.materialScope=='global') {\r\n\t\tif (options.materialData=='one') {\r\n\t\t\tlines.a(this.colorVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener));\r\n\t\t} else {\r\n\t\t\tif (options.light!='off') {\r\n\t\t\t\tlines.a(this.specularColorVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener));\r\n\t\t\t\tlines.a(this.diffuseColorVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener));\r\n\t\t\t}\r\n\t\t\tlines.a(this.ambientColorVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener));\r\n\t\t}\r\n\t}\r\n\tif (options.light!='off') {\r\n\t\tlines.a(this.lightDirectionVector.getJsInterfaceLines(writeListenerArgs,canvasMousemoveListener));\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Illumination;\r\n","/*\r\n.a = add AFTER last line\r\n.t = add TO last line\r\n*/\r\n\r\nvar Lines=function(){\r\n\tthis.data=[];\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n};\r\n\r\n// private\r\nLines.prototype.flattenArgs=function(s){\r\n\tvar r=[];\r\n\tfor (var i=0;i<s.length;i++) {\r\n\t\tif (typeof s[i] == 'string') {\r\n\t\t\tr.push(s[i]);\r\n\t\t} else if (Array.isArray(s[i])) {\r\n\t\t\tArray.prototype.push.apply(r,s[i]);\r\n\t\t} else if (s[i] instanceof Lines) {\r\n\t\t\tArray.prototype.push.apply(r,s[i].data);\r\n\t\t}\r\n\t}\r\n\treturn r;\r\n};\r\nLines.prototype.addFlattenedArgs=function(s){\r\n\tArray.prototype.push.apply(this.data,s);\r\n};\r\n\r\n// public\r\nLines.prototype.a=function(){\r\n\tthis.addFlattenedArgs(\r\n\t\tthis.flattenArgs(arguments)\r\n\t);\r\n\treturn this;\r\n};\r\nLines.prototype.t=function(){\r\n\tvar lastLine=this.data.pop();\r\n\tvar s=this.flattenArgs(arguments);\r\n\ts[0]=lastLine+s[0];\r\n\tthis.addFlattenedArgs(s);\r\n\treturn this;\r\n};\r\nLines.prototype.indent=function(level){\r\n\tif (level===undefined) {\r\n\t\tlevel=1;\r\n\t}\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn Array(level+1).join('\\t')+line;\r\n\t});\r\n\treturn this;\r\n};\r\nLines.prototype.isEmpty=function(){\r\n\treturn this.data.length<=0;\r\n};\r\nLines.prototype.interleave=function(){\r\n\tvar first=true;\r\n\tfor (var i=0;i<arguments.length;i++) {\r\n\t\tvar r=this.flattenArgs([arguments[i]]);\r\n\t\tif (r.length>0) {\r\n\t\t\tif (first) {\r\n\t\t\t\tfirst=false;\r\n\t\t\t} else {\r\n\t\t\t\tthis.data.push('');\r\n\t\t\t}\r\n\t\t\tthis.addFlattenedArgs(r);\r\n\t\t}\r\n\t}\r\n\treturn this;\r\n};\r\nLines.prototype.wrap=function(begin,end){\r\n\tthis.indent();\r\n\tthis.data.unshift(begin);\r\n\tthis.data.push(end);\r\n\treturn this;\r\n};\r\nLines.prototype.wrapIfNotEmpty=function(begin,end){\r\n\tif (!this.isEmpty()) {\r\n\t\tthis.wrap(begin,end);\r\n\t}\r\n\treturn this;\r\n};\r\n/*\r\nLines.prototype.wrapEachLine=function(begin,end){\r\n\tthis.data=this.data.map(function(line){\r\n\t\treturn begin+line+end;\r\n\t});\r\n\treturn this;\r\n};\r\nLines.prototype.map=function(fn){\r\n\tthis.data=this.data.map(fn);\r\n\treturn this;\r\n};\r\n*/\r\nLines.prototype.join=function(indent){\r\n\treturn this.data.map(function(line){\r\n\t\treturn line.replace(/^(\\t)+/,function(match){\r\n\t\t\treturn Array(match.length+1).join(indent);\r\n\t\t});\r\n\t}).join('\\n');\r\n};\r\n\r\nmodule.exports=Lines;\r\n","var Lines=require('./lines.js');\r\n\r\nvar Listener=function(){\r\n\tthis.entries=[];\r\n};\r\nListener.prototype.enter=function(){\r\n\tvar entry={\r\n\t\tstate: [],\r\n\t\tpre: [],\r\n\t\tcond: null,\r\n\t\tlog: [],\r\n\t\tpost: [],\r\n\t};\r\n\tthis.entries.push(entry);\r\n\tfunction makePushArgs(where) {\r\n\t\treturn function() {\r\n\t\t\tfor (var i=0;i<arguments.length;i++) {\r\n\t\t\t\twhere.push(arguments[i]);\r\n\t\t\t}\r\n\t\t\treturn proxy;\r\n\t\t};\r\n\t}\r\n\tvar proxy={\r\n\t\tstate: makePushArgs(entry.state),\r\n\t\tpre: makePushArgs(entry.pre),\r\n\t\tcond: function(cond){\r\n\t\t\tentry.cond=cond;\r\n\t\t\treturn proxy;\r\n\t\t},\r\n\t\tlog: makePushArgs(entry.log),\r\n\t\tpost: makePushArgs(entry.post),\r\n\t};\r\n\treturn proxy;\r\n};\r\nListener.prototype.innerPrependedLines=function(){\r\n\treturn [];\r\n};\r\nListener.prototype.bracketFnArg=function(){\r\n\treturn \"\";\r\n};\r\nListener.prototype.wrapCall=function(line){\r\n\treturn line;\r\n};\r\nListener.prototype.write=function(haveToUpdateCanvas,haveToLogInput){\r\n\tvar outerLines=new Lines;\r\n\tvar innerLinesGraph={};\r\n\tvar innerLinesRoot=[];\r\n\tvar innerLinesPrev=null;\r\n\tvar WHITE=0;\r\n\tvar GRAY=1;\r\n\tvar BLACK=2;\r\n\tfunction addInnerLine(line,cond) {\r\n\t\tvar vertex;\r\n\t\tif (line in innerLinesGraph) {\r\n\t\t\tvertex=innerLinesGraph[line];\r\n\t\t} else {\r\n\t\t\tvertex=innerLinesGraph[line]={\r\n\t\t\t\tprevs: [],\r\n\t\t\t\tconds: [],\r\n\t\t\t\tmark: WHITE,\r\n\t\t\t};\r\n\t\t}\r\n\t\tif (vertex.conds!==null) {\r\n\t\t\tif (cond===null) {\r\n\t\t\t\tvertex.conds=null;\r\n\t\t\t} else {\r\n\t\t\t\tvertex.conds.push(cond);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tvertex.prevs.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=line;\r\n\t}\r\n\tfunction closeEntryInnerLines() {\r\n\t\tif (innerLinesPrev!==null) {\r\n\t\t\tinnerLinesRoot.push(innerLinesPrev);\r\n\t\t}\r\n\t\tinnerLinesPrev=null;\r\n\t}\r\n\tfunction writeInnerLines() {\r\n\t\tvar lines=[];\r\n\t\tvar currentCond=null;\r\n\t\tfunction writeLine(line,vertex) {\r\n\t\t\tvar newCond=null;\r\n\t\t\tif (vertex.conds!==null) {\r\n\t\t\t\tnewCond=vertex.conds.join(' || ');\r\n\t\t\t}\r\n\t\t\tif (newCond!=currentCond) {\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"}\");\r\n\t\t\t\t}\r\n\t\t\t\tcurrentCond=newCond;\r\n\t\t\t\tif (currentCond!==null) {\r\n\t\t\t\t\tlines.push(\"if (\"+currentCond+\") {\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentCond!==null) {\r\n\t\t\t\tlines.push('\\t'+line);\r\n\t\t\t} else {\r\n\t\t\t\tlines.push(line);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction recVertex(line,vertex) {\r\n\t\t\tvertex.mark=GRAY;\r\n\t\t\trecPrevs(vertex.prevs);\r\n\t\t\tvertex.mark=BLACK;\r\n\t\t\twriteLine(line,vertex);\r\n\t\t}\r\n\t\tfunction recPrevs(prevs) {\r\n\t\t\tprevs.forEach(function(line){\r\n\t\t\t\tif (innerLinesGraph[line].mark==WHITE) {\r\n\t\t\t\t\trecVertex(line,innerLinesGraph[line]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\trecPrevs(innerLinesRoot);\r\n\t\tif (currentCond!==null) {\r\n\t\t\tlines.push(\"}\");\r\n\t\t}\r\n\t\treturn new Lines(lines);\r\n\t}\r\n\tthis.entries.forEach(function(entry){\r\n\t\touterLines.a(entry.state);\r\n\t\tentry.pre.forEach(function(line){\r\n\t\t\taddInnerLine(line,null);\r\n\t\t});\r\n\t\tif (haveToLogInput) {\r\n\t\t\tentry.log.forEach(function(line){\r\n\t\t\t\taddInnerLine(line,entry.cond);\r\n\t\t\t});\r\n\t\t}\r\n\t\tentry.post.forEach(function(line){\r\n\t\t\taddInnerLine(line,entry.cond);\r\n\t\t});\r\n\t\tif (haveToUpdateCanvas) {\r\n\t\t\taddInnerLine(\"scheduleFrame();\",entry.cond);\r\n\t\t}\r\n\t\tcloseEntryInnerLines();\r\n\t});\r\n\tvar br=this.bracketListener();\r\n\tvar innerLines=writeInnerLines();\r\n\tif (!innerLines.isEmpty()) {\r\n\t\tinnerLines=new Lines(\r\n\t\t\tthis.innerPrependedLines(),\r\n\t\t\tinnerLines\r\n\t\t);\r\n\t}\r\n\tif (innerLines.data.length==1) {\r\n\t\tvar match=/^(\\w+)\\(\\);$/.exec(innerLines.data[0]);\r\n\t\tif (match) {\r\n\t\t\treturn outerLines.a(\r\n\t\t\t\tthis.wrapCall(\r\n\t\t\t\t\tnew Lines(\r\n\t\t\t\t\t\tbr[0]+match[1]+br[1]\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t\t// TODO what if no match?\r\n\t}\r\n\tif (innerLines.data.length) {\r\n\t\treturn outerLines.a(\r\n\t\t\tthis.wrapCall(\r\n\t\t\t\tinnerLines.wrap(\r\n\t\t\t\t\tbr[0]+\"function(\"+this.bracketFnArg()+\"){\",\r\n\t\t\t\t\t\"}\"+br[1]\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t\t);\r\n\t} else {\r\n\t\treturn outerLines;\r\n\t}\r\n};\r\n\r\nvar SliderListener=function(id){\r\n\tListener.call(this);\r\n\tthis.id=id;\r\n};\r\nSliderListener.prototype=Object.create(Listener.prototype);\r\nSliderListener.prototype.constructor=SliderListener;\r\nSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"document.getElementById('\"+this.id+\"').addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar MultipleSliderListener=function(query){\r\n\tListener.call(this);\r\n\tthis.query=query;\r\n};\r\nMultipleSliderListener.prototype=Object.create(Listener.prototype);\r\nMultipleSliderListener.prototype.constructor=MultipleSliderListener;\r\nMultipleSliderListener.prototype.wrapCall=function(lines){\r\n\treturn lines.wrap(\r\n\t\t\"[].forEach.call(document.querySelectorAll('\"+this.query+\"'),function(el){\",\r\n\t\t\"});\"\r\n\t);\r\n};\r\nMultipleSliderListener.prototype.bracketListener=function(){\r\n\treturn [\"el.addEventListener('change',\",\");\"];\r\n};\r\n\r\nvar CanvasMousemoveListener=function(){\r\n\tListener.call(this);\r\n};\r\nCanvasMousemoveListener.prototype=Object.create(Listener.prototype);\r\nCanvasMousemoveListener.prototype.constructor=CanvasMousemoveListener;\r\nCanvasMousemoveListener.prototype.enter=function(){\r\n\tvar proxy=Listener.prototype.enter.call(this);\r\n\tfunction floatHelper(minMaxFlag,varFlag,inputType,varName,minValue,maxValue){\r\n\t\tvar VarName=varName.charAt(0).toUpperCase()+varName.slice(1);\r\n\t\tif (minValue==0 && maxValue==1) {\r\n\t\t\tvar dest=(varFlag?\"var \":\"\")+varName+\"=\";\r\n\t\t} else {\r\n\t\t\tproxy.pre(\"var min\"+VarName+\"=\"+minValue+\";\");\r\n\t\t\tproxy.pre(\"var max\"+VarName+\"=\"+maxValue+\";\");\r\n\t\t\tvar dest=(varFlag?\"var \":\"\")+varName+\"=min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\")*\";\r\n\t\t}\r\n\t\treturn proxy.prexy(\r\n\t\t\tinputType,\r\n\t\t\tdest+\"(ev.clientX-rect.left)/(rect.width-1);\",\r\n\t\t\tdest+\"(rect.bottom-1-ev.clientY)/(rect.height-1);\"\r\n\t\t);\r\n\t}\r\n\tproxy.prexy=function(inputType,xLine,yLine){\r\n\t\tif (inputType=='mousemovex') {\r\n\t\t\treturn proxy.pre(xLine);\r\n\t\t} else if (inputType=='mousemovey') {\r\n\t\t\treturn proxy.pre(yLine);\r\n\t\t}\r\n\t\treturn proxy;\r\n\t};\r\n\tproxy.minMaxFloat=function(inputType,varName,minValue,maxValue){\r\n\t\treturn floatHelper(true,false,inputType,varName,minValue,maxValue);\r\n\t};\r\n\tproxy.minMaxVarFloat=function(inputType,varName,minValue,maxValue){\r\n\t\treturn floatHelper(true,true,inputType,varName,minValue,maxValue);\r\n\t};\r\n\tproxy.newVarInt=function(inputType,varName){\r\n\t\tvar VarName=varName.charAt(0).toUpperCase()+varName.slice(1);\r\n\t\treturn proxy.prexy(\r\n\t\t\tinputType,\r\n\t\t\t\"var new\"+VarName+\"=Math.floor(min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\"+1)*(ev.clientX-rect.left)/rect.width);\",\r\n\t\t\t\"var new\"+VarName+\"=Math.floor(min\"+VarName+\"+(max\"+VarName+\"-min\"+VarName+\"+1)*(rect.bottom-1-ev.clientY)/rect.height);\"\r\n\t\t);\r\n\t};\r\n\treturn proxy;\r\n};\r\nCanvasMousemoveListener.prototype.bracketListener=function(){\r\n\treturn [\"canvas.addEventListener('mousemove',\",\");\"];\r\n};\r\nCanvasMousemoveListener.prototype.bracketFnArg=function(){\r\n\treturn \"ev\";\r\n};\r\nCanvasMousemoveListener.prototype.innerPrependedLines=function(){\r\n\treturn [\r\n\t\t\"var rect=this.getBoundingClientRect();\",\r\n\t];\r\n};\r\n\r\nexports.SliderListener=SliderListener;\r\nexports.MultipleSliderListener=MultipleSliderListener;\r\nexports.CanvasMousemoveListener=CanvasMousemoveListener;\r\n","var idCounter=0;\r\nfunction generateId() {\r\n\treturn 'webgl-starter-id-'+(idCounter++);\r\n}\r\n\r\nvar i18n=require('./i18n.js');\r\nvar Options=require('./options.js');\r\nvar generateCode=require('./code.js');\r\n\r\nfunction getHtmlDataUri(html) {\r\n\t// with base64: https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/btoa\r\n\t//return \"data:text/html;charset=utf-8;base64,\"+window.btoa(unescape(encodeURIComponent(str)));\r\n\t// without base64: https://en.wikipedia.org/wiki/Data_URI_scheme\r\n\treturn 'data:text/html;charset=utf-8,'+encodeURIComponent(html);\r\n}\r\n\r\n$(function(){\r\n\t$('.webgl-starter').each(function(){\r\n\t\tvar $container=$(this);\r\n\t\tvar $options;\r\n\t\tvar $code;\r\n\t\tvar options=new Options();\r\n\t\tvar codeUpdateTimeoutId=null;\r\n\t\tvar codeUpdateDelay=200;\r\n\r\n\t\tfunction showHideSuboptionInputs(changedOption) {\r\n\t\t\toptions.inputOptions.forEach(function(affectedOption){\r\n\t\t\t\tif (affectedOption.isVisibilityAffectedBy(changedOption)) {\r\n\t\t\t\t\t$options.find(\"[data-option='\"+affectedOption.name+\"']\").toggle(\r\n\t\t\t\t\t\taffectedOption.isVisible(options)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction updateCode() {\r\n\t\t\tclearTimeout(codeUpdateTimeoutId);\r\n\t\t\tcodeUpdateTimeoutId=setTimeout(function(){\r\n\t\t\t\t$code.text(generateCode(options.fix(),i18n));\r\n\t\t\t\tif (window.hljs) hljs.highlightBlock($code[0]);\r\n\t\t\t},codeUpdateDelay);\r\n\t\t}\r\n\t\tfunction writeGeneralOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar $option=$(\"<div>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<select id='\"+id+\"'>\").append(\r\n\t\t\t\t\t\toption.availableValues.map(function(availableValue){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableValue).html(i18n('options.'+option.name+'.'+availableValue))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name]).change(function(){\r\n\t\t\t\t\t\toptions[option.name]=this.value;\r\n\t\t\t\t\t\tshowHideSuboptionInputs(option);\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tif (option.name=='elements') {\r\n\t\t\t\t$option.append(\" \"+i18n('message.elements'));\r\n\t\t\t}\r\n\t\t\treturn $option;\r\n\t\t}\r\n\t\tfunction writeInputOption(option,withRange,withGamepad) {\r\n\t\t\tvar id=generateId();\r\n\t\t\tvar inputId=generateId();\r\n\t\t\tvar $sliderInput,$numberInput;\r\n\t\t\tvar $inputSelect;\r\n\t\t\tvar $rangeSpan,$rangeMinInput,$rangeMaxInput;\r\n\t\t\tvar availableInputTypes=option.availableInputTypes;\r\n\t\t\tif (withGamepad) {\r\n\t\t\t\tavailableInputTypes=availableInputTypes.concat(option.availableGamepadInputTypes);\r\n\t\t\t}\r\n\t\t\tfunction inputListener(that) {\r\n\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\tthat.val(this.value);\r\n\t\t\t\t\toptions[option.name]=parseFloat(this.value);\r\n\t\t\t\t\tupdateCode();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfunction minMaxInput(minOrMax) {\r\n\t\t\t\treturn $(\"<input type='number' required>\")\r\n\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t.val(options[option.name+'.'+minOrMax])\r\n\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\tif (this.checkValidity()) {\r\n\t\t\t\t\t\t\toptions[option.name+'.'+minOrMax]=parseFloat(this.value);\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tvar $optionDiv=$(\"<div data-option='\"+option.name+\"'>\")\r\n\t\t\t\t.append(\"<label for='\"+id+\"'>\"+i18n('options.'+option.name)+\":</label>\")\r\n\t\t\t\t.append(\" <span class='min'>\"+option.getMinLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$sliderInput=$(\"<input type='range' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,$numberInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <span class='max'>\"+option.getMaxLabel()+\"</span> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$numberInput=$(\"<input type='number' required>\")\r\n\t\t\t\t\t\t.attr('min',option.getMin())\r\n\t\t\t\t\t\t.attr('max',option.getMax())\r\n\t\t\t\t\t\t.attr('step',option.getSetupStep())\r\n\t\t\t\t\t\t.val(options[option.name])\r\n\t\t\t\t\t\t.on('input change',function(){\r\n\t\t\t\t\t\t\tinputListener.call(this,$sliderInput);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" \")\r\n\t\t\t\t.append(\"<label for='\"+inputId+\"'>\"+i18n('options.*.input')+\":</label> \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$inputSelect=$(\"<select id='\"+inputId+\"'>\").append(\r\n\t\t\t\t\t\tavailableInputTypes.map(function(availableInputType){\r\n\t\t\t\t\t\t\treturn $(\"<option>\").val(availableInputType).html(i18n('options.*.input.'+availableInputType))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t).val(options[option.name+'.input']).change(function(){\r\n\t\t\t\t\t\toptions[option.name+'.input']=this.value;\r\n\t\t\t\t\t\tif (withRange) {\r\n\t\t\t\t\t\t\tif (this.value=='constant') {\r\n\t\t\t\t\t\t\t\t$rangeSpan.hide();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t$rangeSpan.show();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (withGamepad) {\r\n\t\t\t\t\t\t\t$options.find(\"[data-option='\"+option.name+'.speed'+\"']\")\r\n\t\t\t\t\t\t\t\t.toggle(option.availableGamepadInputTypes.indexOf(this.value)<0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\tif (withRange) {\r\n\t\t\t\t$optionDiv.append(\" \").append(\r\n\t\t\t\t\t$rangeSpan=$(\"<span class='range'>\")\r\n\t\t\t\t\t\t.append(i18n('options.*.range')+\" \")\r\n\t\t\t\t\t\t.append($rangeMinInput=minMaxInput('min'))\r\n\t\t\t\t\t\t.append(\" .. \")\r\n\t\t\t\t\t\t.append($rangeMaxInput=minMaxInput('max'))\r\n\t\t\t\t);\r\n\t\t\t\tif ($inputSelect.val()=='constant') {\r\n\t\t\t\t\t$rangeSpan.hide();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t$optionDiv.append(\" \")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<button type='button'>Reset</button>\").click(function(){\r\n\t\t\t\t\t\tif (withRange) {\r\n\t\t\t\t\t\t\t$rangeMinInput.val(option.getMin());\r\n\t\t\t\t\t\t\t$rangeMaxInput.val(option.getMax());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t$sliderInput.val(option.defaultValue).change();\r\n\t\t\t\t\t\t$inputSelect.val('constant').change();\r\n\t\t\t\t\t})\r\n\t\t\t\t);\r\n\t\t\treturn $optionDiv;\r\n\t\t}\r\n\t\tfunction writeDebugOption(option) {\r\n\t\t\tvar id=generateId();\r\n\t\t\treturn $(\"<div>\")\r\n\t\t\t\t.append(\r\n\t\t\t\t\t$(\"<input type='checkbox' id='\"+id+\"'>\")\r\n\t\t\t\t\t\t.prop('checked',options[option.name])\r\n\t\t\t\t\t\t.change(function(){\r\n\t\t\t\t\t\t\toptions[option.name]=$(this).prop('checked');\r\n\t\t\t\t\t\t\tupdateCode();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t\t.append(\" <label for='\"+id+\"'>\"+i18n('options.'+option.name)+\"</label>\");\r\n\t\t}\r\n\t\tfunction makeSortable($sortableRoot,callback) {\r\n\t\t\t// have to make drag handler 'draggable', not the whole item\r\n\t\t\t// because inputs and labels don't like to be inside 'draggable'\r\n\t\t\t// http://stackoverflow.com/questions/13017177/selection-disabled-while-using-html5-drag-and-drop\r\n\t\t\tvar $dragged=null;\r\n\t\t\t$sortableRoot.children().prepend(\r\n\t\t\t\t$(\"<div draggable='true' tabindex='0' title='Drag or press up/down while in focus to reorder transforms'>\").on('dragstart',function(ev){\r\n\t\t\t\t\t$dragged=$(this).parent();\r\n\t\t\t\t\tev.originalEvent.dataTransfer.effectAllowed='move';\r\n\t\t\t\t\tev.originalEvent.dataTransfer.setData('Text',name);\r\n\t\t\t\t\tif (ev.originalEvent.dataTransfer.setDragImage) { // doesn't work in IE\r\n\t\t\t\t\t\tev.originalEvent.dataTransfer.setDragImage($dragged[0],0,0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsetTimeout(function(){\r\n\t\t\t\t\t\t$dragged.addClass('ghost');\r\n\t\t\t\t\t},0);\r\n\t\t\t\t})\r\n\t\t\t\t.keydown(function(ev){\r\n\t\t\t\t\tvar $handle=$(this);\r\n\t\t\t\t\tvar $sorted=$handle.parent();\r\n\t\t\t\t\tif (ev.keyCode==38) {\r\n\t\t\t\t\t\t$sorted.prev().before($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (ev.keyCode==40) {\r\n\t\t\t\t\t\t$sorted.next().after($sorted);\r\n\t\t\t\t\t\t$handle.focus();\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t).on('dragover',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tev.originalEvent.dataTransfer.dropEffect='move';\r\n\t\t\t\tvar $target=$(this);\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\tif ($target.nextAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.before($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t} else if ($target.prevAll().is($dragged)) {\r\n\t\t\t\t\t\t$target.after($dragged);\r\n\t\t\t\t\t\tcallback();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).on('drop',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t}).on('dragend',function(ev){\r\n\t\t\t\tev.preventDefault();\r\n\t\t\t\tif ($dragged) {\r\n\t\t\t\t\t$dragged.removeClass('ghost');\r\n\t\t\t\t\t$dragged=null;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeOptions() {\r\n\t\t\tvar $transforms;\r\n\t\t\tvar $options=$(\"<div>\").append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.general')+\"</legend>\").append(\r\n\t\t\t\t\toptions.generalOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.input')+\"</legend>\").append(\r\n\t\t\t\t\toptions.inputOptions.map(function(option){\r\n\t\t\t\t\t\treturn writeInputOption(option,true,false)\r\n\t\t\t\t\t})\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.transform')+\"</legend>\").append(\r\n\t\t\t\t\t$transforms=$(\"<div>\").append(\r\n\t\t\t\t\t\toptions.transforms.map(function(transform){\r\n\t\t\t\t\t\t\treturn $(\"<div class='transform' data-transform='\"+transform.name+\"'>\").append(\r\n\t\t\t\t\t\t\t\ttransform.options.map(function(option,i){\r\n\t\t\t\t\t\t\t\t\treturn writeInputOption(option,false,i==0) // gamepad only for value (not speed) option\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.debug')+\"</legend>\").append(\r\n\t\t\t\t\toptions.debugOptions.map(writeDebugOption)\r\n\t\t\t\t)\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<fieldset>\").append(\"<legend>\"+i18n('options.formatting')+\"</legend>\").append(\r\n\t\t\t\t\toptions.formattingOptions.map(writeGeneralOption)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t\tmakeSortable($transforms,function(){\r\n\t\t\t\toptions.transformOrder=$transforms.children().map(function(){\r\n\t\t\t\t\treturn $(this).attr('data-transform');\r\n\t\t\t\t}).get();\r\n\t\t\t\tupdateCode();\r\n\t\t\t});\r\n\t\t\treturn $options;\r\n\t\t}\r\n\t\tfunction hideSuboptionInputs() {\r\n\t\t\toptions.inputOptions.forEach(function(affectedOption){\r\n\t\t\t\t$options.find(\"[data-option='\"+affectedOption.name+\"']\").toggle(\r\n\t\t\t\t\taffectedOption.isVisible(options)\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t\tfunction writeButtons() {\r\n\t\t\treturn $(\"<div>\").append(\r\n\t\t\t\t$(\"<a download='source.html'><button type='button'>Save source code</button></a>\").click(function(){\r\n\t\t\t\t\t// yes I want a button, but download attr is only available for links\r\n\t\t\t\t\t$(this).attr('href',getHtmlDataUri($code.text()));\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" \"\r\n\t\t\t).append(\r\n\t\t\t\t$(\"<button type='button'>Run in new window</button>\").click(function(){\r\n\t\t\t\t\twindow.open(getHtmlDataUri($code.text()),\"generatedCode\");\r\n\t\t\t\t})\r\n\t\t\t).append(\r\n\t\t\t\t\" these buttons don't work in Internet Explorer, copy-paste the code manually\"\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\t$container.empty().append($options=writeOptions());\r\n\t\thideSuboptionInputs();\r\n\t\t$container.append(writeButtons()).append(\r\n\t\t\t$(\"<pre>\").append($code=$(\"<code>\").text(generateCode(options.fix(),i18n)))\r\n\t\t);\r\n\t\tif (window.hljs) {\r\n\t\t\thljs.highlightBlock($code[0]);\r\n\t\t} else {\r\n\t\t\t$container.append(\"<p>\"+i18n('message.hljs')+\"</p>\");\r\n\t\t}\r\n\t\t$container.append(writeButtons());\r\n\t});\r\n});\r\n","var Option=function(name,availableValues,defaultValue,visibilityData){\r\n\tthis.name=name;\r\n\tthis.availableValues=availableValues; // for range its [min,max,step]\r\n\tif (defaultValue===undefined) {\r\n\t\tthis.defaultValue=availableValues[0];\r\n\t} else {\r\n\t\tthis.defaultValue=defaultValue;\r\n\t}\r\n\tif (visibilityData===undefined) {\r\n\t\tthis.visibilityData={};\r\n\t} else {\r\n\t\tthis.visibilityData=visibilityData;\r\n\t}\r\n};\r\nOption.prototype.isVisible=function(options){\r\n\tfor (var testName in this.visibilityData) {\r\n\t\tif (this.visibilityData[testName].indexOf(options[testName])<0) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n};\r\nOption.prototype.isVisibilityAffectedBy=function(changedOption){\r\n\treturn this.visibilityData[changedOption.name]!==undefined;\r\n};\r\n\r\nvar InputOption=function(name,rangeOfValues,defaultValue,visibilityData){\r\n\tOption.call(this,name,rangeOfValues,defaultValue,visibilityData);\r\n};\r\nInputOption.prototype=Object.create(Option.prototype);\r\nInputOption.prototype.constructor=InputOption;\r\nInputOption.prototype.availableInputTypes=['constant','slider','mousemovex','mousemovey'];\r\nInputOption.prototype.availableGamepadInputTypes=['gamepad0','gamepad1','gamepad2','gamepad3'];\r\nInputOption.prototype.getMin=function(){\r\n\treturn this.availableValues[0];\r\n};\r\nInputOption.prototype.getMax=function(){\r\n\treturn this.availableValues[1];\r\n};\r\nInputOption.prototype.getMinLabel=function(value){\r\n\tif (value===undefined) value=this.getMin();\r\n\treturn value.toString().replace('-','−');\r\n};\r\nInputOption.prototype.getMaxLabel=function(value){\r\n\tif (value===undefined) value=this.getMax();\r\n\treturn value.toString().replace('-','−');\r\n};\r\n\r\nvar FloatInputOption=function(name,rangeOfValues,defaultValue,visibilityData){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue,visibilityData);\r\n};\r\nFloatInputOption.prototype=Object.create(InputOption.prototype);\r\nFloatInputOption.prototype.constructor=FloatInputOption;\r\nFloatInputOption.prototype.getStep=function(){\r\n\treturn 'any';\r\n};\r\nFloatInputOption.prototype.getSetupStep=function(){\r\n\tif (this.getMax()>=100) {\r\n\t\treturn '0.1';\r\n\t} else if (this.getMax()>=10) {\r\n\t\treturn '0.01';\r\n\t} else {\r\n\t\treturn '0.001';\r\n\t}\r\n};\r\n\r\nvar IntInputOption=function(name,rangeOfValues,defaultValue,visibilityData){\r\n\tInputOption.call(this,name,rangeOfValues,defaultValue,visibilityData);\r\n};\r\nIntInputOption.prototype=Object.create(InputOption.prototype);\r\nIntInputOption.prototype.constructor=IntInputOption;\r\nIntInputOption.prototype.getStep=function(){\r\n\treturn 1;\r\n};\r\nIntInputOption.prototype.getSetupStep=function(){\r\n\treturn 1;\r\n};\r\n\r\nvar CanvasIntInputOption=function(name,rangeOfValues,defaultValue,visibilityData){\r\n\tIntInputOption.call(this,name,rangeOfValues,defaultValue,visibilityData);\r\n};\r\nCanvasIntInputOption.prototype=Object.create(IntInputOption.prototype);\r\nCanvasIntInputOption.prototype.constructor=CanvasIntInputOption;\r\nCanvasIntInputOption.prototype.availableInputTypes=['constant','slider']; // can't change canvas size by moving mouse over canvas\r\n\r\nvar DebugOption=function(name,defaultValue){\r\n\tOption.call(this,name,[false,true],defaultValue);\r\n};\r\nDebugOption.prototype=Object.create(Option.prototype);\r\nDebugOption.prototype.constructor=DebugOption;\r\n\r\nvar OptionsBlueprint=function(){\r\n\tthis.reset();\r\n};\r\nOptionsBlueprint.prototype.generalOptions=[\r\n\tnew Option('background',['none','solid']),\r\n\tnew Option('materialScope',['global','vertex','face']),\r\n\tnew Option('materialData',['one','sda']),\r\n\tnew Option('shape',['square','triangle','gasket','cube','hat','terrain']),\r\n\tnew Option('elements',['0','8','16','32']),\r\n\tnew Option('light',['off','phong','blinn']),\r\n\t//new Option('lightData',['none','one','sda'],'sda',{light:['on']}),\r\n\tnew Option('projection',['ortho','perspective']),\r\n];\r\nOptionsBlueprint.prototype.inputOptions=[\r\n\tnew CanvasIntInputOption('canvas.width',[1,1024],512),\r\n\tnew CanvasIntInputOption('canvas.height',[1,1024],512),\r\n\tnew FloatInputOption('backgroundColor.r',[0,1],1,{background:['solid']}),\r\n\tnew FloatInputOption('backgroundColor.g',[0,1],1,{background:['solid']}),\r\n\tnew FloatInputOption('backgroundColor.b',[0,1],1,{background:['solid']}),\r\n\tnew FloatInputOption('backgroundColor.a',[0,1],1,{background:['solid']}),\r\n\tnew FloatInputOption('materialColor.r',[0,1],1,{materialScope:['global'],materialData:['one']}),\r\n\tnew FloatInputOption('materialColor.g',[0,1],0,{materialScope:['global'],materialData:['one']}),\r\n\tnew FloatInputOption('materialColor.b',[0,1],0,{materialScope:['global'],materialData:['one']}),\r\n\tnew FloatInputOption('materialColor.a',[0,1],1,{materialScope:['global'],materialData:['one']}),\r\n\tnew FloatInputOption('materialSpecularColor.r',[0,1],0.4,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialSpecularColor.g',[0,1],0.4,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialSpecularColor.b',[0,1],0.4,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialDiffuseColor.r' ,[0,1],0.4,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialDiffuseColor.g' ,[0,1],0.4,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialDiffuseColor.b' ,[0,1],0.4,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialAmbientColor.r' ,[0,1],0.2,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialAmbientColor.g' ,[0,1],0.2,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('materialAmbientColor.b' ,[0,1],0.2,{materialScope:['global'],materialData:['sda']}),\r\n\tnew FloatInputOption('lightDirection.x',[-4,+4],-1,{light:['phong','blinn']}),\r\n\tnew FloatInputOption('lightDirection.y',[-4,+4],+1,{light:['phong','blinn']}),\r\n\tnew FloatInputOption('lightDirection.z',[-4,+4],+1,{light:['phong','blinn']}),\r\n\tnew IntInputOption('shapeLod',[0,10],6,{shape:['gasket','hat','terrain']}),\r\n];\r\nOptionsBlueprint.prototype.transformOptions=[];\r\nOptionsBlueprint.prototype.transforms=[];\r\n['rotate.x','rotate.y','rotate.z'].forEach(function(name){\r\n\t// TODO make default angle/speed something like 0.2*360 when able to add/delete transforms\r\n\tvar valueOption=new FloatInputOption(name,[-180,180],0);\r\n\tvar speedOption=new FloatInputOption(name+'.speed',[-360,360],0);\r\n\tOptionsBlueprint.prototype.transformOptions.push(valueOption);\r\n\tOptionsBlueprint.prototype.transformOptions.push(speedOption);\r\n\tOptionsBlueprint.prototype.transforms.push({\r\n\t\tname:name,\r\n\t\toptions:[valueOption,speedOption]\r\n\t});\r\n});\r\nOptionsBlueprint.prototype.debugOptions=[\r\n\tnew DebugOption('debugShaders',true),\r\n\tnew DebugOption('debugArrays'),\r\n\tnew DebugOption('debugInputs'), // TODO hide if no inputs?\r\n];\r\nOptionsBlueprint.prototype.formattingOptions=[\r\n\tnew Option('indent',['tab','2','4','8']),\r\n];\r\nOptionsBlueprint.prototype.groupNames=['generalOptions','inputOptions','transformOptions','debugOptions','formattingOptions'];\r\nOptionsBlueprint.prototype.reset=function(){\r\n\tthis.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName].forEach(function(option){\r\n\t\t\tthis[option.name]=option.defaultValue;\r\n\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\tthis[option.name+'.input']='constant';\r\n\t\t\t\tthis[option.name+'.min']=option.getMin();\r\n\t\t\t\tthis[option.name+'.max']=option.getMax();\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=this.transforms.map(function(transform){\r\n\t\treturn transform.name;\r\n\t});\r\n};\r\nOptionsBlueprint.prototype.fix=function(){\r\n\treturn new OptionsInstance(this);\r\n};\r\n\r\nvar OptionsInstance=function(blueprint){\r\n\tblueprint.groupNames.forEach(function(groupName){\r\n\t\tthis[groupName]=[];\r\n\t\tblueprint[groupName].forEach(function(option){\r\n\t\t\tif (option.isVisible(blueprint)) {\r\n\t\t\t\tthis[groupName].push(option);\r\n\t\t\t\tthis[option.name]=blueprint[option.name];\r\n\t\t\t\tif (groupName=='inputOptions' || groupName=='transformOptions') {\r\n\t\t\t\t\tthis[option.name+'.input']=blueprint[option.name+'.input'];\r\n\t\t\t\t\tthis[option.name+'.min']=blueprint[option.name+'.min'];\r\n\t\t\t\t\tthis[option.name+'.max']=blueprint[option.name+'.max'];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tblueprint.transforms.forEach(function(transform){\r\n\t\t\tif (InputOption.prototype.availableGamepadInputTypes.indexOf(this[transform.name+'.input'])>=0) {\r\n\t\t\t\tthis[transform.name+'.speed']=0;\r\n\t\t\t\tthis[transform.name+'.speed.input']='constant';\r\n\t\t\t}\r\n\t\t},this);\r\n\t},this);\r\n\tthis.transformOrder=blueprint.transformOrder;\r\n};\r\nOptionsInstance.prototype.getInputOptionsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0;\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getInputsFor=function(prefix){\r\n\treturn this.inputOptions.filter(function(option){\r\n\t\treturn option.name.indexOf(prefix+'.')===0 && this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.getOnlyInputFor=function(prefix){\r\n\tvar matchedOptions=this.getInputsFor(prefix);\r\n\tif (matchedOptions.length==1) {\r\n\t\treturn matchedOptions[0];\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\nOptionsInstance.prototype.hasInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']!='constant';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasSliderInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasGamepadInputs=function(){\r\n\treturn this.inputOptions.some(function(option){\r\n\t\treturn option.availableGamepadInputTypes.indexOf(this[option.name+'.input'])>=0;\r\n\t},this) || this.transformOptions.some(function(option){\r\n\t\treturn option.availableGamepadInputTypes.indexOf(this[option.name+'.input'])>=0;\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.hasInputsFor=function(prefix){\r\n\treturn this.getInputsFor(prefix).length>0;\r\n};\r\nOptionsInstance.prototype.hasAllSliderInputsFor=function(prefix){\r\n\treturn this.getInputOptionsFor(prefix).every(function(option){\r\n\t\treturn this[option.name+'.input']=='slider';\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.isAnimated=function(){\r\n\tfunction endsWith(name,suffix) {\r\n\t\treturn name.indexOf(suffix,name.length-suffix.length)!==-1;\r\n\t};\r\n\treturn this.transformOptions.some(function(option){\r\n\t\treturn (option instanceof InputOption) && (\r\n\t\t\t(endsWith(option.name,'.speed') && (this[option.name]!=0 || this[option.name+'.input']!='constant')) || // has input with nonzero speed\r\n\t\t\t(option.availableGamepadInputTypes.indexOf(this[option.name+'.input'])>=0) // has gamepad input which needs to be polled\r\n\t\t);\r\n\t},this);\r\n};\r\nOptionsInstance.prototype.needsUniform=function(prefix){\r\n\treturn (\r\n\t\tthis[prefix+'.input']!='constant' ||\r\n\t\tthis[prefix+'.speed']!=0 || this[prefix+'.speed.input']!='constant'\r\n\t);\r\n};\r\nOptionsInstance.prototype.needsTransform=function(prefix){\r\n\treturn this.needsUniform(prefix) || this[prefix]!=0;\r\n};\r\n\r\nmodule.exports=OptionsBlueprint;\r\n","exports.Square=require('./shapes/square.js');\r\nexports.Triangle=require('./shapes/triangle.js');\r\nexports.Gasket=require('./shapes/gasket.js');\r\nexports.Cube=require('./shapes/cube.js');\r\nexports.Hat=require('./shapes/hat.js');\r\nexports.Terrain=require('./shapes/terrain.js');\r\n","var Lines=require('../lines.js');\r\nvar Colorgen=require('../colorgen.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Cube=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs){\r\n\tShape.apply(this,arguments);\r\n};\r\nCube.prototype=Object.create(Shape.prototype);\r\nCube.prototype.constructor=Cube;\r\nCube.prototype.dim=3;\r\nCube.prototype.twoSided=false;\r\nCube.prototype.writeArrays=function(){\r\n\tvar colorgen=new Colorgen(\r\n\t\tthis.colorAttrs,\r\n\t\t0, // TODO remove 'clean' colors after bilinear interp is implemented\r\n\t\tthis.hasColorsPerFace?undefined:[\r\n\t\t\t[0.0, 0.0, 0.0],\r\n\t\t\t[1.0, 0.0, 0.0],\r\n\t\t\t[0.0, 1.0, 0.0],\r\n\t\t\t[1.0, 1.0, 0.0],\r\n\t\t\t[0.0, 0.0, 1.0],\r\n\t\t\t[1.0, 0.0, 1.0],\r\n\t\t\t[0.0, 1.0, 1.0],\r\n\t\t\t[1.0, 1.0, 1.0],\r\n\t\t]\r\n\t);\r\n\tvar nCubeVertices=8;\r\n\tvar cubeColors=[];\r\n\tfor (var i=0;i<nCubeVertices;i++) {\r\n\t\tcubeColors.push(colorgen.getNextColorString());\r\n\t}\r\n\tvar cubeVertexPositions=[\r\n\t\t\"-0.5,-0.5,-0.5,\",\r\n\t\t\"+0.5,-0.5,-0.5,\",\r\n\t\t\"-0.5,+0.5,-0.5,\",\r\n\t\t\"+0.5,+0.5,-0.5,\",\r\n\t\t\"-0.5,-0.5,+0.5,\",\r\n\t\t\"+0.5,-0.5,+0.5,\",\r\n\t\t\"-0.5,+0.5,+0.5,\",\r\n\t\t\"+0.5,+0.5,+0.5,\",\r\n\t];\r\n\tvar nCubeFaces=6;\r\n\tvar cubeFaceNames=[\r\n\t\t\"left\",\r\n\t\t\"right\",\r\n\t\t\"bottom\",\r\n\t\t\"top\",\r\n\t\t\"back\",\r\n\t\t\"front\",\r\n\t];\r\n\tvar cubeFaceNormals=[\r\n\t\t\"-1.0, 0.0, 0.0,\",\r\n\t\t\"+1.0, 0.0, 0.0,\",\r\n\t\t\" 0.0,-1.0, 0.0,\",\r\n\t\t\" 0.0,+1.0, 0.0,\",\r\n\t\t\" 0.0, 0.0,-1.0,\",\r\n\t\t\" 0.0, 0.0,+1.0,\",\r\n\t];\r\n\tvar cubeFaceVertices=[\r\n\t\t[4, 6, 0, 2],\r\n\t\t[1, 3, 5, 7],\r\n\t\t[0, 1, 4, 5],\r\n\t\t[2, 6, 3, 7],\r\n\t\t[0, 2, 1, 3],\r\n\t\t[5, 7, 4, 6],\r\n\t];\r\n\tvar quadToTriangleMap=[0, 1, 2, 2, 1, 3];\r\n\tvar vertexLines=new Lines;\r\n\tvertexLines.a(\"// x    y    z\");\r\n\tif (this.hasNormals) {\r\n\t\tvertexLines.t(\"  n.x  n.y  n.z\");\r\n\t}\r\n\tvertexLines.t(colorgen.getHeaderString());\r\n\tvar appendVertex=function(iFace,iVertex,firstInFace) {\r\n\t\tvertexLines.a(cubeVertexPositions[iVertex]);\r\n\t\tif (this.hasNormals) {\r\n\t\t\tvertexLines.t(cubeFaceNormals[iFace]);\r\n\t\t}\r\n\t\tif (this.hasColorsPerVertex) {\r\n\t\t\tvertexLines.t(cubeColors[iVertex]);\r\n\t\t} else if (this.hasColorsPerFace) {\r\n\t\t\tvertexLines.t(cubeColors[iFace]);\r\n\t\t}\r\n\t\tif (firstInFace) {\r\n\t\t\tvertexLines.t(\" // \"+cubeFaceNames[iFace]+\" face\");\r\n\t\t}\r\n\t}.bind(this);\r\n\tif (!this.usesElements()) {\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tquadToTriangleMap.forEach(function(j,k){\r\n\t\t\t\tappendVertex(i,cubeFaceVertices[i][j],k==0);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\t\"var nVertices=36;\",\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t} else if (this.hasColorsPerFace || this.hasNormals) {\r\n\t\t// elements, face data\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\tcubeFaceVertices[i].forEach(function(j,k){\r\n\t\t\t\tappendVertex(i,j,k==0);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\"\t 0,  1,  2,  2,  1,  3, // left face\",\r\n\t\t\t\"\t 4,  5,  6,  6,  5,  7, // right face\",\r\n\t\t\t\"\t 8,  9, 10, 10,  9, 11, // bottom face\",\r\n\t\t\t\"\t12, 13, 14, 14, 13, 15, // top face\",\r\n\t\t\t\"\t16, 17, 18, 18, 17, 19, // back face\",\r\n\t\t\t\"\t20, 21, 22, 22, 21, 23, // front face\",\r\n\t\t\t\"]);\"\r\n\t\t);\r\n\t} else {\r\n\t\t// elements, no face data\r\n\t\tfor (var i=0;i<nCubeVertices;i++) {\r\n\t\t\tvertexLines.a(cubeVertexPositions[i]);\r\n\t\t\tif (this.hasColorsPerVertex) {\r\n\t\t\t\tvertexLines.t(cubeColors[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar elementLines=new Lines;\r\n\t\tfor (var i=0;i<nCubeFaces;i++) {\r\n\t\t\telementLines.a(\"\");\r\n\t\t\tquadToTriangleMap.forEach(function(j){\r\n\t\t\t\telementLines.t(cubeFaceVertices[i][j]+\", \");\r\n\t\t\t});\r\n\t\t\telementLines.t(\"// \"+cubeFaceNames[i]+\" face\");\r\n\t\t}\r\n\t\treturn new Lines(\r\n\t\t\tvertexLines.wrap(\r\n\t\t\t\t\"var vertices=new Float32Array([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t),\r\n\t\t\t\"var nElements=36;\",\r\n\t\t\telementLines.wrap(\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([\",\r\n\t\t\t\t\"]);\"\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n};\r\n\r\nmodule.exports=Cube;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Gasket=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs,lod){\r\n\tLodShape.apply(this,arguments);\r\n};\r\nGasket.prototype=Object.create(LodShape.prototype);\r\nGasket.prototype.constructor=Gasket;\r\nGasket.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"(Math.pow(3,\"+lodSymbol+\"+1)+3)/2\";\r\n};\r\nGasket.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow(3,\"+lodSymbol+\")*3\";\r\n};\r\nGasket.prototype.writeStoreShape=function(){\r\n\tvar writePushVertex=function(){\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[0];\",\r\n\t\t\t\"vertices[nextIndexIntoVertices++]=p[1];\"\r\n\t\t);\r\n\t\tif (this.hasColorsPerVertex || this.hasColorsPerFace) {\r\n\t\t\tif (!this.usesElements() || this.hasColorsPerFace) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"colors[nextIndexIntoColors]\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"colors[nextElement%colors.length]\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tlines.t(\r\n\t\t\t\t\".forEach(function(cc){\",\r\n\t\t\t\t\"\tvertices[nextIndexIntoVertices++]=cc;\",\r\n\t\t\t\t\"});\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"return nextElement++;\"\r\n\t\t\t);\r\n\t\t} else if (this.hasColorsPerVertex) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"nextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"function pushVertex(p) {\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}.bind(this);\r\n\tvar writeTriangle=function(){\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"if (depth<=0) {\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tif (this.hasColorsPerFace) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushVertex(p0);\",\r\n\t\t\t\t\t\"\tpushVertex(p1);\",\r\n\t\t\t\t\t\"\tpushVertex(p2);\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.hasColorsPerFace) {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p0));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p1));\",\r\n\t\t\t\t\t\"\tpushElement(pushVertex(p2));\",\r\n\t\t\t\t\t\"\tnextIndexIntoColors=(nextIndexIntoColors+1)%colors.length;\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"\tif (es[0]===null) es[0]=pushVertex(p0);\",\r\n\t\t\t\t\t\"\tif (es[1]===null) es[1]=pushVertex(p1);\",\r\n\t\t\t\t\t\"\tif (es[2]===null) es[2]=pushVertex(p2);\",\r\n\t\t\t\t\t\"\tpushElement(es[0]);\",\r\n\t\t\t\t\t\"\tpushElement(es[1]);\",\r\n\t\t\t\t\t\"\tpushElement(es[2]);\",\r\n\t\t\t\t\t\"\treturn es;\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"} else {\",\r\n\t\t\t\"\tvar p01=mix(p0,p1);\",\r\n\t\t\t\"\tvar p12=mix(p1,p2);\",\r\n\t\t\t\"\tvar p20=mix(p2,p0);\"\r\n\t\t);\r\n\t\tif (!this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\ttriangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\ttriangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else if (this.hasColorsPerFace) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12);\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"\tvar es0=triangle(depth-1,p0,p01,p20,[es[0],null,null]);\",\r\n\t\t\t\t\"\tvar es1=triangle(depth-1,p1,p12,p01,[es[1],null,es0[1]]);\",\r\n\t\t\t\t\"\tvar es2=triangle(depth-1,p2,p20,p12,[es[2],es0[2],es1[1]]);\",\r\n\t\t\t\t\"\treturn [es0[0],es1[0],es2[0]];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tlines.a(\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t\tif (!this.usesElements() || this.hasColorsPerFace) {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn lines.wrap(\r\n\t\t\t\t\"function triangle(depth,p0,p1,p2,es) {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t);\r\n\t\t}\r\n\t}.bind(this);\r\n\tvar writeInitialTriangleCall=function(){\r\n\t\tvar lines=new Lines;\r\n\t\tlines.a(\r\n\t\t\t\"shapeLod,\",\r\n\t\t\t\"[-Math.sin(0/3*Math.PI),Math.cos(0/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(2/3*Math.PI),Math.cos(2/3*Math.PI)],\",\r\n\t\t\t\"[-Math.sin(4/3*Math.PI),Math.cos(4/3*Math.PI)]\"\r\n\t\t);\r\n\t\tif (this.usesElements() && !this.hasColorsPerFace) {\r\n\t\t\tlines.t(\r\n\t\t\t\t\",\",\"[null,null,null]\"\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn lines.wrap(\r\n\t\t\t\"triangle(\",\r\n\t\t\t\");\"\r\n\t\t);\r\n\t}.bind(this);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var nextIndexIntoVertices=0;\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nextIndexIntoElements=0;\",\r\n\t\t\t\"var nextElement=0;\"\r\n\t\t);\r\n\t}\r\n\tif (this.hasColorsPerVertex || this.hasColorsPerFace) {\r\n\t\tlines.a(\"// p = position, cc = color component, e = element, es = elements\");\r\n\t\tlines.a(this.writeColorData());\r\n\t\tif (!this.usesElements() || this.hasColorsPerFace) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nextIndexIntoColors=0;\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"// p = position, e = element, es = elements\"\r\n\t\t);\r\n\t}\r\n\tlines.a(writePushVertex());\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function pushElement(e) {\",\r\n\t\t\t\"\telements[nextIndexIntoElements++]=e;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\t\"function mix(pa,pb) {\",\r\n\t\t\"\treturn [\",\r\n\t\t\"\t\t(pa[0]+pb[0])/2,\",\r\n\t\t\"\t\t(pa[1]+pb[1])/2,\",\r\n\t\t\"\t];\",\r\n\t\t\"}\",\r\n\t\twriteTriangle(),\r\n\t\twriteInitialTriangleCall()\r\n\t);\r\n\treturn lines;\r\n}\r\n\r\nmodule.exports=Gasket;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Hat=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs,lod){\r\n\tMesh.apply(this,arguments);\r\n};\r\nHat.prototype=Object.create(Mesh.prototype);\r\nHat.prototype.constructor=Hat;\r\nHat.prototype.writeMeshInit=function(){\r\n\treturn new Lines(\r\n\t\t\"var xyRange=4;\",\r\n\t\t\"var xyScale=1/(4*Math.sqrt(2));\"\r\n\t);\r\n};\r\nHat.prototype.writeMeshVertex=function(){\r\n\tvar lines=new Lines;\r\n\tvar iv=0;\r\n\tlines.a(\r\n\t\t\"var r2=(x*x+y*y)/2;\",\r\n\t\t\"var A=Math.exp(-r2)/Math.PI;\",\r\n\t\t\"var z=A*(1-r2);\",\r\n\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=x*xyScale;\",\r\n\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=y*xyScale;\",\r\n\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=z;\"\r\n\t);\r\n\tif (this.hasNormals) {\r\n\t\tlines.a(\r\n\t\t\t\"var normal=normalize([(z+A)*x/xyScale,(z+A)*y/xyScale,1]);\",\r\n\t\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=normal[2];\"\r\n\t\t);\r\n\t}\r\n\tlines.a(this.writeMeshVertexColors(iv));\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Hat;\r\n","var Lines=require('../lines.js');\r\nvar Colorgen=require('../colorgen.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar LodShape=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs,lod){\r\n\tShape.call(this,elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs);\r\n\tthis.lod=lod;\r\n\tvar maxLod=this.getMaxPossibleLod();\r\n\tif (this.lod.value>maxLod) this.lod.value=maxLod;\r\n\tif (this.lod.max>maxLod) this.lod.max=maxLod;\r\n};\r\nLodShape.prototype=Object.create(Shape.prototype);\r\nLodShape.prototype.constructor=LodShape;\r\nLodShape.prototype.getMaxPossibleLod=function(){ // due to element index type\r\n\tif (!this.usesElements() || this.elementIndexBits>=31) { // 1<<31 is a negative number, can't compare with it\r\n\t\treturn this.lod.max; // no need to limit lod if elements are not used or index type is large enough\r\n\t}\r\n\tvar nVerticesFn = this.hasColorsPerFace\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar indexLimit=1<<this.elementIndexBits;\r\n\tfor (var m=this.lod.max;m>=0;m--) {\r\n\t\tvar n=eval(nVerticesFn(m));\r\n\t\tif (n<=indexLimit) {\r\n\t\t\treturn m;\r\n\t\t}\r\n\t}\r\n\t// TODO fail here\r\n};\r\nLodShape.prototype.writeColorData=function(){\r\n\tvar lines=new Lines;\r\n\tvar colorgen=new Colorgen(this.colorAttrs,0);\r\n\tfor (var i=0;i<4;i++) {\r\n\t\tlines.a(\"[\"+colorgen.getNextColorString().slice(1,-1)+\"],\");\r\n\t}\r\n\treturn lines.wrap(\r\n\t\t\"var colors=[\",\r\n\t\t\"];\"\r\n\t);\r\n};\r\n// abstract LodShape.prototype.getDistinctVertexCount=function(lodSymbol){}; // # of distinct vertices where one vertex can be shared between different faces and output primitives\r\n// abstract LodShape.prototype.getFaceVertexCount=function(lodSymbol){}; // # of distinct (vertex,face) pairs that still can be shared between output primitives\r\n// abstract LodShape.prototype.getTotalVertexCount=function(lodSymbol){}; // # of vertices in output primitives = # of elements when element arrays are in use\r\n// abstract LodShape.prototype.writeStoreShape=function(){};\r\nLodShape.prototype.writeArraysAndBufferData=function(debugArrays){\r\n\tvar nVerticesFn = this.hasColorsPerFace\r\n\t\t? this.getFaceVertexCount\r\n\t\t: this.getDistinctVertexCount;\r\n\tvar lines=new Lines;\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"var minShapeLod=\"+this.lod.min+\";\",\r\n\t\t\t\"var maxShapeLod=\"+this.lod.max+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+nVerticesFn(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nMaxElements=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nMaxElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices,nElements;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"\tnElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nMaxVertices=\"+this.getTotalVertexCount(\"maxShapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nMaxVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"var shapeLod,nVertices;\",\r\n\t\t\t\t\"function storeShape(newShapeLod) {\",\r\n\t\t\t\t\"\tshapeLod=newShapeLod;\",\r\n\t\t\t\t\"\tnVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\"\r\n\t\t\t);\r\n\t\t}\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var shapeLod=\"+this.lod.value+\";\"\r\n\t\t);\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+nVerticesFn(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\t\"var nElements=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"(nElements);\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tlines.a(\r\n\t\t\t\t\"var nVertices=\"+this.getTotalVertexCount(\"shapeLod\")+\";\",\r\n\t\t\t\t\"var vertices=new Float32Array(nVertices*\"+this.getNumbersPerVertex()+\");\",\r\n\t\t\t\tthis.writeDebug(debugArrays),\r\n\t\t\t\t\"function storeShape() {\"\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeStoreShape().indent(),\r\n\t\tthis.writeBufferData().indent(),\r\n\t\t\"}\"\r\n\t);\r\n\tif (this.lod.changes) {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape(\"+this.lod.value+\");\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"storeShape();\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=LodShape;\r\n","var Lines=require('../lines.js');\r\nvar LodShape=require('./lodshape.js');\r\n\r\nvar Mesh=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs,lod){\r\n\tLodShape.apply(this,arguments);\r\n};\r\nMesh.prototype=Object.create(LodShape.prototype);\r\nMesh.prototype.constructor=Mesh;\r\nMesh.prototype.dim=3;\r\nMesh.prototype.getDistinctVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\")+1,2)\";\r\n};\r\nMesh.prototype.getFaceVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*4\";\r\n};\r\nMesh.prototype.getTotalVertexCount=function(lodSymbol){\r\n\treturn \"Math.pow((1<<\"+lodSymbol+\"),2)*6\";\r\n};\r\nMesh.prototype.writeMeshVertexColors=function(iv){\r\n\tif (this.hasColorsPerVertex || this.hasColorsPerFace) {\r\n\t\treturn new Lines(\r\n\t\t\t((!this.usesElements() && !this.hasColorsPerFace)\r\n\t\t\t\t?\"var ic=((i+di)&1)*2+((j+dj)&1);\"\r\n\t\t\t\t:\"var ic=(i&1)*2+(j&1);\"\r\n\t\t\t),\r\n\t\t\t\"colors[ic].forEach(function(cc,icc){\",\r\n\t\t\t\"\tvertices[vertexOffset+\"+iv+\"+icc]=cc;\",\r\n\t\t\t\"});\"\r\n\t\t);\r\n\t} else {\r\n\t\treturn new Lines;\r\n\t}\r\n};\r\n// abstract Mesh.prototype.writeMeshInit=function(){};\r\n// abstract Mesh.prototype.writeMeshVertex=function(){};\r\nMesh.prototype.writeStoreShape=function(){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var res=(1<<shapeLod);\"\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*6+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.hasColorsPerFace) {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j,k) {\",\r\n\t\t\t\"\treturn (i*res+j)*4+k;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"function vertexElement(i,j) {\",\r\n\t\t\t\"\treturn i*(res+1)+j;\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (this.hasNormals) {\r\n\t\tlines.a(\r\n\t\t\t\"function normalize(v) {\",\r\n\t\t\t\"\tvar l=Math.sqrt(v[0]*v[0]+v[1]*v[1]+v[2]*v[2]);\",\r\n\t\t\t\"\treturn [v[0]/l,v[1]/l,v[2]/l];\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\tif (this.hasColorsPerVertex || this.hasColorsPerFace) {\r\n\t\tlines.a(this.writeColorData());\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeMeshInit()\r\n\t);\r\n\tif (!this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"for (var i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (var j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<6;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex().indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else if (this.hasColorsPerFace) {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tfor (var k=0;k<4;k++) {\",\r\n\t\t\t\"\t\t\tvar di=[0,0,1,1][k];\",\r\n\t\t\t\"\t\t\tvar dj=[0,1,0,1][k];\",\r\n\t\t\t\"\t\t\tvar y=(i+di)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar x=(j+dj)/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\t\tvar vertexOffset=vertexElement(i,j,k)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex().indent(3),\r\n\t\t\t\"\t\t}\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i,j,0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i,j,2);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i,j,1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i,j,3);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t} else {\r\n\t\tlines.a(\r\n\t\t\t\"var i,j;\",\r\n\t\t\t\"for (i=0;i<=res;i++) {\",\r\n\t\t\t\"\tvar y=i/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\tfor (j=0;j<=res;j++) {\",\r\n\t\t\t\"\t\tvar x=j/res*xyRange*2-xyRange;\",\r\n\t\t\t\"\t\tvar vertexOffset=vertexElement(i,j)*\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\tthis.writeMeshVertex().indent(2),\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\",\r\n\t\t\t\"for (i=0;i<res;i++) {\",\r\n\t\t\t\"\tfor (j=0;j<res;j++) {\",\r\n\t\t\t\"\t\tvar elementOffset=(i*res+j)*6;\",\r\n\t\t\t\"\t\telements[elementOffset+0]=vertexElement(i+0,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+1]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+2]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+3]=vertexElement(i+1,j+0);\",\r\n\t\t\t\"\t\telements[elementOffset+4]=vertexElement(i+0,j+1);\",\r\n\t\t\t\"\t\telements[elementOffset+5]=vertexElement(i+1,j+1);\",\r\n\t\t\t\"\t}\",\r\n\t\t\t\"}\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Mesh;\r\n","var Lines=require('../lines.js');\r\n\r\nvar Shape=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs){\r\n\tthis.elementIndexBits=elementIndexBits; // 0 if don't want element arrays; 8, 16 or 32 bits per element index, limits lod of shape\r\n\tthis.hasNormals=(hasReflections && this.dim==3); // true = need normals, unless shape is flat\r\n\tthis.hasColorsPerVertex=hasColorsPerVertex; // TODO support for both hasColorsPerVertex and hasColorsPerFace == true\r\n\tthis.hasColorsPerFace=hasColorsPerFace;\r\n\tthis.colorAttrs=colorAttrs; // array of color attribute structs {name,enabled,weight}\r\n};\r\nShape.prototype.dim=2;\r\nShape.prototype.twoSided=true; // triangles can be viewed from both sides\r\nShape.prototype.glPrimitive='TRIANGLES';\r\nShape.prototype.usesElements=function(){\r\n\treturn this.elementIndexBits>0;\r\n};\r\nShape.prototype.getNumbersPerVertex=function(){\r\n\treturn this.dim+(this.hasNormals?3:0)+this.colorAttrs.length*3;\r\n};\r\nShape.prototype.getElementIndexJsArray=function(){\r\n\treturn \"Uint\"+this.elementIndexBits+\"Array\";\r\n};\r\nShape.prototype.getElementIndexGlType=function(){\r\n\tif (this.elementIndexBits==8) {\r\n\t\treturn \"gl.UNSIGNED_BYTE\"; // not recommended by ms [https://msdn.microsoft.com/en-us/library/dn798776%28v=vs.85%29.aspx]\r\n\t} else if (this.elementIndexBits==16) {\r\n\t\treturn \"gl.UNSIGNED_SHORT\"; // mozilla examples use this\r\n\t} else if (this.elementIndexBits==32) {\r\n\t\treturn \"gl.UNSIGNED_INT\"; // needs extension\r\n\t}\r\n};\r\nShape.prototype.writeDebug=function(debugArrays){\r\n\tvar lines=new Lines;\r\n\tif (debugArrays) {\r\n\t\tlines.a(\"console.log('vertex array byte length:',vertices.byteLength);\");\r\n\t\tif (this.usesElements()) {\r\n\t\t\tlines.a(\"console.log('element array byte length:',elements.byteLength);\");\r\n\t\t\tlines.a(\"console.log('vertex+element array byte length:',vertices.byteLength+elements.byteLength);\");\r\n\t\t}\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeBufferData=function(){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bufferData(gl.ARRAY_BUFFER,vertices,gl.STATIC_DRAW);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bufferData(gl.ELEMENT_ARRAY_BUFFER,elements,gl.STATIC_DRAW);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nShape.prototype.writeArraysAndBufferData=function(debugArrays){\r\n\treturn new Lines(\r\n\t\tthis.writeArrays(),\r\n\t\tthis.writeDebug(debugArrays),\r\n\t\tthis.writeBufferData()\r\n\t);\r\n};\r\n// public fn for init\r\nShape.prototype.writeInit=function(debugArrays){\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"gl.bindBuffer(gl.ARRAY_BUFFER,gl.createBuffer());\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER,gl.createBuffer());\"\r\n\t\t);\r\n\t}\r\n\tlines.a(\r\n\t\tthis.writeArraysAndBufferData(debugArrays)\r\n\t);\r\n\tvar writeVertexAttribArrays=function(attrs){\r\n\t\tvar cmpSize=attrs[0][0];\r\n\t\tvar allSameSize=attrs.every(function(attr){\r\n\t\t\tvar size=attr[0];\r\n\t\t\treturn size==cmpSize;\r\n\t\t});\r\n\t\tvar allEnabled=true;\r\n\t\tvar arrayLines=new Lines;\r\n\t\tattrs.forEach(function(attr){\r\n\t\t\tvar size=attr[0];\r\n\t\t\tvar name=attr[1];\r\n\t\t\tvar enabled=attr[2];\r\n\t\t\tif (enabled) {\r\n\t\t\t\tarrayLines.a(allSameSize\r\n\t\t\t\t\t? \"'\"+name+\"',\"\r\n\t\t\t\t\t: \"[\"+size+\",'\"+name+\"'],\"\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\tarrayLines.a(allSameSize\r\n\t\t\t\t\t? \"null,\"\r\n\t\t\t\t\t: \"[\"+size+\",null],\"\r\n\t\t\t\t);\r\n\t\t\t\tarrayLines.t(\" // attribute \"+name+\" disabled\");\r\n\t\t\t\tallEnabled=false;\r\n\t\t\t}\r\n\t\t})\r\n\t\tvar foreachEnableLines=new Lines(\r\n\t\t\t\"var attrLoc=gl.getAttribLocation(program,attrName);\",\r\n\t\t\t\"gl.vertexAttribPointer(\",\r\n\t\t\t\"\tattrLoc,attrSize,gl.FLOAT,false,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*bufferStride,\",\r\n\t\t\t\"\tFloat32Array.BYTES_PER_ELEMENT*bufferOffset\",\r\n\t\t\t\");\",\r\n\t\t\t\"gl.enableVertexAttribArray(attrLoc);\"\r\n\t\t);\r\n\t\tif (!allEnabled) {\r\n\t\t\tforeachEnableLines.wrap(\"if (name!==null) {\",\"}\");\r\n\t\t}\r\n\t\tvar foreachLines=new Lines();\r\n\t\tif (allSameSize) {\r\n\t\t\tforeachLines.a(\r\n\t\t\t\t\"var attrSize=\"+cmpSize+\";\"\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\tforeachLines.a(\r\n\t\t\t\t\"var attrSize=attr[0];\",\r\n\t\t\t\t\"var attrName=attr[1];\"\r\n\t\t\t);\r\n\t\t}\r\n\t\tforeachLines.a(\r\n\t\t\tforeachEnableLines,\r\n\t\t\t\"bufferOffset+=attrSize;\"\r\n\t\t);\r\n\t\tlines.a(\r\n\t\t\t\"var bufferStride=\"+this.getNumbersPerVertex()+\";\",\r\n\t\t\t\"var bufferOffset=0;\",\r\n\t\t\tarrayLines.wrap(\"[\",\"]\")\r\n\t\t);\r\n\t\tlines.t(\r\n\t\t\tforeachLines.wrap(\".forEach(function(\"+(allSameSize?\"attrName\":\"attr\")+\"){\",\"});\")\r\n\t\t);\r\n\t}.bind(this);\r\n\tif (!this.hasNormals && this.colorAttrs.length<=0) {\r\n\t\tlines.a(\r\n\t\t\t\"var positionLoc=gl.getAttribLocation(program,'position');\",\r\n\t\t\t\"gl.vertexAttribPointer(positionLoc,\"+this.dim+\",gl.FLOAT,false,0,0);\",\r\n\t\t\t\"gl.enableVertexAttribArray(positionLoc);\"\r\n\t\t);\r\n\t} else {\r\n\t\twriteVertexAttribArrays(\r\n\t\t\t[[this.dim,'position',true]].concat(\r\n\t\t\t\tthis.hasNormals?[[3,'normal',true]]:[],\r\n\t\t\t\tthis.colorAttrs.map(function(attr){\r\n\t\t\t\t\treturn [3,attr.name,attr.enabled];\r\n\t\t\t\t})\r\n\t\t\t)\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n// public fn for render\r\nShape.prototype.writeDraw=function(){\r\n\tif (this.usesElements()) {\r\n\t\treturn new Lines(\"gl.drawElements(gl.\"+this.glPrimitive+\",nElements,\"+this.getElementIndexGlType()+\",0);\");\r\n\t} else {\r\n\t\treturn new Lines(\"gl.drawArrays(gl.\"+this.glPrimitive+\",0,nVertices);\");\r\n\t}\r\n};\r\n\r\nmodule.exports=Shape;\r\n","var Lines=require('../lines.js');\r\nvar Colorgen=require('../colorgen.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Square=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs){\r\n\tShape.apply(this,arguments);\r\n};\r\nSquare.prototype=Object.create(Shape.prototype);\r\nSquare.prototype.constructor=Square;\r\nSquare.prototype.glPrimitive='TRIANGLE_FAN';\r\nSquare.prototype.writeArrays=function(){\r\n\tvar colorgen=new Colorgen(this.colorAttrs,0);\r\n\tvar colorDataForFace;\r\n\tvar writeColorData=function(){\r\n\t\tif (this.hasColorsPerFace && !this.hasColorsPerVertex) {\r\n\t\t\tif (colorDataForFace===undefined) {\r\n\t\t\t\tcolorDataForFace=colorgen.getNextColorString();\r\n\t\t\t}\r\n\t\t\treturn colorDataForFace;\r\n\t\t} else {\r\n\t\t\treturn colorgen.getNextColorString();\r\n\t\t}\r\n\t}.bind(this);\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=4;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t// x    y\"+colorgen.getHeaderString(),\r\n\t\t\"\t-0.5,-0.5,\"+writeColorData(),\r\n\t\t\"\t+0.5,-0.5,\"+writeColorData(),\r\n\t\t\"\t+0.5,+0.5,\"+writeColorData(),\r\n\t\t\"\t-0.5,+0.5,\"+writeColorData(),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=4;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2,3]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Square;\r\n","var Lines=require('../lines.js');\r\nvar Mesh=require('./mesh.js');\r\n\r\nvar Terrain=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs,lod){\r\n\tMesh.apply(this,arguments);\r\n};\r\nTerrain.prototype=Object.create(Mesh.prototype);\r\nTerrain.prototype.constructor=Terrain;\r\nTerrain.prototype.writeMeshInit=function(){\r\n\tvar noFaces=(this.usesElements() && !this.hasColorsPerFace);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"var xyRange=1/Math.sqrt(2);\",\r\n\t\t\"var zRange=xyRange;\",\r\n\t\t\"var mask=res-1;\",\r\n\t\t\"function zOffset(i,j) {\",\r\n\t\t\"\treturn vertexElement(i,j\"+(noFaces?\"\":\",0\")+\")*\"+this.getNumbersPerVertex()+\"+2;\",\r\n\t\t\"}\",\r\n\t\t\"function noise(depth) {\",\r\n\t\t\"\tvar r=zRange/Math.pow(2,shapeLod-depth-1);\",\r\n\t\t\"\treturn Math.random()*2*r-r;\",\r\n\t\t\"}\",\r\n\t\t\"vertices[2]=0.0;\",\r\n\t\t\"var i0,i1,i2,i3;\",\r\n\t\t\"var j0,j1,j2,j3;\",\r\n\t\t\"for (var depth=shapeLod-1;depth>=0;depth--) {\",\r\n\t\t\"\tvar d=1<<depth;\",\r\n\t\t\"\t// diamond step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti1=i2-d;\",\r\n\t\t\"\t\t\tj1=j2-d;\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i1,j1)]+vertices[zOffset(i1,j3)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i3,j1)]+vertices[zOffset(i3,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"\t// square step\",\r\n\t\t\"\tfor (i2=d;i2<res;i2+=2*d) {\",\r\n\t\t\"\t\tfor (j2=d;j2<res;j2+=2*d) {\",\r\n\t\t\"\t\t\ti0=(i2-2*d)&mask;\",\r\n\t\t\"\t\t\tj0=(j2-2*d)&mask;\",\r\n\t\t\"\t\t\ti1=(i2-d);\",\r\n\t\t\"\t\t\tj1=(j2-d);\",\r\n\t\t\"\t\t\ti3=(i2+d)&mask;\",\r\n\t\t\"\t\t\tj3=(j2+d)&mask;\",\r\n\t\t\"\t\t\tvertices[zOffset(i2,j1)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j0)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i3,j1)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t\tvertices[zOffset(i1,j2)]=(\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i0,j2)]+vertices[zOffset(i1,j1)]+\",\r\n\t\t\"\t\t\t\tvertices[zOffset(i2,j2)]+vertices[zOffset(i1,j3)]\",\r\n\t\t\"\t\t\t)/4+noise(depth);\",\r\n\t\t\"\t\t}\",\r\n\t\t\"\t}\",\r\n\t\t\"}\"\r\n\t);\r\n\tif (noFaces) {\r\n\t\tlines.a(\r\n\t\t\t\"for (i0=0;i0<res;i0++) vertices[zOffset(i0,res)]=vertices[zOffset(i0,0)];\",\r\n\t\t\t\"for (j0=0;j0<res;j0++) vertices[zOffset(res,j0)]=vertices[zOffset(0,j0)];\",\r\n\t\t\t\"vertices[zOffset(res,res)]=vertices[zOffset(0,0)];\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\nTerrain.prototype.writeMeshVertex=function(){\r\n\tvar noFaces=(this.usesElements() && !this.hasColorsPerFace);\r\n\tvar lines=new Lines;\r\n\tlines.a(\r\n\t\t\"vertices[vertexOffset+0]=x;\",\r\n\t\t\"vertices[vertexOffset+1]=y;\",\r\n\t\t(noFaces\r\n\t\t\t?\"// vertices[vertexOffset+2] already written\"\r\n\t\t\t:\"vertices[vertexOffset+2]=vertices[zOffset((i+di)&mask,(j+dj)&mask)];\"\r\n\t\t)\r\n\t);\r\n\tvar iv=3;\r\n\tif (this.hasNormals) {\r\n\t\tlines.a(\r\n\t\t\t\"var d=4*xyRange/res;\",\r\n\t\t\t\"var normal=normalize([\",\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset(i,(j-1)&mask)]-vertices[zOffset(i,(j+1)&mask)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di)&mask,(j+dj-1)&mask)]-vertices[zOffset((i+di)&mask,(j+dj+1)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t(noFaces\r\n\t\t\t\t?\"\t(vertices[zOffset((i-1)&mask,j)]-vertices[zOffset((i+1)&mask,j)])/d,\"\r\n\t\t\t\t:\"\t(vertices[zOffset((i+di-1)&mask,(j+dj)&mask)]-vertices[zOffset((i+di+1)&mask,(j+dj)&mask)])/d,\"\r\n\t\t\t),\r\n\t\t\t\"1]);\",\r\n\t\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=normal[0];\",\r\n\t\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=normal[1];\",\r\n\t\t\t\"vertices[vertexOffset+\"+(iv++)+\"]=normal[2];\"\r\n\t\t);\r\n\t}\r\n\tlines.a(this.writeMeshVertexColors(iv));\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Terrain;\r\n","var Lines=require('../lines.js');\r\nvar Colorgen=require('../colorgen.js');\r\nvar Shape=require('./shape.js');\r\n\r\nvar Triangle=function(elementIndexBits,hasReflections,hasColorsPerVertex,hasColorsPerFace,colorAttrs){\r\n\tShape.apply(this,arguments);\r\n};\r\nTriangle.prototype=Object.create(Shape.prototype);\r\nTriangle.prototype.constructor=Triangle;\r\nTriangle.prototype.writeArrays=function(){\r\n\tvar colorgen=new Colorgen(this.colorAttrs,0);\r\n\tvar colorDataForFace;\r\n\tvar writeColorData=function(){\r\n\t\tif (this.hasColorsPerFace && !this.hasColorsPerVertex) {\r\n\t\t\tif (colorDataForFace===undefined) {\r\n\t\t\t\tcolorDataForFace=colorgen.getNextColorString();\r\n\t\t\t}\r\n\t\t\treturn colorDataForFace;\r\n\t\t} else {\r\n\t\t\treturn colorgen.getNextColorString();\r\n\t\t}\r\n\t}.bind(this);\r\n\tvar lines=new Lines(\r\n\t\t\"var nVertices=3;\",\r\n\t\t\"var vertices=new Float32Array([\",\r\n\t\t\"\t//                   x                      y\"+colorgen.getHeaderString(),\r\n\t\t\"\t-Math.sin(0/3*Math.PI), Math.cos(0/3*Math.PI),\"+writeColorData(),\r\n\t\t\"\t-Math.sin(2/3*Math.PI), Math.cos(2/3*Math.PI),\"+writeColorData(),\r\n\t\t\"\t-Math.sin(4/3*Math.PI), Math.cos(4/3*Math.PI),\"+writeColorData(),\r\n\t\t\"]);\"\r\n\t);\r\n\tif (this.usesElements()) {\r\n\t\tlines.a(\r\n\t\t\t\"var nElements=3;\",\r\n\t\t\t\"var elements=new \"+this.getElementIndexJsArray()+\"([0,1,2]);\"\r\n\t\t);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Triangle;\r\n","var Lines=require('./lines.js');\r\nvar listeners=require('./listeners.js');\r\n\r\nvar Vector=function(varName,optName,components,options){\r\n\tthis.varName=varName;\r\n\tthis.optName=optName;\r\n\tthis.components=components.split('');\r\n\tthis.values=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c];\r\n\t});\r\n\tthis.inputs=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.input'];\r\n\t});\r\n\tthis.minValues=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.min'];\r\n\t});\r\n\tthis.maxValues=this.components.map(function(c){\r\n\t\treturn options[optName+'.'+c+'.max'];\r\n\t});\r\n\tthis.nVars=0;\r\n\tthis.nSliders=0; // sliders are <input> elements with values that can be populated by the browser, disregarding default value\r\n\tthis.nMousemoves=0;\r\n\tthis.modeConstant=true;\r\n\tthis.modeFloats=false;\r\n\tthis.components.forEach(function(c,i){\r\n\t\tvar inputType=options[optName+'.'+c+'.input'];\r\n\t\tif (inputType!='constant') {\r\n\t\t\tthis.modeConstant=false;\r\n\t\t\tif (this.nVars++!=i) {\r\n\t\t\t\tthis.modeFloats=true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.nSliders+=inputType=='slider';\r\n\t\tthis.nMousemoves+=(inputType=='mousemovex' || inputType=='mousemovey');\r\n\t},this);\r\n\tif (this.nVars==1) {\r\n\t\tthis.modeFloats=true;\r\n\t}\r\n\tthis.modeVector= !this.modeConstant && !this.modeFloats;\r\n\tvar nonnegativeLimits=this.minValues.every(function(v){return v>=0}) && this.maxValues.every(function(v){return v>=0});\r\n\tif (nonnegativeLimits) {\r\n\t\tthis.formatValue=function(value){\r\n\t\t\treturn value.toFixed(3);\r\n\t\t};\r\n\t} else {\r\n\t\tthis.formatValue=function(value){\r\n\t\t\treturn (value<=0 ? value<0 ? '' /* - */ : ' ' : '+')+value.toFixed(3);\r\n\t\t};\r\n\t}\r\n};\r\nVector.prototype.updateFnName=function(){\r\n\tfunction capitalize(s) {\r\n\t\treturn s.charAt(0).toUpperCase()+s.slice(1);\r\n\t}\r\n\treturn 'update'+capitalize(this.varName);\r\n};\r\n// fns that can be mapped over components:\r\nVector.prototype.varNameC=function(c){\r\n\treturn this.varName+c.toUpperCase();\r\n};\r\nVector.prototype.componentValue=function(c,i){\r\n\tif (this.inputs[i]=='constant') {\r\n\t\treturn this.formatValue(this.values[i]);\r\n\t} else if (this.inputs[i]=='slider') {\r\n\t\treturn \"parseFloat(document.getElementById('\"+this.optName+\".\"+c+\"').value)\";\r\n\t} else if (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\treturn this.varNameC(c);\r\n\t}\r\n}\r\n// public:\r\nVector.prototype.getJsInterfaceLines=function(writeListenerArgs,canvasMousemoveListener){\r\n\tvar writeManyListenersLines=function(){\r\n\t\tvar lines=new Lines;\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]!='slider') return;\r\n\t\t\tvar listener=new listeners.SliderListener(this.optName+'.'+c);\r\n\t\t\tlistener.enter()\r\n\t\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t\t.post(this.updateFnName()+\"();\");\r\n\t\t\tlines.a(\r\n\t\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t\t);\r\n\t\t},this);\r\n\t\treturn lines;\r\n\t}.bind(this);\r\n\tvar writeOneListenerLines=function(){\r\n\t\tvar listener=new listeners.MultipleSliderListener(\"[id^=\\\"\"+this.optName+\".\\\"]\");\r\n\t\tlistener.enter()\r\n\t\t\t.log(\"console.log(this.id,'input value:',parseFloat(this.value));\")\r\n\t\t\t.post(this.updateFnName()+\"();\");\r\n\t\treturn new Lines(\r\n\t\t\tlistener.write.apply(listener,writeListenerArgs)\r\n\t\t);\r\n\t}.bind(this);\r\n\tif (this.modeConstant) {\r\n\t\treturn new Lines;\r\n\t}\r\n\tvar lines=new Lines;\r\n\tvar manyListenersLines=writeManyListenersLines();\r\n\tvar oneListenerLines=writeOneListenerLines();\r\n\tlines.a(\r\n\t\tthis.writeJsInterfaceGlslLines()\r\n\t);\r\n\tif (this.nSliders>0) {\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\tlines.a(\r\n\t\t\t\t\t\"var \"+this.varNameC(c)+\"=\"+this.formatValue(this.values[i])+\";\"\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tlines.a(\r\n\t\t\tthis.writeJsInterfaceUpdateFnLines().wrap(\r\n\t\t\t\t\"function \"+this.updateFnName()+\"() {\",\r\n\t\t\t\t\"}\"\r\n\t\t\t),\r\n\t\t\tthis.updateFnName()+\"();\",\r\n\t\t\tmanyListenersLines.data.length<=oneListenerLines.data.length ? manyListenersLines : oneListenerLines\r\n\t\t);\r\n\t}\r\n\tif (this.nMousemoves>0) {\r\n\t\tvar entry=canvasMousemoveListener.enter();\r\n\t\tthis.components.forEach(function(c,i){\r\n\t\t\tif (this.inputs[i]=='mousemovex' || this.inputs[i]=='mousemovey') {\r\n\t\t\t\tif (this.nSliders==0) {\r\n\t\t\t\t\tentry.minMaxVarFloat(this.inputs[i],this.varNameC(c),\r\n\t\t\t\t\t\tthis.formatValue(this.minValues[i]),\r\n\t\t\t\t\t\tthis.formatValue(this.maxValues[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tentry.minMaxFloat(this.inputs[i],this.varNameC(c),\r\n\t\t\t\t\t\tthis.formatValue(this.minValues[i]),\r\n\t\t\t\t\t\tthis.formatValue(this.maxValues[i])\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tentry.log(\"console.log('\"+this.optName+\".\"+c+\" input value:',\"+this.varNameC(c)+\");\");\r\n\t\t\t\tthis.addPostToEntryForComponent(entry,c);\r\n\t\t\t}\r\n\t\t},this);\r\n\t\tthis.addPostToEntryAfterComponents(entry);\r\n\t}\r\n\treturn lines;\r\n};\r\n\r\nmodule.exports=Vector;\r\n"],"sourceRoot":"."}